; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\ilyak\Desktop\YAP\Курсач\Debug\сub_ver_2.0.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__20BB4341_malloc@h DB 01H
__1C12C7C8_сub_ver_2@0@cpp DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	__vfscanf_l
PUBLIC	_scanf
PUBLIC	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z			; cub_9
PUBLIC	?cub@@YAPAPAHHPAPAH@Z				; cub
PUBLIC	?check@@YAHH@Z					; check
PUBLIC	_main
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_01HIHLOKLC@1@				; `string'
PUBLIC	??_C@_07FPFIAEAJ@1?54?62?53@			; `string'
PUBLIC	??_C@_04IDILIIH@?$CF3d?5@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_02CIBPIIHJ@n?$DN@				; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_08HEJHNOEB@Prostite@			; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vfscanf:PROC
EXTRN	__imp__malloc:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_08HEJHNOEB@Prostite@
CONST	SEGMENT
??_C@_08HEJHNOEB@Prostite@ DB 'Prostite', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CIBPIIHJ@n?$DN@
CONST	SEGMENT
??_C@_02CIBPIIHJ@n?$DN@ DB 'n=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04IDILIIH@?$CF3d?5@
CONST	SEGMENT
??_C@_04IDILIIH@?$CF3d?5@ DB '%3d ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FPFIAEAJ@1?54?62?53@
CONST	SEGMENT
??_C@_07FPFIAEAJ@1?54?62?53@ DB '1 4', 0aH, '2 3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1@
CONST	SEGMENT
??_C@_01HIHLOKLC@1@ DB '1', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ilyak\Desktop\YAP\Курсач\сub_ver_2.0.cpp
;	COMDAT _main
_TEXT	SEGMENT
_n$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT

; 2849 : int main() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __1C12C7C8_сub_ver_2@0@cpp
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_02CIBPIIHJ@n?$DN@
	call	_printf
	lea	eax, DWORD PTR _n$[ebp]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd@
	call	_scanf
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	call	_printf
	mov	eax, DWORD PTR _n$[ebp]
	imul	eax, eax
	push	eax
	call	?check@@YAHH@Z				; check
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN2@main

; 2850 : 	int n, prov, i;
; 2851 : 	int** tab = 0;
; 2852 : 
; 2853 : 	printf("n=");
; 2854 : 	scanf("%d", &n);
; 2855 : 	printf("\n");
; 2856 : 
; 2857 : 	prov = check(n * n);
; 2858 : 	if (prov == 0)
; 2859 : 		printf("Prostite");

	push	OFFSET ??_C@_08HEJHNOEB@Prostite@
	call	_printf
	add	esp, 4

; 2868 : 	}
; 2869 : }

	xor	eax, eax
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@main:

; 2860 : 	else {
; 2861 : 		if (n > 10) {

	mov	ecx, DWORD PTR _n$[ebp]
	push	0
	cmp	ecx, 10					; 0000000aH
	jle	SHORT $LN4@main

; 2862 : 			int N = n / 3;

	mov	eax, 1431655766				; 55555556H
	imul	ecx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 2863 : 			tab = cub(N, 0);

	push	eax
	call	?cub@@YAPAPAHHPAPAH@Z			; cub

; 2864 : 			cub(n, tab);

	push	eax
	push	DWORD PTR _n$[ebp]
	call	?cub@@YAPAPAHHPAPAH@Z			; cub
	add	esp, 16					; 00000010H

; 2868 : 	}
; 2869 : }

	xor	eax, eax
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN4@main:

; 2865 : 		}
; 2866 : 		else
; 2867 : 			cub(n, 0);

	push	ecx
	call	?cub@@YAPAPAHHPAPAH@Z			; cub

; 2868 : 	}
; 2869 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	xor	ecx, ebp
	xor	eax, eax
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ilyak\Desktop\YAP\Курсач\сub_ver_2.0.cpp
;	COMDAT ?check@@YAHH@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?check@@YAHH@Z PROC					; check, COMDAT

; 2835 : int check(int n) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __1C12C7C8_сub_ver_2@0@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	esi, DWORD PTR _n$[ebp]
	cmp	esi, 9
	je	SHORT $LN13@check

; 2836 : 	if (n != 9)
; 2837 : 		while (n % 9 == 0 && n != 0)

	mov	eax, 954437177				; 38e38e39H
	imul	esi
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, esi
	lea	ecx, DWORD PTR [eax+eax*8]
	sub	edx, ecx
	jne	SHORT $LN13@check
	npad	1
$LL2@check:
	test	esi, esi
	je	SHORT $LN13@check

; 2838 : 			n /= 9;

	mov	esi, eax
	mov	eax, 954437177				; 38e38e39H
	imul	esi
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, esi
	lea	ecx, DWORD PTR [eax+eax*8]
	sub	edx, ecx
	je	SHORT $LL2@check
$LN13@check:

; 2839 : 	if (n % 4 == 0)

	mov	ecx, esi
	and	ecx, -2147483645			; 80000003H
	jns	SHORT $LN14@check
	dec	ecx
	or	ecx, -4					; fffffffcH
	inc	ecx
$LN14@check:

; 2840 : 		n /= 4;
; 2841 : 	if (n == 1)

	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	test	ecx, ecx
	cmovne	eax, esi
	dec	eax
	neg	eax
	pop	esi
	sbb	eax, eax
	inc	eax

; 2842 : 		return 1;
; 2843 : 	else
; 2844 : 		return 0;
; 2845 : }

	pop	ebp
	ret	0
?check@@YAHH@Z ENDP					; check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ilyak\Desktop\YAP\Курсач\сub_ver_2.0.cpp
;	COMDAT ?cub@@YAPAPAHHPAPAH@Z
_TEXT	SEGMENT
_tab$GSCopy$1$ = -20					; size = 4
_table$1$ = -16						; size = 4
tv1092 = -12						; size = 4
tv1088 = -12						; size = 4
tv1030 = -12						; size = 4
_sum$1 = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_n$ = 8							; size = 4
_tab$ = 12						; size = 4
?cub@@YAPAPAHHPAPAH@Z PROC				; cub, COMDAT

; 2742 : int** cub(int n, int** tab) {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	eax, DWORD PTR _tab$[ebp]
	mov	ecx, OFFSET __1C12C7C8_сub_ver_2@0@cpp
	push	ebx
	mov	ebx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _tab$GSCopy$1$[ebp], eax
	call	@__CheckForDebuggerJustMyCode@4
	cmp	ebx, 1
	jne	SHORT $LN23@cub

; 2743 : 	if (n == 1)
; 2744 : 		printf("1");

	push	OFFSET ??_C@_01HIHLOKLC@1@
	call	_printf
	add	esp, 4
	pop	ebx

; 2830 : 	}
; 2831 : 
; 2832 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@cub:

; 2745 : 	else if (n == 2)

	cmp	ebx, 2
	jne	SHORT $LN25@cub

; 2746 : 		printf("1 4\n2 3");

	push	OFFSET ??_C@_07FPFIAEAJ@1?54?62?53@
	call	_printf
	add	esp, 4
	pop	ebx

; 2830 : 	}
; 2831 : 
; 2832 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN25@cub:

; 2747 : 	else {
; 2748 : 		int flag = 0;
; 2749 : 		int i;
; 2750 : 		int** table = (int**)malloc(n * sizeof(*table));

	xor	ecx, ecx
	mov	eax, ebx
	mov	edx, 4
	mul	edx
	push	esi
	push	edi
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	edi, eax
	xor	esi, esi
	mov	DWORD PTR _table$1$[ebp], edi

; 2751 : 		for (i = 0; i < n; i++)

	test	ebx, ebx
	jle	SHORT $LN6@cub
	npad	1
$LL4@cub:

; 2752 : 			table[i] = (int*)malloc(n * sizeof(table));

	xor	ecx, ecx
	mov	eax, ebx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	DWORD PTR __imp__malloc
	mov	DWORD PTR [edi+esi*4], eax
	add	esp, 4
	inc	esi
	cmp	esi, ebx
	jl	SHORT $LL4@cub
	lea	esi, DWORD PTR [ebx*4]
	xor	edx, edx
	npad	3
$LL7@cub:

; 2753 : 		int j;
; 2754 : 
; 2755 : 		//зануляем
; 2756 : 		for (i = 0; i < n; i++) {
; 2757 : 			for (j = 0; j < n; j++)

	mov	edi, DWORD PTR [edi+edx*4]
	mov	ecx, esi
	shr	ecx, 2
	xor	eax, eax
	inc	edx
	rep stosd
	mov	edi, DWORD PTR _table$1$[ebp]
	cmp	edx, ebx
	jl	SHORT $LL7@cub
$LN6@cub:

; 2758 : 				table[i][j] = 0;
; 2759 : 		}
; 2760 : 
; 2761 : 		j = 0 /*строки*/;
; 2762 : 		int k = 0 /*столбцы*/;
; 2763 : 
; 2764 : 		i = 1;
; 2765 : 		//первый квадрант всегда одинаковый drurddlld
; 2766 : 		table[j++][k] = i++;

	mov	ecx, DWORD PTR [edi]

; 2767 : 		table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx], 1
	mov	DWORD PTR [eax], 2

; 2768 : 		table[j--][k] = i++;

	mov	DWORD PTR [eax+4], 3

; 2769 : 		table[j][k++] = i++;

	mov	DWORD PTR [ecx+4], 4

; 2770 : 		table[j++][k] = i++;

	mov	DWORD PTR [ecx+8], 5

; 2771 : 		table[j++][k] = i++;

	mov	DWORD PTR [eax+8], 6

; 2772 : 		table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], 7

; 2773 : 		table[j][k--] = i++;

	mov	DWORD PTR [eax+4], 8

; 2774 : 		table[j++][k] = i++;

	mov	DWORD PTR [eax], 9

; 2775 : 
; 2776 : 		//второй квадрант
; 2777 : 		if ((n * n) % 4 == 0) { //ddrrulurr

	mov	eax, ebx
	imul	eax, ebx
	mov	DWORD PTR tv1088[ebp], eax
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN61@cub
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN61@cub:
	mov	esi, DWORD PTR [edi+12]
	mov	ecx, DWORD PTR [edi+16]
	mov	edx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi], 10			; 0000000aH
	test	eax, eax
	jne	SHORT $LN27@cub

; 2778 : 			table[j++][k] = i++;
; 2779 : 			table[j++][k] = i++;

	mov	DWORD PTR [ecx], 11			; 0000000bH

; 2780 : 			table[j][k++] = i++;

	mov	DWORD PTR [edx], 12			; 0000000cH

; 2781 : 			table[j][k++] = i++;

	mov	DWORD PTR [edx+4], 13			; 0000000dH

; 2782 : 			table[j--][k] = i++;

	mov	DWORD PTR [edx+8], 14			; 0000000eH

; 2783 : 			table[j][k--] = i++;
; 2784 : 			table[j--][k] = i++;
; 2785 : 			table[j][k++] = i++;
; 2786 : 			table[j][k] = i++;
; 2787 : 			//table[j][k + 1] = (*i)++;
; 2788 : 
; 2789 : 			flag = 23;

	lea	edx, DWORD PTR [eax+23]
	mov	DWORD PTR [ecx+8], 15			; 0000000fH
	mov	DWORD PTR [ecx+4], 16			; 00000010H
	lea	ecx, DWORD PTR [eax+3]
	mov	DWORD PTR [esi+4], 17			; 00000011H
	mov	DWORD PTR [esi+8], 18			; 00000012H

; 2790 : 		}

	jmp	SHORT $LN28@cub
$LN27@cub:

; 2791 : 		else {//rrdlldrrd
; 2792 : 			table[j][k++] = i++;
; 2793 : 			table[j][k++] = i++;

	mov	DWORD PTR [esi+4], 11			; 0000000bH

; 2794 : 			table[j++][k] = i++;

	mov	DWORD PTR [esi+8], 12			; 0000000cH

; 2795 : 			table[j][k--] = i++;

	mov	DWORD PTR [ecx+8], 13			; 0000000dH

; 2796 : 			table[j][k--] = i++;

	mov	DWORD PTR [ecx+4], 14			; 0000000eH

; 2797 : 			table[j++][k] = i++;

	mov	DWORD PTR [ecx], 15			; 0000000fH
	mov	ecx, 5

; 2798 : 			table[j][k++] = i++;

	mov	DWORD PTR [edx], 16			; 00000010H

; 2799 : 			table[j][k++] = i++;

	mov	DWORD PTR [edx+4], 17			; 00000011H

; 2800 : 			table[j][k] = i++;

	mov	DWORD PTR [edx+8], 18			; 00000012H

; 2801 : 
; 2802 : 			flag = 39;

	lea	edx, DWORD PTR [ecx+34]
$LN28@cub:

; 2803 : 		}
; 2804 : 		int sum = n * n - 18;

	mov	eax, DWORD PTR tv1088[ebp]
	add	eax, -18				; ffffffeeH
	mov	DWORD PTR _sum$1[ebp], eax

; 2805 : 
; 2806 : 
; 2807 : 		if (tab == 0) {

	mov	eax, DWORD PTR _tab$GSCopy$1$[ebp]
	test	eax, eax
	jne	SHORT $LN29@cub

; 2808 : 			flag = cub_9(table, flag, i, j, k, n, &sum, 0, -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	eax
	lea	eax, DWORD PTR _sum$1[ebp]
	push	eax
	push	ebx
	push	2
	push	ecx
	push	19					; 00000013H
	push	edx
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2809 : 			//printf("flag=%d\n", flag);
; 2810 : 
; 2811 : 			//печатаем
; 2812 : 			for (int i = 0; i < n; i++) {

	test	ebx, ebx
	jle	$LN18@cub

; 2808 : 			flag = cub_9(table, flag, i, j, k, n, &sum, 0, -1, -1, -1);

	mov	DWORD PTR tv1092[ebp], ebx
$LL13@cub:

; 2813 : 				for (int j = 0; j < n; j++)

	xor	esi, esi
$LL16@cub:

; 2814 : 					printf("%3d ", table[i][j]);

	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+esi*4]
	push	OFFSET ??_C@_04IDILIIH@?$CF3d?5@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jl	SHORT $LL16@cub

; 2815 : 				printf("\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	call	_printf
	add	esp, 4
	add	edi, 4
	sub	DWORD PTR tv1092[ebp], 1
	jne	SHORT $LL13@cub

; 2816 : 			}
; 2817 : 			printf("\n");
; 2818 : 		}

	jmp	SHORT $LN62@cub
$LN29@cub:

; 2819 : 		else {
; 2820 : 			flag = cub_9(table, flag, i, j, k, n, &sum, tab, 2, 1, 0);

	push	0
	push	1
	push	2
	push	eax
	lea	eax, DWORD PTR _sum$1[ebp]
	push	eax
	push	ebx
	push	2
	push	ecx
	push	19					; 00000013H
	push	edx
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2821 : 			for (int i = 0; i < n; i++) {

	test	ebx, ebx
	jle	SHORT $LN18@cub

; 2819 : 		else {
; 2820 : 			flag = cub_9(table, flag, i, j, k, n, &sum, tab, 2, 1, 0);

	mov	DWORD PTR tv1030[ebp], ebx
$LL19@cub:

; 2822 : 				for (int j = 0; j < n; j++)

	xor	esi, esi
$LL22@cub:

; 2823 : 					printf("%3d ", table[i][j]);

	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+esi*4]
	push	OFFSET ??_C@_04IDILIIH@?$CF3d?5@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, ebx
	jl	SHORT $LL22@cub

; 2824 : 				printf("\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	call	_printf
	add	esp, 4
	add	edi, 4
	sub	DWORD PTR tv1030[ebp], 1
	jne	SHORT $LL19@cub
$LN62@cub:

; 2825 : 			}
; 2826 : 			printf("\n");
; 2827 : 		}
; 2828 : 
; 2829 : 		return table;

	mov	edi, DWORD PTR _table$1$[ebp]
$LN18@cub:
	push	OFFSET ??_C@_01EEMJAFIK@?6@
	call	_printf

; 2830 : 	}
; 2831 : 
; 2832 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 4
	mov	eax, edi
	xor	ecx, ebp
	pop	edi
	pop	esi
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?cub@@YAPAPAHHPAPAH@Z ENDP				; cub
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\ilyak\Desktop\YAP\Курсач\сub_ver_2.0.cpp
;	COMDAT ?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z
_TEXT	SEGMENT
_j$104$ = -72						; size = 4
tv23487 = -72						; size = 4
tv23477 = -72						; size = 4
tv23452 = -72						; size = 4
tv23434 = -72						; size = 4
tv23416 = -72						; size = 4
tv23380 = -72						; size = 4
tv23378 = -72						; size = 4
tv23376 = -72						; size = 4
tv23374 = -72						; size = 4
tv23023 = -72						; size = 4
tv23016 = -72						; size = 4
tv22979 = -72						; size = 4
tv22956 = -72						; size = 4
tv22941 = -72						; size = 4
tv22932 = -72						; size = 4
tv22924 = -72						; size = 4
tv22912 = -72						; size = 4
tv22909 = -72						; size = 4
tv22904 = -72						; size = 4
tv22901 = -72						; size = 4
tv22898 = -72						; size = 4
tv22895 = -72						; size = 4
tv22874 = -72						; size = 4
tv22868 = -72						; size = 4
tv22860 = -72						; size = 4
tv22854 = -72						; size = 4
tv22842 = -72						; size = 4
tv22832 = -72						; size = 4
tv22826 = -72						; size = 4
tv22820 = -72						; size = 4
tv22812 = -72						; size = 4
tv22806 = -72						; size = 4
tv22794 = -72						; size = 4
tv22494 = -72						; size = 4
tv22450 = -72						; size = 4
tv22436 = -72						; size = 4
tv22392 = -72						; size = 4
tv22363 = -72						; size = 4
tv22350 = -72						; size = 4
tv22076 = -72						; size = 4
tv22054 = -72						; size = 4
tv22046 = -72						; size = 4
tv22044 = -72						; size = 4
tv22042 = -72						; size = 4
tv22036 = -72						; size = 4
tv22034 = -72						; size = 4
tv22032 = -72						; size = 4
tv22030 = -72						; size = 4
tv22019 = -72						; size = 4
tv21962 = -72						; size = 4
tv21954 = -72						; size = 4
tv21948 = -72						; size = 4
tv21934 = -72						; size = 4
tv21926 = -72						; size = 4
tv21920 = -72						; size = 4
tv21904 = -72						; size = 4
tv21890 = -72						; size = 4
tv21874 = -72						; size = 4
tv21859 = -72						; size = 4
tv21852 = -72						; size = 4
_j$189$ = -68						; size = 4
_j$105$ = -68						; size = 4
_j$94$ = -68						; size = 4
_k$119$ = -68						; size = 4
_k$106$ = -68						; size = 4
tv23047 = -68						; size = 4
tv23040 = -68						; size = 4
tv22727 = -68						; size = 4
tv22689 = -68						; size = 4
tv22557 = -68						; size = 4
tv22539 = -68						; size = 4
tv22527 = -68						; size = 4
tv22510 = -68						; size = 4
tv22478 = -68						; size = 4
tv22464 = -68						; size = 4
tv22419 = -68						; size = 4
tv22345 = -68						; size = 4
tv22339 = -68						; size = 4
tv22330 = -68						; size = 4
tv22290 = -68						; size = 4
tv22260 = -68						; size = 4
tv22240 = -68						; size = 4
tv22208 = -68						; size = 4
tv22202 = -68						; size = 4
tv22196 = -68						; size = 4
tv22190 = -68						; size = 4
tv22178 = -68						; size = 4
tv22164 = -68						; size = 4
tv22150 = -68						; size = 4
tv22134 = -68						; size = 4
tv22118 = -68						; size = 4
tv22111 = -68						; size = 4
tv22104 = -68						; size = 4
tv22090 = -68						; size = 4
tv22011 = -68						; size = 4
tv21975 = -68						; size = 4
tv21938 = -68						; size = 4
tv21894 = -68						; size = 4
tv21734 = -68						; size = 4
tv21732 = -68						; size = 4
tv21730 = -68						; size = 4
tv21728 = -68						; size = 4
_J$2$ = -68						; size = 4
_j$143$ = -64						; size = 4
_j$32$ = -64						; size = 4
_k$197$ = -64						; size = 4
_k$97$ = -64						; size = 4
tv23506 = -64						; size = 4
tv23504 = -64						; size = 4
tv23502 = -64						; size = 4
tv23499 = -64						; size = 4
tv23481 = -64						; size = 4
tv23430 = -64						; size = 4
tv23404 = -64						; size = 4
tv23392 = -64						; size = 4
tv23372 = -64						; size = 4
tv23366 = -64						; size = 4
tv23360 = -64						; size = 4
tv23354 = -64						; size = 4
tv23348 = -64						; size = 4
tv23342 = -64						; size = 4
tv23336 = -64						; size = 4
tv23121 = -64						; size = 4
tv23103 = -64						; size = 4
tv23093 = -64						; size = 4
tv23078 = -64						; size = 4
tv23073 = -64						; size = 4
tv22753 = -64						; size = 4
tv22741 = -64						; size = 4
tv22603 = -64						; size = 4
tv22589 = -64						; size = 4
tv22577 = -64						; size = 4
tv22565 = -64						; size = 4
tv22555 = -64						; size = 4
tv22538 = -64						; size = 4
tv22537 = -64						; size = 4
tv22524 = -64						; size = 4
tv22413 = -64						; size = 4
tv22411 = -64						; size = 4
tv22357 = -64						; size = 4
tv22291 = -64						; size = 4
tv22271 = -64						; size = 4
tv22195 = -64						; size = 4
tv22189 = -64						; size = 4
tv22171 = -64						; size = 4
tv22153 = -64						; size = 4
tv22135 = -64						; size = 4
tv22131 = -64						; size = 4
tv22023 = -64						; size = 4
tv21825 = -64						; size = 4
tv21817 = -64						; size = 4
tv21811 = -64						; size = 4
tv21705 = -64						; size = 4
tv21701 = -64						; size = 4
tv21695 = -64						; size = 4
tv21687 = -64						; size = 4
tv21653 = -64						; size = 4
_j$190$ = -60						; size = 4
_j$136$ = -60						; size = 4
_j$133$ = -60						; size = 4
_j$95$ = -60						; size = 4
_k$150$ = -60						; size = 4
_k$124$ = -60						; size = 4
tv22642 = -60						; size = 4
tv22612 = -60						; size = 4
tv22592 = -60						; size = 4
tv22513 = -60						; size = 4
tv22405 = -60						; size = 4
tv22197 = -60						; size = 4
tv22175 = -60						; size = 4
tv22137 = -60						; size = 4
tv22105 = -60						; size = 4
tv22097 = -60						; size = 4
tv22089 = -60						; size = 4
tv22081 = -60						; size = 4
tv22073 = -60						; size = 4
tv22065 = -60						; size = 4
tv22057 = -60						; size = 4
tv21999 = -60						; size = 4
tv21987 = -60						; size = 4
tv21805 = -60						; size = 4
tv21797 = -60						; size = 4
tv21790 = -60						; size = 4
tv21783 = -60						; size = 4
tv21771 = -60						; size = 4
tv21760 = -60						; size = 4
tv21748 = -60						; size = 4
tv21737 = -60						; size = 4
tv21727 = -60						; size = 4
tv21725 = -60						; size = 4
tv21719 = -60						; size = 4
tv21716 = -60						; size = 4
tv21711 = -60						; size = 4
tv21706 = -60						; size = 4
tv21703 = -60						; size = 4
tv21685 = -60						; size = 4
tv23402 = -56						; size = 4
tv23390 = -56						; size = 4
tv23382 = -56						; size = 4
tv23368 = -56						; size = 4
tv23362 = -56						; size = 4
tv23358 = -56						; size = 4
tv23352 = -56						; size = 4
tv23344 = -56						; size = 4
tv23338 = -56						; size = 4
tv23334 = -56						; size = 4
tv23151 = -56						; size = 4
tv22217 = -56						; size = 4
tv22211 = -56						; size = 4
tv22207 = -56						; size = 4
tv22181 = -56						; size = 4
tv22103 = -56						; size = 4
tv22095 = -56						; size = 4
tv22087 = -56						; size = 4
tv22071 = -56						; size = 4
tv22063 = -56						; size = 4
tv22055 = -56						; size = 4
tv22047 = -56						; size = 4
tv22035 = -56						; size = 4
tv22009 = -56						; size = 4
tv21971 = -56						; size = 4
tv21910 = -56						; size = 4
tv21761 = -56						; size = 4
tv21747 = -56						; size = 4
tv21738 = -56						; size = 4
tv21709 = -56						; size = 4
tv21698 = -56						; size = 4
tv21691 = -56						; size = 4
tv21647 = -56						; size = 4
_j$40$ = -52						; size = 4
_j$37$ = -52						; size = 4
_k$50$ = -52						; size = 4
tv23356 = -52						; size = 4
tv23350 = -52						; size = 4
tv23332 = -52						; size = 4
tv22682 = -52						; size = 4
tv22267 = -52						; size = 4
tv22213 = -52						; size = 4
tv22079 = -52						; size = 4
tv22021 = -52						; size = 4
tv22007 = -52						; size = 4
tv21997 = -52						; size = 4
tv21985 = -52						; size = 4
tv21880 = -52						; size = 4
tv21864 = -52						; size = 4
tv21839 = -52						; size = 4
tv21769 = -52						; size = 4
tv21758 = -52						; size = 4
tv21724 = -52						; size = 4
tv21721 = -52						; size = 4
tv21715 = -52						; size = 4
tv21714 = -52						; size = 4
_j$41$ = -48						; size = 4
_j$38$ = -48						; size = 4
tv23195 = -48						; size = 4
tv22702 = -48						; size = 4
tv22249 = -48						; size = 4
tv22241 = -48						; size = 4
tv22225 = -48						; size = 4
tv22121 = -48						; size = 4
tv22045 = -48						; size = 4
tv22033 = -48						; size = 4
tv21995 = -48						; size = 4
tv21983 = -48						; size = 4
tv21786 = -48						; size = 4
tv21745 = -48						; size = 4
tv21735 = -48						; size = 4
tv21704 = -48						; size = 4
tv21651 = -48						; size = 4
tv21649 = -48						; size = 4
_j$187$ = -44						; size = 4
_j$174$ = -44						; size = 4
_j$169$ = -44						; size = 4
_j$145$ = -44						; size = 4
_j$118$ = -44						; size = 4
_j$10$ = -44						; size = 4
_k$145$ = -44						; size = 4
_k$135$ = -44						; size = 4
_k$96$ = -44						; size = 4
_k$24$ = -44						; size = 4
_k$19$ = -44						; size = 4
tv23493 = -44						; size = 4
tv23491 = -44						; size = 4
tv23489 = -44						; size = 4
tv23470 = -44						; size = 4
tv23420 = -44						; size = 4
tv23418 = -44						; size = 4
tv23400 = -44						; size = 4
tv23384 = -44						; size = 4
tv23029 = -44						; size = 4
tv23010 = -44						; size = 4
tv22997 = -44						; size = 4
tv22769 = -44						; size = 4
tv22757 = -44						; size = 4
tv22744 = -44						; size = 4
tv22743 = -44						; size = 4
tv22733 = -44						; size = 4
tv22729 = -44						; size = 4
tv22715 = -44						; size = 4
tv22703 = -44						; size = 4
tv22356 = -44						; size = 4
tv22324 = -44						; size = 4
tv22309 = -44						; size = 4
tv22296 = -44						; size = 4
tv22266 = -44						; size = 4
tv22265 = -44						; size = 4
tv22257 = -44						; size = 4
tv22247 = -44						; size = 4
tv22229 = -44						; size = 4
tv22119 = -44						; size = 4
tv22043 = -44						; size = 4
tv22031 = -44						; size = 4
tv21759 = -44						; size = 4
tv21744 = -44						; size = 4
tv21713 = -44						; size = 4
tv21672 = -44						; size = 4
_j$127$ = -40						; size = 4
_j$50$ = -40						; size = 4
_j$47$ = -40						; size = 4
_j$22$ = -40						; size = 4
_k$149$ = -40						; size = 4
_k$112$ = -40						; size = 4
_k$93$ = -40						; size = 4
_k$79$ = -40						; size = 4
_k$58$ = -40						; size = 4
_k$56$ = -40						; size = 4
_k$54$ = -40						; size = 4
_k$45$ = -40						; size = 4
_k$35$ = -40						; size = 4
tv23428 = -40						; size = 4
tv23034 = -40						; size = 4
tv22591 = -40						; size = 4
tv22567 = -40						; size = 4
tv22479 = -40						; size = 4
tv22399 = -40						; size = 4
tv22375 = -40						; size = 4
tv22305 = -40						; size = 4
tv22285 = -40						; size = 4
tv21829 = -40						; size = 4
tv21776 = -40						; size = 4
tv21690 = -40						; size = 4
_flag$4$ = -36						; size = 4
_flag$2$ = -36						; size = 4
_j$186$ = -36						; size = 4
_j$181$ = -36						; size = 4
_j$177$ = -36						; size = 4
_j$173$ = -36						; size = 4
_j$168$ = -36						; size = 4
_j$163$ = -36						; size = 4
_j$159$ = -36						; size = 4
_j$132$ = -36						; size = 4
_j$117$ = -36						; size = 4
_j$92$ = -36						; size = 4
_j$86$ = -36						; size = 4
_j$82$ = -36						; size = 4
_j$79$ = -36						; size = 4
_j$68$ = -36						; size = 4
_j$64$ = -36						; size = 4
_j$33$ = -36						; size = 4
_j$16$ = -36						; size = 4
_k$158$ = -36						; size = 4
_k$156$ = -36						; size = 4
_k$154$ = -36						; size = 4
_k$128$ = -36						; size = 4
_k$75$ = -36						; size = 4
_k$49$ = -36						; size = 4
_k$23$ = -36						; size = 4
tv23070 = -36						; size = 4
tv23067 = -36						; size = 4
tv23064 = -36						; size = 4
tv22568 = -36						; size = 4
tv22562 = -36						; size = 4
tv22556 = -36						; size = 4
tv22550 = -36						; size = 4
tv22515 = -36						; size = 4
tv22439 = -36						; size = 4
tv22427 = -36						; size = 4
tv22279 = -36						; size = 4
tv22161 = -36						; size = 4
tv22143 = -36						; size = 4
tv21812 = -36						; size = 4
tv21674 = -36						; size = 4
tv21670 = -36						; size = 4
_k$6$ = -36						; size = 4
_j$130$ = -32						; size = 4
_j$99$ = -32						; size = 4
_j$78$ = -32						; size = 4
_j$73$ = -32						; size = 4
_j$61$ = -32						; size = 4
_j$59$ = -32						; size = 4
_j$57$ = -32						; size = 4
_j$55$ = -32						; size = 4
_j$53$ = -32						; size = 4
_j$52$ = -32						; size = 4
_j$51$ = -32						; size = 4
_j$48$ = -32						; size = 4
_j$35$ = -32						; size = 4
_j$23$ = -32						; size = 4
_k$200$ = -32						; size = 4
_k$147$ = -32						; size = 4
_k$123$ = -32						; size = 4
_k$84$ = -32						; size = 4
_k$71$ = -32						; size = 4
_k$66$ = -32						; size = 4
_k$52$ = -32						; size = 4
_k$47$ = -32						; size = 4
_k$12$ = -32						; size = 4
tv23440 = -32						; size = 4
tv22963 = -32						; size = 4
tv22719 = -32						; size = 4
tv22707 = -32						; size = 4
tv22695 = -32						; size = 4
tv22691 = -32						; size = 4
tv22663 = -32						; size = 4
tv22461 = -32						; size = 4
tv22371 = -32						; size = 4
tv22159 = -32						; size = 4
tv21826 = -32						; size = 4
tv21801 = -32						; size = 4
tv21689 = -32						; size = 4
$T1 = -28						; size = 4
tv23483 = -28						; size = 4
tv23479 = -28						; size = 4
_j$148$ = -24						; size = 4
_j$147$ = -24						; size = 4
_j$146$ = -24						; size = 4
_j$144$ = -24						; size = 4
_j$128$ = -24						; size = 4
_j$74$ = -24						; size = 4
_j$49$ = -24						; size = 4
_k$121$ = -24						; size = 4
_k$21$ = -24						; size = 4
tv22651 = -24						; size = 4
tv22639 = -24						; size = 4
tv22545 = -24						; size = 4
tv22531 = -24						; size = 4
tv22519 = -24						; size = 4
tv22471 = -24						; size = 4
tv21973 = -24						; size = 4
tv21784 = -24						; size = 4
tv21707 = -24						; size = 4
tv21699 = -24						; size = 4
tv21686 = -24						; size = 4
_j$119$ = -20						; size = 4
_j$4$ = -20						; size = 4
_k$194$ = -20						; size = 4
_k$94$ = -20						; size = 4
_k$36$ = -20						; size = 4
tv22929 = -20						; size = 4
tv22141 = -20						; size = 4
tv21799 = -20						; size = 4
tv21694 = -20						; size = 4
tv21665 = -20						; size = 4
_j$111$ = -16						; size = 4
_j$87$ = -16						; size = 4
_j$24$ = -16						; size = 4
_k$152$ = -16						; size = 4
_k$28$ = -16						; size = 4
tv22395 = -16						; size = 4
tv22233 = -16						; size = 4
tv21736 = -16						; size = 4
_K$1$ = -12						; size = 4
_J$1$ = -8						; size = 4
tv22381 = -4						; size = 4
_j$156$ = 8						; size = 4
_j$154$ = 8						; size = 4
_j$152$ = 8						; size = 4
_j$150$ = 8						; size = 4
_j$91$ = 8						; size = 4
_k$193$ = 8						; size = 4
_k$189$ = 8						; size = 4
_k$184$ = 8						; size = 4
_k$179$ = 8						; size = 4
_k$175$ = 8						; size = 4
_k$171$ = 8						; size = 4
_k$166$ = 8						; size = 4
_k$89$ = 8						; size = 4
tv23005 = 8						; size = 4
tv22784 = 8						; size = 4
tv22028 = 8						; size = 4
tv22026 = 8						; size = 4
tv22024 = 8						; size = 4
tv22022 = 8						; size = 4
_table$ = 8						; size = 4
_flag$ = 12						; size = 4
_i$ = 16						; size = 4
_j$ = 20						; size = 4
_k$ = 24						; size = 4
_n$ = 28						; size = 4
_sum$ = 32						; size = 4
$T2 = 36						; size = 4
_j$182$ = 36						; size = 4
_j$142$ = 36						; size = 4
_j$135$ = 36						; size = 4
_k$196$ = 36						; size = 4
_k$136$ = 36						; size = 4
tv23497 = 36						; size = 4
tv23495 = 36						; size = 4
tv23485 = 36						; size = 4
tv23468 = 36						; size = 4
tv23462 = 36						; size = 4
tv23456 = 36						; size = 4
tv23454 = 36						; size = 4
tv23442 = 36						; size = 4
tv23388 = 36						; size = 4
tv22781 = 36						; size = 4
tv22625 = 36						; size = 4
tv22398 = 36						; size = 4
tv22379 = 36						; size = 4
tv22365 = 36						; size = 4
tv22333 = 36						; size = 4
tv22327 = 36						; size = 4
tv22050 = 36						; size = 4
tv22048 = 36						; size = 4
tv22038 = 36						; size = 4
_tab$ = 36						; size = 4
_I$ = 40						; size = 4
_J$ = 44						; size = 4
_K$ = 48						; size = 4
?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z PROC			; cub_9, COMDAT

; 5    : int cub_9(int** table, int flag, int i, int j, int k, int n, int* sum, int** tab, int I, int J, int K) {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	mov	esi, DWORD PTR _k$[ebp]
	mov	ecx, OFFSET __1C12C7C8_сub_ver_2@0@cpp
	push	edi
	mov	edi, DWORD PTR _table$[ebp]
	mov	DWORD PTR _k$200$[ebp], esi
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _tab$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv22381[ebp], eax
	test	edx, edx
	je	$LN2@cub_9

; 6    : 	/*for (int i = 0; i < n; i++) {
; 7    : 		for (int j = 0; j < n; j++)
; 8    : 			printf("%3d ", table[i][j]);
; 9    : 		printf("\n");
; 10   : 	}
; 11   : 	printf("\n flag = %d\n", flag);*/
; 12   : 	int f;
; 13   : 
; 14   : 
; 15   : 	//вызовы паттернов (n<10)
; 16   : 	if (tab != 0) {
; 17   : 		if (*sum != 9 && table[0][n - 1] == 0) {

	cmp	DWORD PTR [ebx], 9
	mov	edi, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+edi-4]
	mov	edi, DWORD PTR _table$[ebp]
	mov	DWORD PTR tv22363[ebp], eax
	je	$LN260@cub_9
	test	eax, eax
	jne	$LN253@cub_9

; 18   : 			//центровыe
; 19   : 			if (table[0][n - 1] != n * n && flag == 13 || flag == 27) {

	mov	esi, DWORD PTR _K$[ebp]
	mov	eax, ecx
	mov	edx, DWORD PTR _flag$[ebp]
	imul	eax, ecx
	mov	ecx, DWORD PTR _J$[ebp]
	mov	DWORD PTR _K$1$[ebp], esi
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	DWORD PTR tv23483[ebp], eax
	test	eax, eax
	je	SHORT $LN8@cub_9
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN284@cub_9
$LN8@cub_9:
	cmp	edx, 27					; 0000001bH
	jne	$LN286@cub_9

; 20   : 				if (table[0][n - 1] != n * n && flag == 13 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	test	eax, eax
	je	$LN9@cub_9
	cmp	edx, 13					; 0000000dH
	jne	$LN9@cub_9
$LN284@cub_9:
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	esi, eax
	je	$LN9@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+esi*4+4]
	sub	ecx, DWORD PTR [eax+esi*4]
	cmp	ecx, 1
	jne	$LN416@cub_9

; 21   : 					k++;

	mov	eax, DWORD PTR _k$[ebp]

; 22   : 					K++;

	inc	esi

; 23   : 					////c_1(table, &i, &j, &k);
; 24   : 
; 25   : 					table[j++][k] = i++;

	mov	ecx, DWORD PTR _j$[ebp]
	inc	eax
	mov	edx, eax
	mov	DWORD PTR _K$1$[ebp], esi
	mov	esi, DWORD PTR _i$[ebp]
	mov	ebx, edx
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 26   : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	ecx, edx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	ecx

; 27   : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	inc	esi
	mov	DWORD PTR _k$[ebp], ecx

; 28   : 					table[j][k++] = i++;

	inc	DWORD PTR _k$[ebp]

; 29   : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 30   : 					table[j++][k] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax

; 31   : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 32   : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$[ebp]

; 33   : 					table[j][k] = i++;
; 34   : 
; 35   : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	mov	ecx, edx
	mov	edx, DWORD PTR _j$[ebp]
	inc	esi
	mov	DWORD PTR _k$[ebp], ecx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	$LN11@cub_9
$LN416@cub_9:

; 20   : 				if (table[0][n - 1] != n * n && flag == 13 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$[ebp]
$LN9@cub_9:

; 36   : 				else if (J != n / 3 - 1 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN285@cub_9
	test	ecx, ecx
	je	$LN285@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	eax, DWORD PTR [eax+esi*4]
	sub	eax, DWORD PTR [ecx+esi*4]
	cmp	eax, 1
	jne	SHORT $LN285@cub_9

; 37   : 					j++;
; 38   : 					J++;
; 39   : 					////c_1(table, &i, &j, &k);
; 40   : 
; 41   : 					table[j++][k] = i++;

	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _J$[ebp]
	mov	ecx, DWORD PTR _k$[ebp]
	inc	eax
	mov	esi, DWORD PTR _i$[ebp]
	mov	DWORD PTR _J$1$[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 42   : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	ecx

; 43   : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	inc	esi
	mov	DWORD PTR _k$[ebp], ecx

; 44   : 					table[j][k++] = i++;

	inc	DWORD PTR _k$[ebp]

; 45   : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 46   : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	add	edx, 3
	mov	DWORD PTR _j$[ebp], edx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 47   : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 48   : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _k$200$[ebp]

; 49   : 					table[j][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR _k$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	SHORT $LN11@cub_9
$LN285@cub_9:

; 36   : 				else if (J != n / 3 - 1 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	esi, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _k$[ebp]
$LN11@cub_9:

; 50   : 
; 51   : 				}
; 52   : 				*sum -= 9;
; 53   : 				f = flag;
; 54   : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR tv22427[ebp], edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22257[ebp], ecx
	push	DWORD PTR _tab$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	edx
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 55   : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN301@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN301@cub_9

; 56   : 					////c_11(table, &i, &j, &k);
; 57   : 
; 58   : 					i = i - 9;
; 59   : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	inc	ecx

; 60   : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, ecx
	mov	DWORD PTR _k$[ebp], ecx
	inc	DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0

; 61   : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]

; 62   : 					table[j--][k] = 0;

	mov	ebx, DWORD PTR tv22427[ebp]
	mov	edx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [ebx-2]
	mov	DWORD PTR _j$[ebp], eax

; 63   : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+edx*4], 0

; 64   : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+ecx*4], 0

; 65   : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4], 0

; 66   : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	ecx, DWORD PTR tv22257[ebp]
	mov	DWORD PTR _k$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 67   : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]

; 68   : 
; 69   : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9

; 70   : 					if (f == 13) {

	cmp	DWORD PTR _flag$[ebp], 13		; 0000000dH
	jne	$LN13@cub_9

; 71   : 						K--;

	dec	DWORD PTR _K$1$[ebp]

; 72   : 						k--;

	dec	ecx
	mov	DWORD PTR _k$[ebp], ecx
$LN301@cub_9:

; 77   : 					}
; 78   : 				}
; 79   : 			}
; 80   : 			if (table[0][n - 1] != n * n && flag == 17 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN566@cub_9:
	mov	eax, DWORD PTR _j$[ebp]
$LN14@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22395[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22249[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN296@cub_9
	cmp	DWORD PTR _flag$[ebp], 17		; 00000011H
	jne	$LN296@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN295@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	$LN299@cub_9

; 81   : 				j++;

	mov	ebx, DWORD PTR _j$[ebp]

; 82   : 				J++;
; 83   : 				////c_1(table, &i, &j, &k);
; 84   : 
; 85   : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR _k$[ebp]
	inc	ebx
	inc	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR _j$4$[ebp], ebx

; 86   : 				table[j][k++] = i++;
; 87   : 				table[j--][k] = i++;
; 88   : 				table[j][k++] = i++;
; 89   : 				table[j++][k] = i++;
; 90   : 				table[j++][k] = i++;
; 91   : 				table[j][k--] = i++;
; 92   : 				table[j][k--] = i++;
; 93   : 				table[j][k] = i++;
; 94   : 
; 95   : 				*sum -= 9;
; 96   : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	push	edx
	lea	eax, DWORD PTR [ebx*4]
	mov	DWORD PTR tv21829[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _J$1$[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4+4]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	ecx
	mov	eax, DWORD PTR [edi+ebx*4+4]
	inc	esi
	mov	DWORD PTR _k$6$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	lea	ecx, DWORD PTR [ebx+2]
	mov	ebx, DWORD PTR _k$6$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21826[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR tv21699[ebp], ecx
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR tv21826[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _k$[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	eax, DWORD PTR tv21826[ebp]
	mov	DWORD PTR tv22744[ebp], ebx
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 97   : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN299@cub_9
	mov	eax, DWORD PTR tv21699[ebp]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR _j$[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN299@cub_9

; 98   : 					////c_11(table, &i, &j, &k);
; 99   : 
; 100  : 					i = i - 9;
; 101  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv21826[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22744[ebp]
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [edx+eax], 0

; 102  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx+edi]
	mov	edx, DWORD PTR _k$6$[ebp]
	mov	DWORD PTR [eax+edx*4], 0

; 103  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx+edi]

; 104  : 					table[j--][k] = 0;
; 105  : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$4$[ebp]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR tv21829[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 106  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 107  : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv21699[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+edx*4], 0

; 108  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	ecx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 109  : 					table[j][k] = 0;

	mov	eax, DWORD PTR _j$4$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 110  : 
; 111  : 					*sum += 9;
; 112  : 					j--;

	mov	eax, DWORD PTR tv22395[ebp]

; 113  : 					J--;

	mov	ecx, DWORD PTR tv22249[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN567@cub_9
$LN13@cub_9:

; 73   : 					}
; 74   : 					else {
; 75   : 						J--;

	mov	ecx, DWORD PTR _J$1$[ebp]

; 76   : 						j--;

	mov	eax, DWORD PTR tv22427[ebp]
	dec	ecx
	add	eax, -3					; fffffffdH
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	DWORD PTR _j$[ebp], eax
	jmp	$LN14@cub_9
$LN286@cub_9:

; 18   : 			//центровыe
; 19   : 			if (table[0][n - 1] != n * n && flag == 13 || flag == 27) {

	mov	esi, DWORD PTR _i$[ebp]

; 55   : 				if (result == -1 && table[0][n - 1] != n*n) {

	jmp	$LN566@cub_9
$LN296@cub_9:

; 114  : 				}
; 115  : 			}
; 116  : 			if (table[0][n - 1] != n * n && flag == 13 || flag == 27) {

	mov	eax, DWORD PTR _j$[ebp]
	jmp	SHORT $LN16@cub_9
$LN299@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN295@cub_9:
	mov	eax, DWORD PTR _j$[ebp]
$LN567@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
$LN16@cub_9:
	mov	DWORD PTR tv22247[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+edx-4]
	mov	eax, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv21651[ebp], edx
	cmp	edx, eax
	je	SHORT $LN19@cub_9
	cmp	DWORD PTR _flag$[ebp], 13		; 0000000dH
	je	SHORT $LN283@cub_9
$LN19@cub_9:
	mov	edx, DWORD PTR _k$[ebp]
	mov	DWORD PTR _k$21$[ebp], edx
	mov	edx, DWORD PTR _flag$[ebp]
	cmp	edx, 27					; 0000001bH
	jne	$LN324@cub_9

; 117  : 				if (table[0][n - 1] != n * n && flag == 13 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	cmp	DWORD PTR tv21651[ebp], eax
	je	$LN20@cub_9
	cmp	edx, 13					; 0000000dH
	jne	$LN20@cub_9
$LN283@cub_9:
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN20@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	SHORT $LN20@cub_9

; 118  : 					k++;
; 119  : 					K++;
; 120  : 					////c_4(table, &i, &j, &k);
; 121  : 
; 122  : 					table[j][k++] = i++;

	mov	ecx, DWORD PTR _k$[ebp]
	inc	edx

; 123  : 					table[j++][k] = i++;
; 124  : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR _k$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+8], esi
	lea	ecx, DWORD PTR [edx*4+4]
	mov	eax, DWORD PTR [ecx+edi]
	inc	esi
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi

; 125  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi

; 126  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi

; 127  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ebx*4+8], esi
	add	ebx, 3

; 128  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	inc	esi
	mov	DWORD PTR _k$21$[ebp], ebx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 129  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	ecx, DWORD PTR tv22247[ebp]
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 130  : 					table[j][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 131  : 
; 132  : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	jmp	$LN22@cub_9
$LN20@cub_9:

; 133  : 				else if (J != n / 3 - 1 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _J$1$[ebp]
	mov	DWORD PTR _k$21$[ebp], eax
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN309@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _k$[ebp]
	mov	DWORD PTR _k$21$[ebp], eax
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _j$[ebp]
	cmp	eax, 1
	jne	SHORT $LN22@cub_9

; 134  : 					j++;
; 135  : 					J++;
; 136  : 					////c_4(table, &i, &j, &k);
; 137  : 
; 138  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+4]
	lea	edx, DWORD PTR [ecx+1]
	mov	ebx, DWORD PTR _k$[ebp]
	inc	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 139  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+4]
	add	ecx, 2
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi

; 140  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi

; 141  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	mov	eax, ecx
	inc	eax
	inc	esi
	mov	DWORD PTR _j$[ebp], eax

; 142  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 143  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	add	ebx, 2

; 144  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	inc	esi
	mov	DWORD PTR _k$21$[ebp], ebx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 145  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, edx
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 146  : 					table[j][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	jmp	SHORT $LN22@cub_9
$LN309@cub_9:

; 133  : 				else if (J != n / 3 - 1 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _j$[ebp]
$LN22@cub_9:

; 147  : 
; 148  : 				}
; 149  : 
; 150  : 				*sum -= 9;
; 151  : 				f = flag;
; 152  : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR _k$21$[ebp]
	push	DWORD PTR _J$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22439[ebp], eax
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR tv22241[ebp], ecx
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	eax
	push	ecx
	push	esi
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 153  : 				if (result == -1 && table[0][n - 1] != n*n) {

	mov	ecx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	eax, -1
	jne	$LN326@cub_9
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN326@cub_9

; 154  : 					////c_44(table, &i, &j, &k);
; 155  : 
; 156  : 					i = i - 9;
; 157  : 					table[j++][k] = 0;

	mov	edx, DWORD PTR _j$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$21$[ebp]

; 158  : 					table[j++][k] = 0;

	mov	ebx, ecx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4+4]

; 159  : 					table[j][k--] = 0;
; 160  : 					table[j][k--] = 0;
; 161  : 					table[j--][k] = 0;
; 162  : 					table[j][k++] = 0;
; 163  : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv22241[ebp]
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4], 0
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ebx*4], 0
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	ebx, DWORD PTR tv22439[ebp]
	mov	DWORD PTR [eax+ebx*4-4], 0
	lea	eax, DWORD PTR [ebx-2]
	mov	DWORD PTR _k$21$[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ebx*4-8], 0
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4-8], 0
	mov	eax, DWORD PTR [edi+edx*4+4]

; 164  : 					table[j][k--] = 0;
; 165  : 					table[j][k] = 0;
; 166  : 
; 167  : 					*sum += 9;
; 168  : 					if (f == 13) {

	mov	edx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR [eax+ebx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4-8], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR _K$1$[ebp]
	add	DWORD PTR [ebx], 9
	cmp	DWORD PTR _flag$[ebp], 13		; 0000000dH
	jne	SHORT $LN24@cub_9

; 169  : 						K--;
; 170  : 						k--;

	mov	ecx, DWORD PTR tv22439[ebp]
	dec	eax
	add	ecx, -3					; fffffffdH
	mov	DWORD PTR _K$1$[ebp], eax
	mov	DWORD PTR _k$21$[ebp], ecx

; 171  : 					}

	mov	ecx, DWORD PTR tv22381[ebp]
	jmp	SHORT $LN25@cub_9
$LN24@cub_9:

; 172  : 					else {
; 173  : 						J--;

	dec	DWORD PTR _J$1$[ebp]

; 174  : 						j--;

	dec	ecx
	mov	DWORD PTR _j$[ebp], ecx
	mov	ecx, DWORD PTR tv22381[ebp]
	jmp	SHORT $LN25@cub_9
$LN324@cub_9:

; 114  : 				}
; 115  : 			}
; 116  : 			if (table[0][n - 1] != n * n && flag == 13 || flag == 27) {

	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
$LN326@cub_9:

; 175  : 					}
; 176  : 				}
; 177  : 			}
; 178  : 			if (table[0][n - 1] != n * n && flag == 23 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	eax, DWORD PTR _K$1$[ebp]
$LN25@cub_9:
	mov	ebx, DWORD PTR _k$21$[ebp]
	mov	DWORD PTR tv22233[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22399[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN303@cub_9
	cmp	DWORD PTR _flag$[ebp], 23		; 00000017H
	jne	$LN303@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN303@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN307@cub_9

; 179  : 				k++;
; 180  : 				K++;
; 181  : 				////c_4(table, &i, &j, &k);
; 182  : 
; 183  : 				table[j][k++] = i++;

	mov	ecx, DWORD PTR _j$[ebp]
	inc	edx
	mov	ebx, DWORD PTR _k$21$[ebp]
	inc	ebx
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$12$[ebp], ebx
	mov	eax, DWORD PTR [edi+ecx*4]

; 184  : 				table[j++][k] = i++;
; 185  : 				table[j][k--] = i++;

	mov	edx, DWORD PTR _k$12$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	ebx, DWORD PTR [ecx+1]
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR _j$10$[ebp], ebx
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 186  : 				table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+edx*4], esi
	lea	edx, DWORD PTR [ebx+1]

; 187  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	inc	esi
	mov	ebx, DWORD PTR _k$12$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 188  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ebx+2]
	mov	DWORD PTR _k$21$[ebp], eax
	inc	esi
	mov	DWORD PTR tv21694[ebp], eax

; 189  : 				table[j--][k] = i++;

	shl	eax, 2
	mov	DWORD PTR tv21812[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, DWORD PTR tv21812[ebp]

; 190  : 				table[j--][k] = i++;
; 191  : 				table[j][k] = i++;
; 192  : 
; 193  : 				*sum -= 9;
; 194  : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4+4]
	push	DWORD PTR _I$[ebp]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv23195[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$21$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 195  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN307@cub_9
	mov	eax, DWORD PTR tv21694[ebp]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR _k$21$[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN307@cub_9

; 196  : 					////c_44(table, &i, &j, &k);
; 197  : 
; 198  : 					i = i - 9;
; 199  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv23195[ebp]
	sub	esi, 9

; 200  : 					table[j++][k] = 0;

	mov	edx, DWORD PTR _j$10$[ebp]
	mov	ecx, DWORD PTR tv21812[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 201  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [ecx+eax], 0

; 202  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	ecx, DWORD PTR _k$12$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 203  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ecx*4], 0

; 204  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 205  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR tv21694[ebp]

; 206  : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-4], 0

; 207  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR _k$12$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 208  : 
; 209  : 					*sum += 9;
; 210  : 					k--;

	mov	eax, DWORD PTR tv22399[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$21$[ebp], eax

; 211  : 					K--;

	mov	eax, DWORD PTR tv22233[ebp]
	mov	DWORD PTR _K$1$[ebp], eax
	jmp	SHORT $LN568@cub_9
$LN303@cub_9:

; 212  : 				}
; 213  : 			}
; 214  : 			if (table[0][n - 1] != n * n && flag == 29 || flag == 31) {

	mov	edx, DWORD PTR _j$[ebp]
	jmp	SHORT $LN27@cub_9
$LN307@cub_9:
	mov	edx, DWORD PTR _j$[ebp]
$LN568@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN27@cub_9:
	mov	eax, DWORD PTR _k$21$[ebp]
	mov	DWORD PTR tv22229[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+ecx-4]
	mov	eax, DWORD PTR tv23483[ebp]
	cmp	ecx, eax
	mov	DWORD PTR tv21649[ebp], ecx
	mov	ecx, DWORD PTR _flag$[ebp]
	je	SHORT $LN30@cub_9
	cmp	ecx, 29					; 0000001dH
	je	$LN31@cub_9
$LN30@cub_9:
	mov	DWORD PTR _j$24$[ebp], edx
	cmp	ecx, 31					; 0000001fH
	jne	$LN409@cub_9

; 215  : 				if (table[0][n - 1] != n * n && flag == 31 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	cmp	DWORD PTR tv21649[ebp], eax
	je	$LN31@cub_9
	cmp	ecx, ecx
	jne	$LN31@cub_9
	cmp	DWORD PTR _K$1$[ebp], 0
	je	$LN31@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	ebx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR _K$1$[ebp]
	mov	ecx, DWORD PTR [eax+ecx*4-4]
	sub	ecx, DWORD PTR [eax+ebx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	cmp	ecx, 1
	jne	$LN31@cub_9

; 216  : 					k--;

	mov	eax, DWORD PTR _k$21$[ebp]

; 217  : 					K--;
; 218  : 					////c_2(table, &i, &j, &k);
; 219  : 
; 220  : 					table[j++][k] = i++;

	mov	ecx, DWORD PTR _j$[ebp]
	dec	eax
	mov	edx, eax
	mov	DWORD PTR _k$21$[ebp], eax
	mov	ebx, edx
	dec	DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 221  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	ecx, edx
	mov	DWORD PTR [eax+ecx*4], esi
	dec	ecx

; 222  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	inc	esi
	mov	DWORD PTR _k$21$[ebp], ecx

; 223  : 					table[j][k--] = i++;

	dec	DWORD PTR _k$21$[ebp]

; 224  : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$21$[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 225  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$24$[ebp], eax

; 226  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 227  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR _j$24$[ebp]

; 228  : 					table[j][k] = i++;
; 229  : 
; 230  : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	mov	ecx, edx
	mov	edx, DWORD PTR _j$24$[ebp]
	inc	esi
	mov	DWORD PTR _k$21$[ebp], ecx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	$LN33@cub_9
$LN31@cub_9:

; 231  : 				else if (J != n / 3 - 1 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	eax, 1431655766				; 55555556H
	mov	DWORD PTR _j$24$[ebp], edx
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	DWORD PTR _J$1$[ebp], eax
	je	$LN552@cub_9
	mov	ebx, DWORD PTR _J$1$[ebp]
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _j$24$[ebp], edx
	mov	eax, DWORD PTR [ecx+ebx*4+4]
	mov	ecx, DWORD PTR [ecx+ebx*4]
	mov	ebx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+ebx*4]
	sub	eax, DWORD PTR [ecx+ebx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	ecx, DWORD PTR _k$21$[ebp]
	cmp	eax, 1
	jne	SHORT $LN551@cub_9

; 232  : 					j++;
; 233  : 					J++;
; 234  : 					////c_2(table, &i, &j, &k);
; 235  : 
; 236  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+4]
	inc	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 237  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ecx*4], esi
	dec	ecx

; 238  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	inc	esi
	mov	DWORD PTR _k$21$[ebp], ecx

; 239  : 					table[j][k--] = i++;

	dec	DWORD PTR _k$21$[ebp]

; 240  : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$21$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 241  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	add	edx, 3
	mov	DWORD PTR _j$24$[ebp], edx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 242  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 243  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR tv22229[ebp]

; 244  : 					table[j][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR _k$21$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	SHORT $LN33@cub_9
$LN552@cub_9:

; 231  : 				else if (J != n / 3 - 1 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _k$21$[ebp]
$LN551@cub_9:

; 245  : 
; 246  : 				}
; 247  : 				*sum -= 9;

	mov	edx, DWORD PTR _j$24$[ebp]
$LN33@cub_9:

; 248  : 				f = flag;
; 249  : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR tv22279[ebp], edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22225[ebp], ecx
	push	DWORD PTR _tab$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	edx
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 250  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN409@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN409@cub_9

; 251  : 					////c_22(table, &i, &j, &k);
; 252  : 
; 253  : 					i = i - 9;
; 254  : 
; 255  : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$24$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$21$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	dec	ecx

; 256  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, ecx
	mov	DWORD PTR _k$21$[ebp], ecx
	dec	DWORD PTR _k$21$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0

; 257  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]

; 258  : 					table[j--][k] = 0;

	mov	ebx, DWORD PTR tv22279[ebp]
	mov	edx, DWORD PTR _k$21$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [ebx-2]
	mov	DWORD PTR _j$24$[ebp], eax

; 259  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+edx*4], 0

; 260  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+ecx*4], 0

; 261  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4], 0

; 262  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	ecx, DWORD PTR tv22225[ebp]
	mov	DWORD PTR _k$21$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 263  : 
; 264  : 
; 265  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]

; 266  : 
; 267  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9

; 268  : 					if (f == 31) {

	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	jne	$LN35@cub_9

; 269  : 						K++;

	inc	DWORD PTR _K$1$[ebp]

; 270  : 						k++;

	inc	ecx
	mov	DWORD PTR _k$21$[ebp], ecx
$LN409@cub_9:

; 275  : 					}
; 276  : 				}
; 277  : 			}
; 278  : 			if (table[0][n - 1] != n * n && flag == 39 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	eax, DWORD PTR _j$24$[ebp]
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN36@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22267[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22217[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	je	$LN337@cub_9
	cmp	DWORD PTR _flag$[ebp], 39		; 00000027H
	jne	$LN337@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN337@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _J$1$[ebp]
	cmp	eax, 1
	jne	$LN38@cub_9

; 279  : 				j++;

	mov	eax, DWORD PTR _j$24$[ebp]

; 280  : 				J++;

	inc	ecx

; 281  : 				////c_2(table, &i, &j, &k);
; 282  : 
; 283  : 				table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$21$[ebp]
	inc	eax
	mov	DWORD PTR _j$16$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21801[ebp], eax

; 284  : 				table[j][k--] = i++;
; 285  : 				table[j--][k] = i++;
; 286  : 				table[j][k--] = i++;
; 287  : 				table[j++][k] = i++;
; 288  : 				table[j++][k] = i++;
; 289  : 				table[j][k++] = i++;
; 290  : 				table[j][k++] = i++;
; 291  : 				table[j][k] = i++;
; 292  : 
; 293  : 				*sum -= 9;
; 294  : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	ecx
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _J$1$[ebp], ecx
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR tv21801[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+ebx*4], esi
	dec	ebx
	mov	eax, DWORD PTR tv21801[ebp]
	inc	esi
	mov	DWORD PTR _k$19$[ebp], ebx
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR tv21801[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR tv21801[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR tv21801[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR _j$16$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$24$[ebp], eax
	mov	DWORD PTR tv21690[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21799[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR tv21799[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _k$21$[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	eax, DWORD PTR tv21799[ebp]
	mov	DWORD PTR tv22702[ebp], ebx
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$21$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$24$[ebp]
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 295  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN341@cub_9
	mov	eax, DWORD PTR tv21690[ebp]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR _j$24$[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN341@cub_9

; 296  : 					////c_22(table, &i, &j, &k);
; 297  : 
; 298  : 					i = i - 9;
; 299  : 
; 300  : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv21799[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22702[ebp]
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [edx+eax], 0

; 301  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx+edi]
	mov	edx, DWORD PTR _k$19$[ebp]
	mov	DWORD PTR [eax+edx*4], 0

; 302  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx+edi]

; 303  : 					table[j--][k] = 0;
; 304  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$16$[ebp]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR tv21801[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 305  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 306  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv21690[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+edx*4], 0

; 307  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	ecx, DWORD PTR _k$21$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 308  : 
; 309  : 
; 310  : 					table[j][k] = 0;

	mov	eax, DWORD PTR _j$16$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 311  : 
; 312  : 					*sum += 9;
; 313  : 					j--;

	mov	eax, DWORD PTR tv22267[ebp]

; 314  : 					J--;

	mov	ecx, DWORD PTR tv22217[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$24$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx

; 315  : 				}
; 316  : 			}
; 317  : 			if (table[0][n - 1] != n * n && flag == 29 || flag == 31) {

	jmp	SHORT $LN337@cub_9
$LN35@cub_9:

; 271  : 					}
; 272  : 					else {
; 273  : 						J--;

	mov	ecx, DWORD PTR _J$1$[ebp]

; 274  : 						j--;

	mov	eax, DWORD PTR tv22279[ebp]
	dec	ecx
	add	eax, -3					; fffffffdH
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	DWORD PTR _j$24$[ebp], eax
	jmp	$LN36@cub_9
$LN341@cub_9:

; 315  : 				}
; 316  : 			}
; 317  : 			if (table[0][n - 1] != n * n && flag == 29 || flag == 31) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN337@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN38@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR [eax+ebx-4]
	mov	eax, DWORD PTR tv23483[ebp]
	cmp	ebx, eax
	mov	DWORD PTR tv21647[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	SHORT $LN41@cub_9
	cmp	DWORD PTR _flag$[ebp], 29		; 0000001dH
	je	$LN42@cub_9
$LN41@cub_9:
	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	mov	ebx, DWORD PTR _k$21$[ebp]
	mov	DWORD PTR _k$36$[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN362@cub_9

; 318  : 				if (table[0][n - 1] != n * n && flag == 31 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	cmp	DWORD PTR tv21647[ebp], eax
	je	$LN42@cub_9
	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	jne	$LN42@cub_9
	test	edx, edx
	je	$LN42@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	SHORT $LN42@cub_9

; 319  : 					k--;
; 320  : 					K--;
; 321  : 					////c_8(table, &i, &j, &k);
; 322  : 
; 323  : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR _j$24$[ebp]
	dec	edx
	mov	ecx, DWORD PTR _k$21$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx

; 324  : 					table[j++][k] = i++;
; 325  : 					table[j][k++] = i++;

	mov	edx, DWORD PTR _k$21$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4-8], esi
	lea	ecx, DWORD PTR [ebx*4+4]
	mov	eax, DWORD PTR [ecx+edi]
	inc	esi
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi

; 326  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi

; 327  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi

; 328  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4-8], esi
	mov	eax, edx
	add	eax, -3					; fffffffdH
	inc	esi
	mov	DWORD PTR _k$36$[ebp], eax

; 329  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	ebx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 330  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	mov	eax, DWORD PTR _j$24$[ebp]
$LN570@cub_9:

; 347  : 					table[j][k] = i++;
; 348  : 
; 349  : 				}
; 350  : 				*sum -= 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	inc	esi
	mov	DWORD PTR _j$24$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
$LN336@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	$LN44@cub_9
$LN42@cub_9:

; 331  : 					table[j][k] = i++;
; 332  : 
; 333  : 				}
; 334  : 				else if (J != n / 3 - 1 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _k$21$[ebp]
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	DWORD PTR _k$36$[ebp], ecx
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _J$1$[ebp]
	cmp	edx, eax
	je	SHORT $LN336@cub_9
	mov	eax, ecx
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	DWORD PTR _k$36$[ebp], eax
	mov	eax, DWORD PTR [ecx+edx*4+4]
	mov	ecx, DWORD PTR [ecx+edx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	SHORT $LN535@cub_9

; 335  : 					j++;

	mov	ebx, DWORD PTR _j$24$[ebp]

; 336  : 					J++;
; 337  : 					////c_8(table, &i, &j, &k);
; 338  : 
; 339  : 					table[j][k--] = i++;

	mov	ecx, DWORD PTR _k$21$[ebp]
	inc	ebx

; 340  : 					table[j++][k] = i++;
; 341  : 					table[j][k++] = i++;

	mov	edx, DWORD PTR _k$21$[ebp]
	inc	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR tv22211[ebp], ebx
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	lea	ecx, DWORD PTR [ebx*4+4]
	mov	eax, DWORD PTR [ecx+edi]
	inc	esi
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi

; 342  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 343  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 344  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4-4], esi
	mov	eax, edx
	add	eax, -2					; fffffffeH
	inc	esi
	mov	DWORD PTR _k$36$[ebp], eax

; 345  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	ebx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 346  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	mov	eax, DWORD PTR tv22211[ebp]
	jmp	$LN570@cub_9
$LN535@cub_9:

; 331  : 					table[j][k] = i++;
; 332  : 
; 333  : 				}
; 334  : 				else if (J != n / 3 - 1 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _k$36$[ebp]
$LN44@cub_9:

; 347  : 					table[j][k] = i++;
; 348  : 
; 349  : 				}
; 350  : 				*sum -= 9;

	mov	eax, DWORD PTR _j$24$[ebp]

; 351  : 				f = flag;
; 352  : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22461[ebp], ecx
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR tv22207[ebp], eax
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	eax
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 353  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN362@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN361@cub_9

; 354  : 					////c_88(table, &i, &j, &k);
; 355  : 
; 356  : 					i = i - 9;
; 357  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$24$[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR _k$36$[ebp]

; 358  : 					table[j++][k] = 0;
; 359  : 					table[j][k++] = 0;
; 360  : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR tv22461[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$24$[ebp]
	inc	eax
	mov	DWORD PTR _j$24$[ebp], eax
	mov	ecx, eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, ecx
	inc	eax
	mov	DWORD PTR _j$24$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	edx, DWORD PTR _j$24$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4+4], 0
	mov	eax, ebx
	add	eax, 2
	mov	DWORD PTR _k$36$[ebp], eax

; 361  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ebx
	mov	DWORD PTR [eax+edx*4+8], 0

; 362  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 363  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, ebx
	mov	edx, DWORD PTR tv22207[ebp]

; 364  : 					table[j][k++] = 0;
; 365  : 					table[j][k] = 0;
; 366  : 
; 367  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _j$24$[ebp], edx
	mov	DWORD PTR [eax+ecx*4+4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+8], 0
	add	DWORD PTR [ebx], 9

; 368  : 					if (f == 31) {

	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	jne	SHORT $LN46@cub_9

; 369  : 						K--;

	mov	edx, DWORD PTR _K$1$[ebp]
	dec	edx

; 370  : 						k++;

	add	ecx, 3
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$36$[ebp], ecx

; 371  : 					}

	jmp	SHORT $LN571@cub_9
$LN46@cub_9:

; 372  : 					else {
; 373  : 						J--;

	mov	ecx, DWORD PTR _J$1$[ebp]
	dec	ecx

; 374  : 						j--;

	dec	edx
	mov	DWORD PTR _j$24$[ebp], edx

; 375  : 					}
; 376  : 				}
; 377  : 			}
; 378  : 			if (table[0][n - 1] != n * n && flag == 21 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN47@cub_9
$LN361@cub_9:

; 353  : 				if (result == -1 && table[0][n - 1] != n*n) {

	mov	ecx, DWORD PTR _J$1$[ebp]

; 375  : 					}
; 376  : 				}
; 377  : 			}
; 378  : 			if (table[0][n - 1] != n * n && flag == 21 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN47@cub_9
$LN362@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN571@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN47@cub_9:
	mov	eax, DWORD PTR _k$36$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22195[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22197[ebp], edx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN49@cub_9
	cmp	DWORD PTR _flag$[ebp], 21		; 00000015H
	jne	$LN49@cub_9
	test	edx, edx
	je	$LN49@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN49@cub_9

; 379  : 				k--;

	mov	ecx, DWORD PTR _k$36$[ebp]

; 380  : 				K--;

	dec	edx
	dec	ecx
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$23$[ebp], ecx

; 381  : 				////c_8(table, &i, &j, &k);
; 382  : 
; 383  : 				table[j][k--] = i++;
; 384  : 				table[j++][k] = i++;
; 385  : 				table[j][k++] = i++;
; 386  : 				table[j++][k] = i++;
; 387  : 				table[j][k--] = i++;
; 388  : 				table[j][k--] = i++;
; 389  : 				table[j--][k] = i++;
; 390  : 				table[j--][k] = i++;
; 391  : 				table[j][k] = i++;
; 392  : 
; 393  : 				*sum -= 9;
; 394  : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	dec	ecx
	mov	DWORD PTR tv21784[ebp], eax
	mov	eax, DWORD PTR _j$24$[ebp]
	mov	ebx, DWORD PTR tv21784[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _k$24$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$24$[ebp]
	mov	ebx, DWORD PTR _k$23$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$24$[ebp]
	inc	eax
	mov	DWORD PTR _j$23$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$23$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$23$[ebp]
	inc	eax
	mov	DWORD PTR _j$22$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	ebx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR _j$22$[ebp]
	dec	ecx
	inc	esi
	mov	DWORD PTR tv21786[ebp], ebx
	mov	DWORD PTR _k$36$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv22682[ebp], eax
	inc	esi
	mov	eax, DWORD PTR _j$22$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	push	ecx
	push	DWORD PTR _j$24$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$23$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$24$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23151[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 395  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN359@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN359@cub_9

; 396  : 					////c_88(table, &i, &j, &k);
; 397  : 
; 398  : 					i = i - 9;
; 399  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv23151[ebp]
	sub	esi, 9

; 400  : 					table[j++][k] = 0;

	mov	edx, DWORD PTR _j$23$[ebp]
	mov	ecx, DWORD PTR tv22682[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 401  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [ecx+eax], 0

; 402  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	ecx, DWORD PTR tv21786[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 403  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	ecx, DWORD PTR _k$23$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 404  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 405  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$24$[ebp]

; 406  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$24$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 407  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21784[ebp]

; 408  : 
; 409  : 					*sum += 9;
; 410  : 					K++;

	mov	edx, DWORD PTR tv22197[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ecx+eax], 0

; 411  : 					k++;

	mov	eax, DWORD PTR tv22195[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$36$[ebp], eax
	jmp	SHORT $LN49@cub_9
$LN359@cub_9:

; 412  : 				}
; 413  : 			}
; 414  : 			if (table[0][n - 1] != n * n && flag == 19 || flag == 41) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN49@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR [eax+ecx-4]
	mov	eax, DWORD PTR tv23483[ebp]
	cmp	ecx, eax
	mov	DWORD PTR tv23506[ebp], ecx
	mov	ecx, DWORD PTR _flag$[ebp]
	je	SHORT $LN52@cub_9
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN282@cub_9
$LN52@cub_9:
	mov	ebx, DWORD PTR _j$24$[ebp]
	mov	DWORD PTR _j$35$[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	cmp	ecx, 41					; 00000029H
	jne	$LN349@cub_9

; 415  : 				if (table[0][n - 1] != n * n && flag == 19 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	cmp	DWORD PTR tv23506[ebp], eax
	je	$LN53@cub_9
	cmp	ecx, 19					; 00000013H
	jne	$LN53@cub_9
$LN282@cub_9:
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN53@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	SHORT $LN53@cub_9

; 416  : 					k++;
; 417  : 					K++;
; 418  : 					////c_3(table, &i, &j, &k);
; 419  : 
; 420  : 					table[j][k++] = i++;

	mov	ecx, DWORD PTR _k$36$[ebp]
	inc	edx

; 421  : 					table[j--][k] = i++;
; 422  : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	edx, DWORD PTR _j$24$[ebp]

; 423  : 					table[j--][k] = i++;
; 424  : 					table[j][k++] = i++;
; 425  : 					table[j][k++] = i++;

	add	DWORD PTR _k$36$[ebp], 3
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+8], esi
	lea	ecx, DWORD PTR [edx-1]
	lea	edx, DWORD PTR [ecx*4]
	inc	esi
	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi

; 426  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	ecx, DWORD PTR _k$36$[ebp]

; 427  : 					table[j++][k] = i++;
; 428  : 					table[j][k] = i++;
; 429  : 
; 430  : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edx+edi]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$24$[ebp]
	mov	DWORD PTR _j$35$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$24$[ebp]
	jmp	$LN55@cub_9
$LN53@cub_9:

; 431  : 				else if (j != 0 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	eax, DWORD PTR _j$24$[ebp]
	mov	ecx, eax
	mov	DWORD PTR _j$35$[ebp], ecx
	test	eax, eax
	je	$LN55@cub_9
	mov	ecx, DWORD PTR _J$1$[ebp]
	mov	DWORD PTR _j$35$[ebp], eax
	test	ecx, ecx
	je	$LN563@cub_9
	mov	edi, DWORD PTR _tab$[ebp]
	mov	DWORD PTR _j$35$[ebp], eax
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [edi+ecx*4]
	mov	edi, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	SHORT $LN563@cub_9

; 432  : 					j--;

	mov	edx, DWORD PTR _j$24$[ebp]

; 433  : 					J--;
; 434  : 					////c_3(table, &i, &j, &k);
; 435  : 
; 436  : 					table[j][k++] = i++;

	mov	ecx, DWORD PTR _k$36$[ebp]
	dec	edx

; 437  : 					table[j--][k] = i++;
; 438  : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR _k$36$[ebp]

; 439  : 					table[j--][k] = i++;
; 440  : 					table[j][k++] = i++;
; 441  : 					table[j][k++] = i++;

	add	DWORD PTR _k$36$[ebp], 2
	dec	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR _j$35$[ebp], edx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	lea	ecx, DWORD PTR [edx*4-4]
	mov	eax, DWORD PTR [ecx+edi]
	inc	esi
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi

; 442  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	edx, DWORD PTR _k$36$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 443  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 444  : 					table[j][k] = i++;

	mov	eax, DWORD PTR _j$35$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	edx, DWORD PTR _K$1$[ebp]
$LN563@cub_9:

; 445  : 
; 446  : 				}
; 447  : 				*sum -= 9;

	mov	ecx, DWORD PTR _j$35$[ebp]
$LN55@cub_9:
	mov	eax, DWORD PTR _k$36$[ebp]

; 448  : 				f = flag;
; 449  : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	edi, DWORD PTR _table$[ebp]
	push	DWORD PTR _I$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR tv22471[ebp], eax
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv22189[ebp], ecx
	push	eax
	push	DWORD PTR _j$35$[ebp]
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 450  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN349@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN348@cub_9

; 451  : 					////c_33(table, &i, &j, &k);
; 452  : 
; 453  : 					i = i - 9;
; 454  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR _j$35$[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR _k$36$[ebp]

; 455  : 					table[j--][k] = 0;
; 456  : 					table[j][k--] = 0;
; 457  : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR tv22471[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$35$[ebp]
	dec	eax
	mov	DWORD PTR _j$35$[ebp], eax
	mov	ecx, eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, ecx
	dec	eax
	mov	DWORD PTR _j$35$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	edx, DWORD PTR _j$35$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4-4], 0
	mov	eax, ebx
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _k$36$[ebp], eax

; 458  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ebx
	mov	DWORD PTR [eax+edx*4-8], 0

; 459  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 460  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, ebx
	mov	edx, DWORD PTR tv22189[ebp]

; 461  : 					table[j][k--] = 0;
; 462  : 
; 463  : 					table[j][k] = 0;
; 464  : 
; 465  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _j$35$[ebp], edx
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-8], 0
	add	DWORD PTR [ebx], 9

; 466  : 					if (f == 19) {

	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	jne	SHORT $LN57@cub_9

; 467  : 						K--;

	mov	edx, DWORD PTR _K$1$[ebp]
	dec	edx

; 468  : 						k--;

	add	ecx, -3					; fffffffdH
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$36$[ebp], ecx

; 469  : 					}

	jmp	SHORT $LN573@cub_9
$LN57@cub_9:

; 470  : 					else {
; 471  : 						J++;

	mov	ecx, DWORD PTR _J$1$[ebp]
	inc	ecx

; 472  : 						j++;

	inc	edx
	mov	DWORD PTR _j$35$[ebp], edx

; 473  : 					}
; 474  : 				}
; 475  : 			}
; 476  : 			if (table[0][n - 1] != n * n && flag == 49 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN58@cub_9
$LN348@cub_9:

; 450  : 				if (result == -1 && table[0][n - 1] != n*n) {

	mov	ecx, DWORD PTR _J$1$[ebp]

; 473  : 					}
; 474  : 				}
; 475  : 			}
; 476  : 			if (table[0][n - 1] != n * n && flag == 49 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN58@cub_9
$LN349@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN573@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN58@cub_9:
	mov	eax, DWORD PTR _k$36$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22405[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22181[ebp], edx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN60@cub_9
	cmp	DWORD PTR _flag$[ebp], 49		; 00000031H
	jne	$LN60@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN60@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN60@cub_9

; 477  : 				k++;
; 478  : 				K++;
; 479  : 				////c_3(table, &i, &j, &k);
; 480  : 
; 481  : 				table[j][k++] = i++;

	mov	ecx, DWORD PTR _j$35$[ebp]
	inc	edx
	mov	ebx, DWORD PTR _k$36$[ebp]
	inc	ebx
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$28$[ebp], ebx
	mov	eax, DWORD PTR [edi+ecx*4]

; 482  : 				table[j--][k] = i++;
; 483  : 				table[j][k--] = i++;
; 484  : 				table[j--][k] = i++;
; 485  : 				table[j][k++] = i++;
; 486  : 				table[j][k++] = i++;
; 487  : 				table[j++][k] = i++;
; 488  : 				table[j++][k] = i++;
; 489  : 				table[j][k] = i++;
; 490  : 
; 491  : 				*sum -= 9;
; 492  : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	dec	ecx
	mov	DWORD PTR _j$33$[ebp], ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	dec	ecx
	mov	DWORD PTR _j$32$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ecx, DWORD PTR [ebx+2]
	mov	DWORD PTR _k$36$[ebp], ecx
	mov	DWORD PTR tv21686[ebp], ecx
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21776[ebp], eax
	inc	esi
	mov	eax, DWORD PTR _j$32$[ebp]
	mov	ebx, DWORD PTR tv21776[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$33$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$35$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23121[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	DWORD PTR _j$35$[ebp]
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 493  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN346@cub_9
	mov	eax, DWORD PTR tv21686[ebp]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR _k$36$[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN346@cub_9

; 494  : 					////c_33(table, &i, &j, &k);
; 495  : 
; 496  : 					i = i - 9;
; 497  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv23121[ebp]
	sub	esi, 9

; 498  : 					table[j--][k] = 0;

	mov	edx, DWORD PTR _j$33$[ebp]
	mov	ecx, DWORD PTR tv21776[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 499  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [ecx+eax], 0

; 500  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	ecx, DWORD PTR _k$28$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 501  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+ecx*4], 0

; 502  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 503  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR tv21686[ebp]

; 504  : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$35$[ebp]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 505  : 
; 506  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$28$[ebp]

; 507  : 
; 508  : 					*sum += 9;
; 509  : 					k--;
; 510  : 					K--;

	mov	edx, DWORD PTR tv22181[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv22405[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$36$[ebp], eax
	jmp	SHORT $LN60@cub_9
$LN346@cub_9:

; 511  : 				}
; 512  : 			}
; 513  : 			if (table[0][n - 1] != n * n && flag == 19 || flag == 41) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN60@cub_9:
	mov	eax, DWORD PTR _k$36$[ebp]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22175[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+ecx-4]
	mov	eax, DWORD PTR tv23483[ebp]
	cmp	ecx, eax
	mov	DWORD PTR tv23504[ebp], ecx
	mov	ecx, DWORD PTR _flag$[ebp]
	je	SHORT $LN63@cub_9
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN281@cub_9
$LN63@cub_9:
	mov	edi, DWORD PTR _j$35$[ebp]
	mov	DWORD PTR _j$49$[ebp], edi
	mov	edi, DWORD PTR _table$[ebp]
	cmp	ecx, 41					; 00000029H
	jne	$LN329@cub_9

; 514  : 				if (table[0][n - 1] != n * n && flag == 19 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	cmp	DWORD PTR tv23504[ebp], eax
	je	$LN64@cub_9
	cmp	ecx, 19					; 00000013H
	jne	$LN64@cub_9
$LN281@cub_9:
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN64@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN64@cub_9

; 515  : 					k++;
; 516  : 					K++;
; 517  : 					////c_5(table, &i, &j, &k);
; 518  : 
; 519  : 					table[j--][k] = i++;

	mov	ebx, DWORD PTR _j$35$[ebp]
	mov	ecx, DWORD PTR _k$36$[ebp]
	inc	DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi

; 520  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	add	ecx, 2

; 521  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	inc	esi
	mov	DWORD PTR _k$36$[ebp], ecx

; 522  : 					table[j][k++] = i++;

	inc	DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 523  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ebx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 524  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$35$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$35$[ebp]
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _j$49$[ebp], eax

; 525  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 526  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]

; 527  : 					table[j][k] = i++;
; 528  : 
; 529  : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	mov	ecx, edx
	mov	eax, DWORD PTR _j$49$[ebp]
	inc	esi
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	DWORD PTR _k$36$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
$LN528@cub_9:

; 544  : 
; 545  : 				}
; 546  : 				*sum -= 9;

	mov	eax, DWORD PTR _j$49$[ebp]
	jmp	$LN66@cub_9
$LN64@cub_9:

; 530  : 				else if (j != 0 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _j$35$[ebp]
	mov	eax, ecx
	mov	DWORD PTR _j$49$[ebp], eax
	test	ecx, ecx
	je	$LN536@cub_9
	mov	DWORD PTR _j$49$[ebp], ecx
	mov	ecx, DWORD PTR _J$1$[ebp]
	test	ecx, ecx
	je	$LN529@cub_9
	mov	edi, DWORD PTR _tab$[ebp]
	mov	DWORD PTR _j$49$[ebp], eax
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [edi+ecx*4]
	mov	edi, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _k$36$[ebp]
	cmp	eax, 1
	jne	SHORT $LN528@cub_9

; 531  : 					j--;
; 532  : 					J--;
; 533  : 					////c_5(table, &i, &j, &k);
; 534  : 
; 535  : 					table[j--][k] = i++;

	mov	ebx, DWORD PTR _j$35$[ebp]
	dec	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 536  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	ecx

; 537  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	inc	esi
	mov	DWORD PTR _k$36$[ebp], ecx

; 538  : 					table[j][k++] = i++;

	inc	DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 539  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	ebx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 540  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$35$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-8]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$35$[ebp]
	add	eax, -3					; fffffffdH
	mov	DWORD PTR _j$49$[ebp], eax

; 541  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 542  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 543  : 					table[j][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ecx, DWORD PTR tv22175[ebp]
	mov	DWORD PTR _k$36$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	jmp	SHORT $LN66@cub_9
$LN529@cub_9:

; 530  : 				else if (j != 0 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	eax, DWORD PTR _j$49$[ebp]
$LN536@cub_9:

; 544  : 
; 545  : 				}
; 546  : 				*sum -= 9;

	mov	ecx, DWORD PTR _k$36$[ebp]
$LN66@cub_9:

; 547  : 				f = flag;
; 548  : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22479[ebp], eax
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR tv22171[ebp], ecx
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	DWORD PTR _j$49$[ebp]
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 549  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN329@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN328@cub_9

; 550  : 					////c_55(table, &i, &j, &k);
; 551  : 
; 552  : 					i = i - 9;
; 553  : 
; 554  : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$49$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$36$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	inc	ecx

; 555  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, ecx
	mov	DWORD PTR _k$36$[ebp], ecx
	inc	DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0

; 556  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]

; 557  : 					table[j++][k] = 0;

	mov	ebx, DWORD PTR tv22479[ebp]
	mov	edx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [ebx+2]
	mov	DWORD PTR _j$49$[ebp], eax

; 558  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4], 0

; 559  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+ecx*4], 0

; 560  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+ecx*4], 0

; 561  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	ecx, DWORD PTR tv22171[ebp]
	mov	DWORD PTR _k$36$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 562  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+8]

; 563  : 
; 564  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9

; 565  : 					if (f == 19) {

	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	jne	SHORT $LN68@cub_9

; 566  : 						K--;

	mov	edx, DWORD PTR _K$1$[ebp]
	dec	edx

; 567  : 						k--;

	dec	ecx
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$36$[ebp], ecx

; 568  : 					}

	jmp	SHORT $LN575@cub_9
$LN68@cub_9:

; 569  : 					else {
; 570  : 						J++;

	mov	ecx, DWORD PTR _J$1$[ebp]

; 571  : 						j++;

	mov	edx, DWORD PTR tv22479[ebp]
	inc	ecx
	add	edx, 3
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	DWORD PTR _j$49$[ebp], edx

; 572  : 					}
; 573  : 				}
; 574  : 			}
; 575  : 			if (table[0][n - 1] != n * n && flag == 11 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN69@cub_9
$LN328@cub_9:

; 549  : 				if (result == -1 && table[0][n - 1] != n*n) {

	mov	ecx, DWORD PTR _J$1$[ebp]

; 572  : 					}
; 573  : 				}
; 574  : 			}
; 575  : 			if (table[0][n - 1] != n * n && flag == 11 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN69@cub_9
$LN329@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN575@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN69@cub_9:
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22161[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22159[ebp], ecx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN71@cub_9
	cmp	DWORD PTR _flag$[ebp], 11		; 0000000bH
	jne	$LN71@cub_9
	test	ecx, ecx
	je	$LN71@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	edi, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [edi+ecx*4]
	mov	edi, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _J$1$[ebp]
	cmp	eax, 1
	jne	$LN71@cub_9

; 576  : 				j--;

	mov	eax, DWORD PTR _j$49$[ebp]

; 577  : 				J--;

	dec	ecx

; 578  : 				////c_5(table, &i, &j, &k);
; 579  : 
; 580  : 				table[j--][k] = i++;

	mov	ebx, DWORD PTR _k$36$[ebp]
	dec	eax
	mov	edx, eax
	mov	DWORD PTR _j$49$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21759[ebp], eax
	mov	DWORD PTR _j$37$[ebp], edx
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4], esi
	mov	eax, edx
	dec	eax
	inc	esi
	mov	DWORD PTR _j$49$[ebp], eax

; 581  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	ebx

; 582  : 				table[j++][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	inc	esi
	mov	DWORD PTR _k$35$[ebp], ebx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 583  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 584  : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]

; 585  : 				table[j--][k] = i++;
; 586  : 				table[j][k--] = i++;

	mov	edx, DWORD PTR _k$35$[ebp]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	DWORD PTR _j$49$[ebp], eax
	mov	DWORD PTR _j$38$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21761[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	dec	eax
	mov	DWORD PTR _j$49$[ebp], eax
	lea	ebx, DWORD PTR [edi+eax*4]
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR tv23103[ebp], ebx
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 587  : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 588  : 				table[j][k] = i++;

	mov	eax, DWORD PTR _k$36$[ebp]
	lea	edx, DWORD PTR [eax*4]
	mov	eax, DWORD PTR [ebx]

; 589  : 
; 590  : 				*sum -= 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR tv22642[ebp], edx
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 591  : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	ecx
	push	DWORD PTR _I$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _tab$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$36$[ebp]
	push	DWORD PTR _j$49$[ebp]
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 592  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN412@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN412@cub_9

; 593  : 					////c_55(table, &i, &j, &k);
; 594  : 
; 595  : 					i = i - 9;
; 596  : 
; 597  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv23103[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22642[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 598  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _k$35$[ebp]
	mov	DWORD PTR [eax+edx*4], 0

; 599  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]

; 600  : 					table[j++][k] = 0;
; 601  : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$37$[ebp]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR tv21761[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 602  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 603  : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$38$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 604  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 605  : 					table[j][k] = 0;

	mov	eax, DWORD PTR tv21759[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 606  : 
; 607  : 					j++;

	mov	eax, DWORD PTR tv22161[ebp]

; 608  : 					J++;

	mov	ecx, DWORD PTR tv22159[ebp]

; 609  : 					*sum += 9;

	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$49$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN71@cub_9
$LN412@cub_9:

; 610  : 				}
; 611  : 			}
; 612  : 			if (table[0][n - 1] != n * n && flag == 43 || flag == 37) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN71@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR [eax+edx-4]
	mov	eax, DWORD PTR tv23483[ebp]
	cmp	edx, eax
	mov	DWORD PTR tv23502[ebp], edx
	mov	edx, DWORD PTR _flag$[ebp]
	je	SHORT $LN74@cub_9
	cmp	edx, 43					; 0000002bH
	je	$LN332@cub_9
$LN74@cub_9:
	mov	ebx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR _k$47$[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	cmp	edx, 37					; 00000025H
	jne	$LN335@cub_9

; 613  : 				if (table[0][n - 1] != n * n && flag == 37 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	cmp	DWORD PTR tv23502[ebp], eax
	je	$LN332@cub_9
	cmp	edx, 37					; 00000025H
	mov	edx, DWORD PTR _K$1$[ebp]
	jne	$LN75@cub_9
	test	edx, edx
	je	$LN75@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	SHORT $LN75@cub_9

; 614  : 					k--;
; 615  : 					K--;
; 616  : 					////c_6(table, &i, &j, &k);
; 617  : 
; 618  : 					table[j--][k] = i++;

	mov	ecx, DWORD PTR _j$49$[ebp]
	mov	edx, DWORD PTR _k$36$[ebp]
	dec	edx
	dec	DWORD PTR _K$1$[ebp]
	mov	DWORD PTR _k$47$[ebp], edx
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 619  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4-4]

; 620  : 					table[j++][k] = i++;

	lea	ecx, DWORD PTR [edx*4-4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 621  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 622  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi

; 623  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _j$49$[ebp], eax

; 624  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi

; 625  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi

; 626  : 					table[j][k] = i++;

	mov	ecx, edx
	mov	eax, DWORD PTR _j$49$[ebp]
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi

; 627  : 
; 628  : 				}

	jmp	$LN577@cub_9
$LN332@cub_9:

; 629  : 				else if (j != 0 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN75@cub_9:
	cmp	DWORD PTR _j$49$[ebp], 0
	mov	eax, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR _k$47$[ebp], eax
	je	$LN77@cub_9
	mov	ecx, DWORD PTR _J$1$[ebp]
	mov	DWORD PTR _k$47$[ebp], eax
	test	ecx, ecx
	je	$LN77@cub_9
	mov	ebx, DWORD PTR _tab$[ebp]
	mov	DWORD PTR _k$47$[ebp], eax
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [ebx+ecx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	SHORT $LN77@cub_9

; 630  : 					j--;
; 631  : 					J--;
; 632  : 					////c_6(table, &i, &j, &k);
; 633  : 
; 634  : 					table[j--][k] = i++;

	mov	ecx, DWORD PTR _j$49$[ebp]
	mov	edx, DWORD PTR _k$36$[ebp]
	dec	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 635  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4-8]
	lea	ecx, DWORD PTR [edx-1]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 636  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	lea	edx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR [edi+eax*4-8]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 637  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 638  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi

; 639  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-8]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	add	eax, -3					; fffffffdH
	mov	DWORD PTR _j$49$[ebp], eax

; 640  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi

; 641  : 					table[j][k++] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 642  : 					table[j][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	edx, DWORD PTR _k$36$[ebp]
	mov	DWORD PTR _k$47$[ebp], edx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
$LN577@cub_9:

; 643  : 
; 644  : 				}
; 645  : 				*sum -= 9;

	inc	esi
$LN77@cub_9:

; 646  : 				f = flag;
; 647  : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR _k$47$[ebp]
	push	DWORD PTR _J$1$[ebp]
	mov	edx, DWORD PTR _j$49$[ebp]
	push	DWORD PTR _I$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR tv22285[ebp], edx
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv22153[ebp], eax
	push	eax
	push	edx
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 648  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN335@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN334@cub_9

; 649  : 					////c_66(table, &i, &j, &k);
; 650  : 
; 651  : 					i = i - 9;
; 652  : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$49$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$47$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	dec	ecx

; 653  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, ecx
	mov	DWORD PTR _k$47$[ebp], ecx
	dec	DWORD PTR _k$47$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0

; 654  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]

; 655  : 					table[j++][k] = 0;

	mov	ebx, DWORD PTR tv22285[ebp]
	mov	edx, DWORD PTR _k$47$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [ebx+2]
	mov	DWORD PTR _j$49$[ebp], eax

; 656  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4], 0

; 657  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+ecx*4], 0

; 658  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+ecx*4], 0

; 659  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	ecx, DWORD PTR tv22153[ebp]
	mov	DWORD PTR _k$47$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 660  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4+8]

; 661  : 
; 662  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9

; 663  : 					if (f == 37) {

	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	jne	SHORT $LN79@cub_9

; 664  : 						K++;

	mov	edx, DWORD PTR _K$1$[ebp]
	inc	edx

; 665  : 						k++;

	inc	ecx
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$47$[ebp], ecx

; 666  : 					}

	jmp	SHORT $LN578@cub_9
$LN79@cub_9:

; 667  : 					else {
; 668  : 						J++;

	mov	ecx, DWORD PTR _J$1$[ebp]

; 669  : 						j++;

	mov	edx, DWORD PTR tv22285[ebp]
	inc	ecx
	add	edx, 3
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	DWORD PTR _j$49$[ebp], edx

; 670  : 					}
; 671  : 				}
; 672  : 			}
; 673  : 			if (table[0][n - 1] != n * n && flag == 33 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN80@cub_9
$LN334@cub_9:

; 648  : 				if (result == -1 && table[0][n - 1] != n*n) {

	mov	ecx, DWORD PTR _J$1$[ebp]

; 670  : 					}
; 671  : 				}
; 672  : 			}
; 673  : 			if (table[0][n - 1] != n * n && flag == 33 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN80@cub_9
$LN335@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN578@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN80@cub_9:
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22143[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22141[ebp], ecx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN82@cub_9
	cmp	DWORD PTR _flag$[ebp], 33		; 00000021H
	jne	$LN82@cub_9
	test	ecx, ecx
	je	$LN82@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	ebx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [ebx+ecx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _J$1$[ebp]
	cmp	eax, 1
	jne	$LN82@cub_9

; 674  : 				j--;

	mov	eax, DWORD PTR _j$49$[ebp]

; 675  : 				J--;

	dec	ecx

; 676  : 				////c_6(table, &i, &j, &k);
; 677  : 
; 678  : 				table[j--][k] = i++;

	mov	edx, DWORD PTR _k$47$[ebp]
	dec	eax
	mov	ebx, eax
	mov	DWORD PTR _j$49$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21744[ebp], eax
	mov	DWORD PTR _j$40$[ebp], ebx
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], esi
	mov	eax, ebx
	dec	eax
	inc	esi
	mov	DWORD PTR _j$49$[ebp], eax

; 679  : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	dec	edx

; 680  : 				table[j++][k] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	inc	esi
	mov	DWORD PTR _k$45$[ebp], edx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 681  : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 682  : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]

; 683  : 				table[j--][k] = i++;
; 684  : 				table[j][k++] = i++;

	mov	ebx, DWORD PTR _k$45$[ebp]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	DWORD PTR _j$49$[ebp], eax
	mov	DWORD PTR _j$41$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21747[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	dec	eax
	mov	DWORD PTR _j$49$[ebp], eax
	lea	edx, DWORD PTR [edi+eax*4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv23093[ebp], edx
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi

; 685  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 686  : 				table[j][k] = i++;

	mov	eax, DWORD PTR _k$47$[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	eax, DWORD PTR [edx]

; 687  : 
; 688  : 				*sum -= 9;
; 689  : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR tv22612[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$47$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$49$[ebp]
	push	esi
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 690  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN415@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN415@cub_9

; 691  : 					////c_66(table, &i, &j, &k);
; 692  : 
; 693  : 					i = i - 9;
; 694  : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv23093[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22612[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 695  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _k$45$[ebp]
	mov	DWORD PTR [eax+edx*4], 0

; 696  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]

; 697  : 					table[j++][k] = 0;
; 698  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$40$[ebp]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR tv21747[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 699  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 700  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$41$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 701  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$47$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 702  : 					table[j][k] = 0;

	mov	eax, DWORD PTR tv21744[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 703  : 
; 704  : 					*sum += 9;
; 705  : 					j++;

	mov	eax, DWORD PTR tv22143[ebp]

; 706  : 					J++;

	mov	ecx, DWORD PTR tv22141[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$49$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN82@cub_9
$LN415@cub_9:

; 707  : 				}
; 708  : 			}
; 709  : 			if (table[0][n - 1] != n * n && flag == 43 || flag == 37) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN82@cub_9:
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22137[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+edx-4]
	mov	eax, DWORD PTR tv23483[ebp]
	cmp	edx, eax
	mov	DWORD PTR tv23499[ebp], edx
	mov	edx, DWORD PTR _flag$[ebp]
	je	SHORT $LN85@cub_9
	cmp	edx, 43					; 0000002bH
	je	$LN344@cub_9
$LN85@cub_9:
	mov	ebx, DWORD PTR _k$47$[ebp]
	mov	DWORD PTR _k$94$[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	cmp	edx, 37					; 00000025H
	jne	$LN357@cub_9

; 710  : 				if (table[0][n - 1] != n * n && flag == 37 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	cmp	DWORD PTR tv23499[ebp], eax
	je	$LN344@cub_9
	cmp	edx, 37					; 00000025H
	mov	edx, DWORD PTR _K$1$[ebp]
	jne	$LN86@cub_9
	test	edx, edx
	je	$LN86@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	SHORT $LN86@cub_9

; 711  : 					k--;
; 712  : 					K--;
; 713  : 					////c_7(table, &i, &j, &k);
; 714  : 
; 715  : 					table[j][k--] = i++;

	mov	ecx, DWORD PTR _k$47$[ebp]
	dec	edx

; 716  : 					table[j--][k] = i++;
; 717  : 					table[j][k++] = i++;

	mov	ebx, DWORD PTR _k$47$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	edx, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-8], esi
	lea	ecx, DWORD PTR [edx*4-4]
	mov	eax, DWORD PTR [ecx+edi]
	inc	esi

; 718  : 					table[j--][k] = i++;

	sub	edx, 2
	mov	DWORD PTR _j$49$[ebp], edx
	mov	DWORD PTR [eax+ebx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi

; 719  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi

; 720  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ebx

; 721  : 					table[j++][k] = i++;
; 722  : 					table[j++][k] = i++;
; 723  : 					table[j][k] = i++;
; 724  : 
; 725  : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+edx*4-8], esi
	add	edx, -3					; fffffffdH
	mov	eax, DWORD PTR _j$49$[ebp]
	inc	esi
	mov	DWORD PTR _k$94$[ebp], edx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR tv22137[ebp]
	mov	DWORD PTR _j$49$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	jmp	$LN88@cub_9
$LN344@cub_9:

; 726  : 				else if (j != 0 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN86@cub_9:
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ecx, DWORD PTR _k$47$[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	test	eax, eax
	je	$LN526@cub_9
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	ecx, DWORD PTR _J$1$[ebp]
	test	ecx, ecx
	je	$LN526@cub_9
	mov	eax, DWORD PTR _k$47$[ebp]
	mov	ebx, DWORD PTR _tab$[ebp]
	mov	DWORD PTR _k$94$[ebp], eax
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [ebx+ecx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	SHORT $LN524@cub_9

; 727  : 					j--;

	mov	ebx, DWORD PTR _j$49$[ebp]

; 728  : 					J--;
; 729  : 					////c_7(table, &i, &j, &k);
; 730  : 
; 731  : 					table[j][k--] = i++;

	mov	ecx, DWORD PTR _k$47$[ebp]
	dec	ebx

; 732  : 					table[j--][k] = i++;
; 733  : 					table[j][k++] = i++;

	mov	edx, DWORD PTR _k$47$[ebp]
	dec	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR tv22135[ebp], ebx
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	lea	ecx, DWORD PTR [ebx*4-4]
	mov	eax, DWORD PTR [ecx+edi]
	inc	esi
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi

; 734  : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 735  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 736  : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+edx*4-4], esi
	mov	eax, edx
	add	eax, -2					; fffffffeH
	inc	esi
	mov	DWORD PTR _k$94$[ebp], eax

; 737  : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	ebx, DWORD PTR _k$94$[ebp]

; 738  : 					table[j++][k] = i++;
; 739  : 					table[j][k] = i++;

	mov	edx, ebx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	ecx, ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR tv22135[ebp]
	mov	DWORD PTR _j$49$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	jmp	SHORT $LN88@cub_9
$LN524@cub_9:

; 726  : 				else if (j != 0 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	eax, DWORD PTR _j$49$[ebp]
$LN526@cub_9:

; 740  : 
; 741  : 				}
; 742  : 				*sum -= 9;

	mov	edx, DWORD PTR _k$94$[ebp]
$LN88@cub_9:

; 743  : 				f = flag;
; 744  : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$1$[ebp]
	mov	DWORD PTR tv22371[ebp], edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22131[ebp], eax
	push	DWORD PTR _tab$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	edx
	push	DWORD PTR _j$49$[ebp]
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 745  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN357@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN356@cub_9

; 746  : 					////c_77(table, &i, &j, &k);
; 747  : 
; 748  : 					i = i - 9;
; 749  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR _j$49$[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR _k$94$[ebp]

; 750  : 					table[j--][k] = 0;
; 751  : 					table[j][k++] = 0;
; 752  : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR tv22371[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$49$[ebp]
	dec	eax
	mov	DWORD PTR _j$49$[ebp], eax
	mov	ecx, eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, ecx
	dec	eax
	mov	DWORD PTR _j$49$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	edx, DWORD PTR _j$49$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4+4], 0
	mov	eax, ebx
	add	eax, 2
	mov	DWORD PTR _k$94$[ebp], eax

; 753  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ebx
	mov	DWORD PTR [eax+edx*4+8], 0

; 754  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 755  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, ebx
	mov	edx, DWORD PTR tv22131[ebp]

; 756  : 					table[j][k++] = 0;
; 757  : 					table[j][k] = 0;
; 758  : 
; 759  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _j$49$[ebp], edx
	mov	DWORD PTR [eax+ecx*4+4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4+8], 0
	add	DWORD PTR [ebx], 9

; 760  : 					if (f == 37) {

	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	jne	SHORT $LN90@cub_9

; 761  : 						K++;

	mov	edx, DWORD PTR _K$1$[ebp]
	inc	edx

; 762  : 						k++;

	add	ecx, 3
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$94$[ebp], ecx

; 763  : 					}

	jmp	SHORT $LN580@cub_9
$LN90@cub_9:

; 764  : 					else {
; 765  : 						J++;

	mov	ecx, DWORD PTR _J$1$[ebp]
	inc	ecx

; 766  : 						j++;

	inc	edx
	mov	DWORD PTR _j$49$[ebp], edx

; 767  : 					}
; 768  : 				}
; 769  : 			}
; 770  : 			if (table[0][n - 1] != n * n && flag == 47 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN91@cub_9
$LN356@cub_9:

; 745  : 				if (result == -1 && table[0][n - 1] != n*n) {

	mov	ecx, DWORD PTR _J$1$[ebp]

; 767  : 					}
; 768  : 				}
; 769  : 			}
; 770  : 			if (table[0][n - 1] != n * n && flag == 47 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN91@cub_9
$LN357@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN580@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN91@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22121[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22111[ebp], ecx
	mov	DWORD PTR tv22119[ebp], edx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	je	$LN93@cub_9
	cmp	DWORD PTR _flag$[ebp], 47		; 0000002fH
	jne	$LN93@cub_9
	test	edx, edx
	je	$LN93@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN405@cub_9

; 771  : 				k--;

	mov	ecx, DWORD PTR _k$94$[ebp]

; 772  : 				K--;

	dec	edx
	dec	ecx
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR _k$49$[ebp], ecx

; 773  : 				////c_7(table, &i, &j, &k);
; 774  : 
; 775  : 				table[j][k--] = i++;
; 776  : 				table[j--][k] = i++;
; 777  : 				table[j][k++] = i++;
; 778  : 				table[j--][k] = i++;
; 779  : 				table[j][k--] = i++;
; 780  : 				table[j][k--] = i++;
; 781  : 				table[j++][k] = i++;
; 782  : 				table[j++][k] = i++;
; 783  : 				table[j][k] = i++;
; 784  : 
; 785  : 				*sum -= 9;
; 786  : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	dec	ecx
	mov	DWORD PTR tv21736[ebp], eax
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ebx, DWORD PTR tv21736[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _k$50$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ebx, DWORD PTR _k$49$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	dec	eax
	mov	DWORD PTR _j$48$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$48$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$48$[ebp]
	dec	eax
	mov	DWORD PTR _j$47$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	ebx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR _j$47$[ebp]
	dec	ecx
	inc	esi
	mov	DWORD PTR tv21738[ebp], ebx
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv22592[ebp], eax
	inc	esi
	mov	eax, DWORD PTR _j$47$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	push	ecx
	push	DWORD PTR _j$49$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$48$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$49$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23078[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 787  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN354@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN354@cub_9

; 788  : 					////c_77(table, &i, &j, &k);
; 789  : 
; 790  : 					i = i - 9;
; 791  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv23078[ebp]
	sub	esi, 9

; 792  : 					table[j--][k] = 0;

	mov	edx, DWORD PTR _j$48$[ebp]
	mov	ecx, DWORD PTR tv22592[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 793  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [ecx+eax], 0

; 794  : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	ecx, DWORD PTR tv21738[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 795  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	ecx, DWORD PTR _k$49$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 796  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 797  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$50$[ebp]

; 798  : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$49$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 799  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21736[ebp]

; 800  : 
; 801  : 					*sum += 9;
; 802  : 					k++;
; 803  : 					K++;

	mov	edx, DWORD PTR tv22119[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv22121[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	jmp	SHORT $LN405@cub_9
$LN354@cub_9:

; 804  : 				}
; 805  : 			}
; 806  : 
; 807  : 			//зигзаги
; 808  : 			if (table[0][n - 1] != n * n && flag == 17 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN405@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN93@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR _k$52$[ebp], eax
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22079[ebp], edx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	je	$LN395@cub_9
	cmp	DWORD PTR _flag$[ebp], 17		; 00000011H
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax
	jne	$LN395@cub_9
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN395@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _j$49$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	$LN395@cub_9

; 809  : 				j++;
; 810  : 				J++;
; 811  : 				//zzHOR_1(table, &i, &j, &k);
; 812  : 
; 813  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR _j$49$[ebp]
	mov	ebx, DWORD PTR _k$94$[ebp]
	inc	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+ebx*4], esi

; 814  : 				table[j][k++] = i++;

	mov	eax, ebx
	mov	ebx, DWORD PTR _j$49$[ebp]
	inc	esi

; 815  : 				table[j++][k] = i++;

	lea	ecx, DWORD PTR [ebx+2]
	mov	DWORD PTR _j$50$[ebp], ecx
	lea	eax, DWORD PTR [eax*4+4]
	mov	DWORD PTR tv22515[ebp], eax
	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	edx, DWORD PTR tv22515[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4+4]

; 816  : 				table[j][k--] = i++;

	mov	ebx, edx
	mov	DWORD PTR [edx+eax+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]

; 817  : 				table[j][k--] = i++;
; 818  : 				table[j++][k] = i++;

	mov	edx, DWORD PTR _k$52$[ebp]
	mov	DWORD PTR [ebx+eax+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [ecx+1]

; 819  : 				table[j][k++] = i++;

	mov	ecx, DWORD PTR _k$52$[ebp]
	lea	edx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$87$[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv23073[ebp], edx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 820  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR _k$94$[ebp]
	add	DWORD PTR _k$94$[ebp], 2
	lea	ecx, DWORD PTR [eax*4+4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv22513[ebp], ecx
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 821  : 				table[j][k] = i++;

	mov	eax, DWORD PTR [edx]

; 822  : 
; 823  : 				*sum -= 9;
; 824  : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	mov	ecx, DWORD PTR _J$1$[ebp]
	push	edx
	push	ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [ebx+eax+4], esi
	inc	esi
	push	DWORD PTR _tab$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 825  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN395@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN395@cub_9

; 826  : 					////zzHOR_11(table, &i, &j, &k);
; 827  : 
; 828  : 					i = i - 9;
; 829  : 					table[j][k--] = 0;

	mov	edx, DWORD PTR tv23073[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22515[ebp]

; 830  : 					table[j][k--] = 0;
; 831  : 					table[j--][k] = 0;
; 832  : 					table[j][k++] = 0;
; 833  : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR tv22513[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax+4], 0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _k$52$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$50$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	edx, DWORD PTR _j$50$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax], 0

; 834  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]

; 835  : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$49$[ebp]

; 836  : 					table[j][k--] = 0;
; 837  : 					table[j][k] = 0;
; 838  : 
; 839  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]

; 840  : 					j--;

	mov	DWORD PTR _j$87$[ebp], edx
	mov	DWORD PTR [ecx+eax+4], 0
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [ecx+eax+4], 0
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, DWORD PTR _k$52$[ebp]
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 841  : 					J--;

	mov	ecx, DWORD PTR tv22111[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN95@cub_9
$LN395@cub_9:

; 842  : 				}
; 843  : 			}
; 844  : 			if (table[0][n - 1] != n * n && flag == 11 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN95@cub_9:
	mov	ebx, DWORD PTR _j$87$[ebp]
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR tv22519[ebp], ebx
	mov	DWORD PTR tv22105[ebp], ebx
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR _k$54$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22103[ebp], ecx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	je	$LN97@cub_9
	cmp	DWORD PTR _flag$[ebp], 11		; 0000000bH
	jne	$LN97@cub_9
	test	ecx, ecx
	je	$LN97@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _J$1$[ebp]
	cmp	eax, 1
	jne	$LN97@cub_9

; 845  : 				j--;
; 846  : 				J--;
; 847  : 				//zzHOR_2(table, &i, &j, &k);
; 848  : 
; 849  : 				table[j][k++] = i++;

	mov	edx, DWORD PTR tv22519[ebp]
	dec	ecx
	mov	ebx, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+ebx*4], esi

; 850  : 				table[j][k++] = i++;

	mov	eax, ebx
	inc	esi
	lea	ebx, DWORD PTR [eax*4+4]
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR tv22527[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 851  : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4-4]
	add	edx, -2					; fffffffeH
	mov	DWORD PTR _j$51$[ebp], edx
	mov	DWORD PTR [ebx+eax+4], esi
	inc	esi

; 852  : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax+4], esi
	inc	esi

; 853  : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 854  : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$54$[ebp]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$51$[ebp]
	dec	eax
	mov	DWORD PTR _j$87$[ebp], eax

; 855  : 				table[j][k++] = i++;

	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23070[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 856  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR _k$94$[ebp]
	add	DWORD PTR _k$94$[ebp], 2
	lea	edx, DWORD PTR [eax*4+4]
	mov	eax, DWORD PTR tv23070[ebp]
	mov	DWORD PTR tv22291[ebp], edx
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 857  : 				table[j][k] = i++;

	mov	eax, DWORD PTR tv23070[ebp]

; 858  : 
; 859  : 				*sum -= 9;
; 860  : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	ecx
	push	DWORD PTR _I$[ebp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [ebx+eax+4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 861  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN392@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN392@cub_9

; 862  : 					//zzHOR_22(table, &i, &j, &k);
; 863  : 
; 864  : 					i = i - 9;
; 865  : 
; 866  : 					table[j][k--] = 0;

	mov	edx, DWORD PTR tv23070[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22527[ebp]

; 867  : 					table[j][k--] = 0;
; 868  : 					table[j++][k] = 0;
; 869  : 					table[j][k++] = 0;
; 870  : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR tv22291[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax+4], 0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _k$54$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$51$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$51$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], 0

; 871  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$51$[ebp]

; 872  : 					table[j][k--] = 0;
; 873  : 					table[j][k--] = 0;
; 874  : 					table[j][k] = 0;
; 875  : 
; 876  : 					j++;
; 877  : 					J++;
; 878  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax+4], 0
	mov	eax, DWORD PTR tv22519[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [ecx+eax+4], 0
	mov	eax, DWORD PTR tv22519[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, edx
	mov	eax, DWORD PTR tv22519[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv22105[ebp]
	mov	ecx, DWORD PTR tv22103[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$87$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN97@cub_9
$LN392@cub_9:

; 879  : 				}
; 880  : 			}
; 881  : 			if (table[0][n - 1] != n * n && flag == 33 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN97@cub_9:
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22531[ebp], eax
	mov	DWORD PTR tv22097[ebp], eax
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR _k$56$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22095[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	je	$LN99@cub_9
	cmp	DWORD PTR _flag$[ebp], 33		; 00000021H
	jne	$LN99@cub_9
	test	ecx, ecx
	je	$LN99@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _J$1$[ebp]
	cmp	eax, 1
	jne	$LN583@cub_9

; 882  : 				j--;
; 883  : 				J--;
; 884  : 				//zzHOR_3(table, &i, &j, &k);
; 885  : 
; 886  : 				table[j][k--] = i++;

	mov	edx, DWORD PTR tv22531[ebp]
	dec	ecx
	mov	ebx, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+ebx*4], esi

; 887  : 				table[j][k--] = i++;

	mov	eax, ebx
	inc	esi
	lea	ebx, DWORD PTR [eax*4-4]
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR tv22539[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 888  : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4-4]
	add	edx, -2					; fffffffeH
	mov	DWORD PTR _j$52$[ebp], edx
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi

; 889  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi

; 890  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 891  : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$56$[ebp]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$52$[ebp]
	dec	eax
	mov	DWORD PTR _j$87$[ebp], eax

; 892  : 				table[j][k--] = i++;

	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23067[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 893  : 				table[j][k--] = i++;

	mov	eax, DWORD PTR _k$94$[ebp]
	add	DWORD PTR _k$94$[ebp], -2		; fffffffeH
	lea	edx, DWORD PTR [eax*4-4]
	mov	eax, DWORD PTR tv23067[ebp]
	mov	DWORD PTR tv22537[ebp], edx
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 894  : 				table[j][k] = i++;

	mov	eax, DWORD PTR tv23067[ebp]

; 895  : 
; 896  : 				*sum -= 9;
; 897  : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	ecx
	push	DWORD PTR _I$[ebp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 898  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN389@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN389@cub_9

; 899  : 					//zzHOR_33(table, &i, &j, &k);
; 900  : 
; 901  : 					i = i - 9;
; 902  : 
; 903  : 					table[j][k++] = 0;

	mov	edx, DWORD PTR tv23067[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22539[ebp]

; 904  : 					table[j][k++] = 0;
; 905  : 					table[j++][k] = 0;
; 906  : 					table[j][k--] = 0;
; 907  : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR tv22537[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax-4], 0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _k$56$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$52$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$52$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], 0

; 908  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$52$[ebp]

; 909  : 					table[j][k++] = 0;
; 910  : 					table[j][k++] = 0;
; 911  : 					table[j][k] = 0;
; 912  : 
; 913  : 					j++;
; 914  : 					J++;
; 915  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax-4], 0
	mov	eax, DWORD PTR tv22531[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [ecx+eax-4], 0
	mov	eax, DWORD PTR tv22531[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, edx
	mov	eax, DWORD PTR tv22531[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv22097[ebp]
	mov	ecx, DWORD PTR tv22095[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$87$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN583@cub_9
$LN389@cub_9:

; 916  : 				}
; 917  : 			}
; 918  : 			if (table[0][n - 1] != n * n && flag == 39 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN583@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
$LN99@cub_9:
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22545[ebp], eax
	mov	DWORD PTR tv22089[ebp], eax
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR _k$58$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22087[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	je	$LN101@cub_9
	cmp	DWORD PTR _flag$[ebp], 39		; 00000027H
	jne	$LN101@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN465@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _J$1$[ebp]
	cmp	eax, 1
	jne	$LN465@cub_9

; 919  : 				j++;
; 920  : 				J++;
; 921  : 				//zzHOR_4(table, &i, &j, &k);
; 922  : 
; 923  : 				table[j][k--] = i++;

	mov	edx, DWORD PTR tv22545[ebp]
	inc	ecx
	mov	ebx, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR _J$1$[ebp], ecx
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4], esi

; 924  : 				table[j][k--] = i++;

	mov	eax, ebx
	inc	esi
	lea	ebx, DWORD PTR [eax*4-4]
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR tv22557[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 925  : 				table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+4]
	add	edx, 2
	mov	DWORD PTR _j$53$[ebp], edx
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi

; 926  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi

; 927  : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 928  : 				table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$58$[ebp]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$53$[ebp]
	inc	eax
	mov	DWORD PTR _j$87$[ebp], eax

; 929  : 				table[j][k--] = i++;

	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23064[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 930  : 				table[j][k--] = i++;

	mov	eax, DWORD PTR _k$94$[ebp]
	add	DWORD PTR _k$94$[ebp], -2		; fffffffeH
	lea	edx, DWORD PTR [eax*4-4]
	mov	eax, DWORD PTR tv23064[ebp]
	mov	DWORD PTR tv22555[ebp], edx
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 931  : 				table[j][k] = i++;

	mov	eax, DWORD PTR tv23064[ebp]

; 932  : 
; 933  : 				*sum -= 9;
; 934  : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	ecx
	push	DWORD PTR _I$[ebp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 935  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN386@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN386@cub_9

; 936  : 					//zzHOR_44(table, &i, &j, &k);
; 937  : 
; 938  : 					i = i - 9;
; 939  : 					table[j][k++] = 0;

	mov	edx, DWORD PTR tv23064[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22557[ebp]

; 940  : 					table[j][k++] = 0;
; 941  : 					table[j--][k] = 0;
; 942  : 					table[j][k--] = 0;
; 943  : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR tv22555[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax-4], 0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _k$58$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$53$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$53$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], 0

; 944  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR _j$53$[ebp]

; 945  : 					table[j][k++] = 0;
; 946  : 					table[j][k++] = 0;
; 947  : 					table[j][k] = 0;
; 948  : 
; 949  : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax-4], 0
	mov	eax, DWORD PTR tv22545[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [ecx+eax-4], 0
	mov	eax, DWORD PTR tv22545[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, edx
	mov	eax, DWORD PTR tv22545[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+ecx*4], 0

; 950  : 					j--;

	mov	eax, DWORD PTR tv22089[ebp]

; 951  : 					J--;

	mov	ecx, DWORD PTR tv22087[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$87$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN465@cub_9
$LN386@cub_9:

; 952  : 				}
; 953  : 			}
; 954  : 			if (table[0][n - 1] != n * n && flag == 23 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN465@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
$LN101@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22375[ebp], eax
	mov	DWORD PTR tv22081[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR _j$55$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22019[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	je	$LN379@cub_9
	cmp	DWORD PTR _flag$[ebp], 23		; 00000017H
	jne	$LN379@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN103@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN383@cub_9

; 955  : 				k++;
; 956  : 				K++;
; 957  : 				//zzVER_1(table, &i, &j, &k);
; 958  : 
; 959  : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR _j$87$[ebp]
	inc	edx
	mov	ebx, DWORD PTR tv22375[ebp]

; 960  : 				table[j++][k] = i++;
; 961  : 				table[j][k++] = i++;
; 962  : 				table[j--][k] = i++;
; 963  : 				table[j--][k] = i++;
; 964  : 				table[j][k++] = i++;
; 965  : 				table[j++][k] = i++;
; 966  : 				table[j++][k] = i++;
; 967  : 				table[j][k] = i++;
; 968  : 
; 969  : 				*sum -= 9;
; 970  : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ecx, DWORD PTR [ecx*4+4]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR _j$55$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4+8], esi
	lea	eax, DWORD PTR [ebx+3]
	mov	DWORD PTR _k$94$[ebp], eax
	inc	esi
	shl	eax, 2
	mov	DWORD PTR tv22568[ebp], eax
	mov	eax, DWORD PTR _j$55$[ebp]
	mov	ebx, DWORD PTR tv22568[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	add	DWORD PTR _j$87$[ebp], 2
	inc	eax
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22565[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv21734[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	ecx, ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 971  : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN382@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN382@cub_9

; 972  : 					//zzVER_11(table, &i, &j, &k);
; 973  : 
; 974  : 					i = i - 9;
; 975  : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv21734[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22568[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax], 0

; 976  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 977  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR _j$55$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 978  : 					table[j++][k] = 0;

	mov	edx, DWORD PTR tv22375[ebp]
	mov	eax, DWORD PTR _j$55$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 979  : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22565[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4+8], 0

; 980  : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 981  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 982  : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR _j$55$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax

; 983  : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 984  : 
; 985  : 					*sum += 9;
; 986  : 					k--;

	mov	eax, DWORD PTR tv22081[ebp]

; 987  : 					K--;

	mov	edx, DWORD PTR tv22079[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	mov	DWORD PTR _K$1$[ebp], edx
	jmp	SHORT $LN383@cub_9
$LN379@cub_9:

; 988  : 				}
; 989  : 			}
; 990  : 			if (table[0][n - 1] != n * n && flag == 49 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN103@cub_9
$LN382@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN383@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN103@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv22567[ebp], eax
	mov	DWORD PTR tv22073[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR _j$57$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22071[ebp], edx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	je	$LN105@cub_9
	cmp	DWORD PTR _flag$[ebp], 49		; 00000031H
	jne	$LN105@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN105@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN105@cub_9

; 991  : 				k++;
; 992  : 				K++;
; 993  : 				//zzVER_2(table, &i, &j, &k);
; 994  : 
; 995  : 				table[j--][k] = i++;

	mov	ecx, DWORD PTR _j$87$[ebp]
	inc	edx
	mov	ebx, DWORD PTR tv22567[ebp]

; 996  : 				table[j--][k] = i++;
; 997  : 				table[j][k++] = i++;
; 998  : 				table[j++][k] = i++;
; 999  : 				table[j++][k] = i++;
; 1000 : 				table[j][k++] = i++;
; 1001 : 				table[j--][k] = i++;
; 1002 : 				table[j--][k] = i++;
; 1003 : 				table[j][k] = i++;
; 1004 : 
; 1005 : 				*sum -= 9;
; 1006 : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ecx, DWORD PTR [ecx*4-4]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR _j$57$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4+8], esi
	lea	eax, DWORD PTR [ebx+3]
	mov	DWORD PTR _k$94$[ebp], eax
	inc	esi
	shl	eax, 2
	mov	DWORD PTR tv22562[ebp], eax
	mov	eax, DWORD PTR _j$57$[ebp]
	mov	ebx, DWORD PTR tv22562[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	add	DWORD PTR _j$87$[ebp], -2		; fffffffeH
	dec	eax
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22577[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv21732[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	ecx, ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1007 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN378@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN378@cub_9

; 1008 : 					//zzVER_22(table, &i, &j, &k);
; 1009 : 
; 1010 : 					i = i - 9;
; 1011 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv21732[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22562[ebp]
	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [edx+eax], 0

; 1012 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 1013 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR _j$57$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 1014 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR tv22567[ebp]
	mov	eax, DWORD PTR _j$57$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 1015 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22577[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4+8], 0

; 1016 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 1017 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 1018 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR _j$57$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax

; 1019 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 1020 : 
; 1021 : 					*sum += 9;
; 1022 : 					k--;

	mov	eax, DWORD PTR tv22073[ebp]

; 1023 : 					K--;

	mov	edx, DWORD PTR tv22071[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	mov	DWORD PTR _K$1$[ebp], edx
	jmp	SHORT $LN105@cub_9
$LN378@cub_9:

; 1024 : 				}
; 1025 : 			}
; 1026 : 			if (table[0][n - 1] != n * n && flag == 47 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN105@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22305[ebp], eax
	mov	DWORD PTR tv22065[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR _j$59$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22063[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN107@cub_9
	cmp	DWORD PTR _flag$[ebp], 47		; 0000002fH
	jne	$LN107@cub_9
	test	edx, edx
	je	$LN107@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN464@cub_9

; 1027 : 				k--;
; 1028 : 				K--;
; 1029 : 				//zzVER_3(table, &i, &j, &k);
; 1030 : 
; 1031 : 				table[j--][k] = i++;

	mov	ecx, DWORD PTR _j$87$[ebp]
	dec	edx
	mov	ebx, DWORD PTR tv22305[ebp]

; 1032 : 				table[j--][k] = i++;
; 1033 : 				table[j][k--] = i++;
; 1034 : 				table[j++][k] = i++;
; 1035 : 				table[j++][k] = i++;
; 1036 : 				table[j][k--] = i++;
; 1037 : 				table[j--][k] = i++;
; 1038 : 				table[j--][k] = i++;
; 1039 : 				table[j][k] = i++;
; 1040 : 
; 1041 : 				*sum -= 9;
; 1042 : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ecx, DWORD PTR [ecx*4-4]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+ebx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$59$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4-8], esi
	lea	eax, DWORD PTR [ebx-3]
	mov	DWORD PTR _k$94$[ebp], eax
	inc	esi
	shl	eax, 2
	mov	DWORD PTR tv22556[ebp], eax
	mov	eax, DWORD PTR _j$59$[ebp]
	mov	ebx, DWORD PTR tv22556[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	add	DWORD PTR _j$87$[ebp], -2		; fffffffeH
	dec	eax
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22589[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv21730[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	ecx, ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1043 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN376@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN376@cub_9

; 1044 : 					//zzVER_33(table, &i, &j, &k);
; 1045 : 
; 1046 : 					i = i - 9;
; 1047 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv21730[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22556[ebp]
	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [edx+eax], 0

; 1048 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 1049 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$59$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 1050 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR tv22305[ebp]
	mov	eax, DWORD PTR _j$59$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 1051 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22589[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4-8], 0

; 1052 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 1053 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1054 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR _j$59$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax

; 1055 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1056 : 
; 1057 : 					*sum += 9;
; 1058 : 					k++;

	mov	eax, DWORD PTR tv22065[ebp]

; 1059 : 					K++;

	mov	edx, DWORD PTR tv22063[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	mov	DWORD PTR _K$1$[ebp], edx
	jmp	SHORT $LN464@cub_9
$LN376@cub_9:

; 1060 : 				}
; 1061 : 			}
; 1062 : 			if (table[0][n - 1] != n * n && flag == 21 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN464@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN107@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22591[ebp], eax
	mov	DWORD PTR tv22057[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR _j$61$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22055[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN109@cub_9
	cmp	DWORD PTR _flag$[ebp], 21		; 00000015H
	jne	$LN109@cub_9
	test	edx, edx
	je	$LN109@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN463@cub_9

; 1063 : 				k--;
; 1064 : 				K--;
; 1065 : 				//zzVER_4(table, &i, &j, &k);
; 1066 : 
; 1067 : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR _j$87$[ebp]
	dec	edx
	mov	ebx, DWORD PTR tv22591[ebp]

; 1068 : 				table[j++][k] = i++;
; 1069 : 				table[j][k--] = i++;
; 1070 : 				table[j--][k] = i++;
; 1071 : 				table[j--][k] = i++;
; 1072 : 				table[j][k--] = i++;
; 1073 : 				table[j++][k] = i++;
; 1074 : 				table[j++][k] = i++;
; 1075 : 				table[j][k] = i++;
; 1076 : 
; 1077 : 				*sum -= 9;
; 1078 : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ecx, DWORD PTR [ecx*4+4]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	push	DWORD PTR _tab$[ebp]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+ebx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+ebx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$61$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4-8], esi
	lea	eax, DWORD PTR [ebx-3]
	mov	DWORD PTR _k$94$[ebp], eax
	inc	esi
	shl	eax, 2
	mov	DWORD PTR tv22550[ebp], eax
	mov	eax, DWORD PTR _j$61$[ebp]
	mov	ebx, DWORD PTR tv22550[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	add	DWORD PTR _j$87$[ebp], 2
	inc	eax
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22603[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv21728[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	ecx, ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	push	DWORD PTR _k$94$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1079 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN374@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN374@cub_9

; 1080 : 					//zzVER_44(table, &i, &j, &k);
; 1081 : 
; 1082 : 					i = i - 9;
; 1083 : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv21728[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22550[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax], 0

; 1084 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 1085 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$61$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 1086 : 					table[j++][k] = 0;

	mov	edx, DWORD PTR tv22591[ebp]
	mov	eax, DWORD PTR _j$61$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 1087 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22603[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4-8], 0

; 1088 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 1089 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1090 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR _j$61$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax

; 1091 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1092 : 
; 1093 : 					*sum += 9;
; 1094 : 					k++;

	mov	eax, DWORD PTR tv22057[ebp]

; 1095 : 					K++;

	mov	edx, DWORD PTR tv22055[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	mov	DWORD PTR _K$1$[ebp], edx
	jmp	SHORT $LN463@cub_9
$LN374@cub_9:

; 1096 : 				}
; 1097 : 			}
; 1098 : 
; 1099 : 			//обходные 
; 1100 : 			if (table[0][n - 1] != n * n && flag == 49 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN463@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN109@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22045[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR tv22047[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22043[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN111@cub_9
	cmp	DWORD PTR _flag$[ebp], 49		; 00000031H
	jne	$LN111@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN111@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN462@cub_9

; 1101 : 				k++;

	mov	ecx, DWORD PTR _k$94$[ebp]

; 1102 : 				K++;

	inc	edx

; 1103 : 				//o_1(table, &i, &j, &k);
; 1104 : 
; 1105 : 				table[j][k++] = i++;

	mov	eax, DWORD PTR _j$87$[ebp]
	inc	ecx
	mov	DWORD PTR _k$94$[ebp], ecx

; 1106 : 				table[j][k++] = i++;
; 1107 : 				table[j--][k] = i++;
; 1108 : 				table[j--][k] = i++;
; 1109 : 				table[j][k--] = i++;
; 1110 : 				table[j++][k] = i++;
; 1111 : 				table[j][k--] = i++;
; 1112 : 				table[j--][k] = i++;
; 1113 : 				table[j][k] = i++;
; 1114 : 
; 1115 : 				*sum -= 9;
; 1116 : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	lea	ebx, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21721[ebp], ebx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx+1]
	mov	ecx, DWORD PTR _j$87$[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$66$[ebp], eax
	inc	esi
	push	DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	dec	ecx
	mov	ebx, DWORD PTR _k$66$[ebp]
	mov	DWORD PTR _j$64$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21725[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx-1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$64$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _k$94$[ebp]
	mov	eax, DWORD PTR _j$64$[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	lea	ebx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22538[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23047[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1117 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN372@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN372@cub_9

; 1118 : 					//o_11(table, &i, &j, &k);
; 1119 : 
; 1120 : 					i = i - 9;
; 1121 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv23047[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22538[ebp]

; 1122 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$64$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 1123 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$66$[ebp]

; 1124 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1125 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 1126 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv22047[ebp]
	mov	DWORD PTR _j$87$[ebp], ecx
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR tv21725[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4+4], 0

; 1127 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 1128 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1129 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21721[ebp]

; 1130 : 
; 1131 : 					*sum += 9;
; 1132 : 					k--;
; 1133 : 					K--;

	mov	edx, DWORD PTR tv22043[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv22045[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	jmp	SHORT $LN462@cub_9
$LN372@cub_9:

; 1134 : 				}
; 1135 : 			}
; 1136 : 			if (table[0][n - 1] != n * n && flag == 47 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN462@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN111@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22033[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR tv22035[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22031[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN113@cub_9
	cmp	DWORD PTR _flag$[ebp], 47		; 0000002fH
	jne	$LN113@cub_9
	test	edx, edx
	je	$LN113@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN461@cub_9

; 1137 : 				k--;

	mov	ecx, DWORD PTR _k$94$[ebp]

; 1138 : 				K--;

	dec	edx

; 1139 : 				//o_2(table, &i, &j, &k);
; 1140 : 
; 1141 : 				table[j][k--] = i++;

	mov	eax, DWORD PTR _j$87$[ebp]
	dec	ecx
	mov	DWORD PTR _k$94$[ebp], ecx

; 1142 : 				table[j][k--] = i++;
; 1143 : 				table[j--][k] = i++;
; 1144 : 				table[j--][k] = i++;
; 1145 : 				table[j][k++] = i++;
; 1146 : 				table[j++][k] = i++;
; 1147 : 				table[j][k++] = i++;
; 1148 : 				table[j--][k] = i++;
; 1149 : 				table[j][k] = i++;
; 1150 : 
; 1151 : 				*sum -= 9;
; 1152 : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	lea	ebx, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21715[ebp], ebx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx-1]
	mov	ecx, DWORD PTR _j$87$[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$71$[ebp], eax
	inc	esi
	push	DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	dec	ecx
	mov	ebx, DWORD PTR _k$71$[ebp]
	mov	DWORD PTR _j$68$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4-4], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21719[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	lea	eax, DWORD PTR [ecx-1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$68$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _k$94$[ebp]
	mov	eax, DWORD PTR _j$68$[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	lea	ebx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22524[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23040[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1153 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN370@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN370@cub_9

; 1154 : 					//o_22(table, &i, &j, &k);
; 1155 : 
; 1156 : 					i = i - 9;
; 1157 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv23040[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22524[ebp]

; 1158 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$68$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 1159 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$71$[ebp]

; 1160 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1161 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 1162 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv22035[ebp]
	mov	DWORD PTR _j$87$[ebp], ecx
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR tv21719[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1163 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1164 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1165 : 
; 1166 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21715[ebp]

; 1167 : 
; 1168 : 					*sum += 9;
; 1169 : 					k++;
; 1170 : 					K++;

	mov	edx, DWORD PTR tv22031[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv22033[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	jmp	SHORT $LN461@cub_9
$LN370@cub_9:

; 1171 : 				}
; 1172 : 			}
; 1173 : 			if (table[0][n - 1] != n * n && flag == 33 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN461@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN113@cub_9:
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22021[ebp], eax
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR tv22023[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21995[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	ecx, DWORD PTR _J$1$[ebp]
	je	$LN115@cub_9
	cmp	DWORD PTR _flag$[ebp], 33		; 00000021H
	jne	$LN115@cub_9
	test	ecx, ecx
	je	$LN115@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	ebx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4-4]
	mov	ecx, DWORD PTR [ebx+ecx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	$LN404@cub_9

; 1174 : 				j--;

	mov	eax, DWORD PTR _j$87$[ebp]

; 1175 : 				J--;
; 1176 : 				//o_3(table, &i, &j, &k);
; 1177 : 
; 1178 : 				table[j--][k] = i++;

	mov	ecx, DWORD PTR _k$94$[ebp]
	dec	eax
	mov	DWORD PTR _j$87$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21709[ebp], eax
	dec	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	dec	eax
	mov	DWORD PTR _j$73$[ebp], eax

; 1179 : 				table[j--][k] = i++;

	mov	edx, DWORD PTR _j$73$[ebp]
	shl	eax, 2
	dec	edx
	mov	DWORD PTR tv21711[ebp], eax
	mov	DWORD PTR _j$74$[ebp], edx
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1180 : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	dec	ecx
	inc	esi
	mov	DWORD PTR _k$75$[ebp], ecx

; 1181 : 				table[j][k--] = i++;

	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21713[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR tv21713[ebp]
	mov	DWORD PTR [edx+eax], esi
	lea	eax, DWORD PTR [ecx-1]

; 1182 : 				table[j++][k] = i++;

	lea	ecx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$94$[ebp], eax
	mov	eax, DWORD PTR _j$74$[ebp]
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 1183 : 				table[j][k++] = i++;

	mov	eax, DWORD PTR _j$73$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 1184 : 				table[j++][k] = i++;

	mov	eax, DWORD PTR _j$73$[ebp]
	mov	ecx, DWORD PTR _k$75$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax

; 1185 : 				table[j][k--] = i++;

	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23034[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1186 : 				table[j][k] = i++;

	mov	eax, DWORD PTR tv23034[ebp]
	mov	ecx, DWORD PTR _k$94$[ebp]
	mov	eax, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx*4]
	mov	DWORD PTR tv22510[ebp], edx
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1187 : 
; 1188 : 				*sum -= 9;
; 1189 : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	DWORD PTR _J$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _I$[ebp]
	push	DWORD PTR _tab$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1190 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN404@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN404@cub_9

; 1191 : 					//o_33(table, &i, &j, &k);
; 1192 : 
; 1193 : 					i = i - 9;
; 1194 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv23034[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22510[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 1195 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _k$75$[ebp]

; 1196 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$73$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1197 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$94$[ebp]

; 1198 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$74$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1199 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR tv21713[ebp]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, DWORD PTR tv22023[ebp]

; 1200 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 1201 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv21711[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 1202 : 					table[j][k] = 0;

	mov	eax, DWORD PTR tv21709[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 1203 : 
; 1204 : 					*sum += 9;
; 1205 : 					j++;

	mov	eax, DWORD PTR tv22021[ebp]

; 1206 : 					J++;

	mov	ecx, DWORD PTR tv22019[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$87$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN115@cub_9
$LN404@cub_9:

; 1207 : 				}
; 1208 : 			}
; 1209 : 			if (table[0][n - 1] != n * n && flag == 39 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN115@cub_9:
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv22009[ebp], eax
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR tv22011[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22007[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	je	$LN117@cub_9
	cmp	DWORD PTR _flag$[ebp], 39		; 00000027H
	jne	$LN117@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN466@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	$LN399@cub_9

; 1210 : 				j++;

	mov	eax, DWORD PTR _j$87$[ebp]

; 1211 : 				J++;
; 1212 : 				//o_4(table, &i, &j, &k);
; 1213 : 
; 1214 : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR _k$94$[ebp]
	inc	eax
	mov	DWORD PTR _j$87$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21703[ebp], eax
	inc	DWORD PTR _J$1$[ebp]

; 1215 : 				table[j++][k] = i++;
; 1216 : 				table[j][k--] = i++;
; 1217 : 				table[j][k--] = i++;
; 1218 : 				table[j--][k] = i++;
; 1219 : 				table[j][k++] = i++;
; 1220 : 				table[j--][k] = i++;
; 1221 : 				table[j][k--] = i++;
; 1222 : 				table[j][k] = i++;
; 1223 : 
; 1224 : 				*sum -= 9;
; 1225 : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	push	edx
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _J$1$[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	inc	eax
	mov	DWORD PTR _j$78$[ebp], eax
	mov	ebx, DWORD PTR _j$78$[ebp]
	shl	eax, 2
	inc	ebx
	mov	DWORD PTR tv21705[ebp], eax
	mov	DWORD PTR _j$79$[ebp], ebx
	push	DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	dec	ecx
	inc	esi
	mov	DWORD PTR _k$79$[ebp], ecx
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21707[ebp], eax
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ebx, DWORD PTR tv21707[ebp]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx-1]
	lea	ecx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$94$[ebp], eax
	mov	eax, DWORD PTR _j$79$[ebp]
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$78$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$78$[ebp]
	mov	ecx, DWORD PTR _k$79$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23029[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR tv23029[ebp]
	mov	ecx, DWORD PTR _k$94$[ebp]
	mov	eax, DWORD PTR [eax]
	lea	ebx, DWORD PTR [ecx*4]
	mov	DWORD PTR tv22494[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1226 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN399@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN399@cub_9

; 1227 : 					//o_44(table, &i, &j, &k);
; 1228 : 
; 1229 : 					i = i - 9;
; 1230 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv23029[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22494[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 1231 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _k$79$[ebp]

; 1232 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$78$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1233 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$94$[ebp]

; 1234 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$79$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1235 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR tv21707[ebp]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, DWORD PTR tv22011[ebp]

; 1236 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 1237 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv21705[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 1238 : 					table[j][k] = 0;

	mov	eax, DWORD PTR tv21703[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 1239 : 
; 1240 : 					*sum += 9;
; 1241 : 					j--;

	mov	eax, DWORD PTR tv22009[ebp]

; 1242 : 					J--;

	mov	ecx, DWORD PTR tv22007[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$87$[ebp], eax
	mov	DWORD PTR _J$1$[ebp], ecx
	jmp	SHORT $LN466@cub_9
$LN399@cub_9:

; 1243 : 				}
; 1244 : 			}
; 1245 : 			if (table[0][n - 1] != n * n && flag == 23 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$1$[ebp]
$LN466@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
$LN117@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv21997[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR tv21999[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21973[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	je	$LN365@cub_9
	cmp	DWORD PTR _flag$[ebp], 23		; 00000017H
	jne	$LN365@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$1$[ebp]
	cmp	edx, eax
	je	$LN119@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN396@cub_9

; 1246 : 				k++;

	mov	ecx, DWORD PTR _k$94$[ebp]

; 1247 : 				K++;

	inc	edx

; 1248 : 				//o_5(table, &i, &j, &k);
; 1249 : 
; 1250 : 				table[j][k++] = i++;

	mov	eax, DWORD PTR _j$87$[ebp]
	inc	ecx
	mov	DWORD PTR _k$94$[ebp], ecx

; 1251 : 				table[j][k++] = i++;
; 1252 : 				table[j++][k] = i++;
; 1253 : 				table[j++][k] = i++;
; 1254 : 				table[j][k--] = i++;
; 1255 : 				table[j--][k] = i++;
; 1256 : 				table[j][k--] = i++;
; 1257 : 				table[j++][k] = i++;
; 1258 : 				table[j][k] = i++;
; 1259 : 
; 1260 : 				*sum -= 9;
; 1261 : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	lea	ebx, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21698[ebp], ebx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx+1]
	mov	ecx, DWORD PTR _j$87$[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$84$[ebp], eax
	inc	esi
	push	DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	inc	ecx
	mov	ebx, DWORD PTR _k$84$[ebp]
	mov	DWORD PTR _j$82$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21701[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx+1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$82$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _k$94$[ebp]
	mov	eax, DWORD PTR _j$82$[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	lea	ebx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22478[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23023[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1262 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN368@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN368@cub_9

; 1263 : 					//o_55(table, &i, &j, &k);
; 1264 : 
; 1265 : 					i = i - 9;
; 1266 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv23023[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22478[ebp]

; 1267 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$82$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 1268 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$84$[ebp]

; 1269 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1270 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 1271 : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv21999[ebp]
	mov	DWORD PTR _j$87$[ebp], ecx
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR tv21701[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4+4], 0

; 1272 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 1273 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1274 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21698[ebp]

; 1275 : 
; 1276 : 					*sum += 9;
; 1277 : 					k--;
; 1278 : 					K--;

	mov	edx, DWORD PTR tv21995[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv21997[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	jmp	SHORT $LN396@cub_9
$LN365@cub_9:

; 1279 : 				}
; 1280 : 			}
; 1281 : 			if (table[0][n - 1] != n * n && flag == 21 && K != 0 && tab[J][K - 1] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
	jmp	SHORT $LN119@cub_9
$LN368@cub_9:
	mov	edx, DWORD PTR _K$1$[ebp]
$LN396@cub_9:
	mov	ecx, DWORD PTR _J$1$[ebp]
$LN119@cub_9:
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	ebx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR tv21985[ebp], eax
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR tv21987[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	edi, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv21983[ebp], edx
	cmp	DWORD PTR [eax+ebx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	je	$LN121@cub_9
	cmp	DWORD PTR _flag$[ebp], 21		; 00000015H
	jne	$LN121@cub_9
	test	edx, edx
	je	$LN121@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4-4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN121@cub_9

; 1282 : 				k--;

	mov	ecx, DWORD PTR _k$94$[ebp]

; 1283 : 				K--;

	dec	edx

; 1284 : 				//o_6(table, &i, &j, &k);
; 1285 : 
; 1286 : 				table[j][k--] = i++;

	mov	eax, DWORD PTR _j$87$[ebp]
	dec	ecx
	mov	DWORD PTR _k$94$[ebp], ecx

; 1287 : 				table[j][k--] = i++;
; 1288 : 				table[j++][k] = i++;
; 1289 : 				table[j++][k] = i++;
; 1290 : 				table[j][k++] = i++;
; 1291 : 				table[j--][k] = i++;
; 1292 : 				table[j][k++] = i++;
; 1293 : 				table[j++][k] = i++;
; 1294 : 				table[j][k] = i++;
; 1295 : 
; 1296 : 				*sum -= 9;
; 1297 : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	push	edx
	push	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	lea	ebx, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21691[ebp], ebx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx-1]
	mov	ecx, DWORD PTR _j$87$[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$89$[ebp], eax
	inc	esi
	push	DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	inc	ecx
	mov	ebx, DWORD PTR _k$89$[ebp]
	mov	DWORD PTR _j$86$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4-4], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21695[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	lea	eax, DWORD PTR [ecx+1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$86$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _k$94$[ebp]
	mov	eax, DWORD PTR _j$86$[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	lea	ebx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22464[ebp], ebx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23016[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1298 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN364@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN364@cub_9

; 1299 : 					//o_66(table, &i, &j, &k);
; 1300 : 
; 1301 : 					i = i - 9;
; 1302 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv23016[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22464[ebp]

; 1303 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$86$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 1304 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$89$[ebp]

; 1305 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1306 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 1307 : 					table[j--][k] = 0;
; 1308 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _k$89$[ebp]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR tv21695[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	edx, DWORD PTR tv21987[ebp]
	mov	DWORD PTR _j$87$[ebp], edx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-4], 0

; 1309 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1310 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR tv21691[ebp]

; 1311 : 
; 1312 : 					*sum += 9;
; 1313 : 					k++;
; 1314 : 					K++;

	mov	edx, DWORD PTR tv21983[ebp]
	mov	DWORD PTR _K$1$[ebp], edx
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv21985[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$94$[ebp], eax
	jmp	SHORT $LN121@cub_9
$LN364@cub_9:

; 1315 : 				}
; 1316 : 			}
; 1317 : 			if (table[0][n - 1] != n * n && flag == 11 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR _K$1$[ebp]
$LN121@cub_9:
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23483[ebp]
	mov	DWORD PTR tv21971[ebp], eax
	mov	eax, DWORD PTR _k$94$[ebp]
	mov	DWORD PTR tv21975[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN533@cub_9
	cmp	DWORD PTR _flag$[ebp], 11		; 0000000bH
	jne	$LN533@cub_9
	mov	eax, DWORD PTR _J$1$[ebp]
	test	eax, eax
	je	$LN533@cub_9
	mov	ecx, DWORD PTR _tab$[ebp]
	mov	ebx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4-4]
	mov	ecx, DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR [ebx+ecx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	$LN533@cub_9

; 1318 : 				j--;

	mov	eax, DWORD PTR _j$87$[ebp]

; 1319 : 				J--;
; 1320 : 				//o_7(table, &i, &j, &k);
; 1321 : 
; 1322 : 				table[j--][k] = i++;

	mov	ecx, DWORD PTR _k$94$[ebp]
	dec	eax
	mov	DWORD PTR _j$87$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv21685[ebp], eax
	dec	DWORD PTR _J$1$[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	dec	eax
	mov	DWORD PTR _j$91$[ebp], eax

; 1323 : 				table[j--][k] = i++;

	mov	edx, DWORD PTR _j$91$[ebp]
	shl	eax, 2
	dec	edx
	mov	DWORD PTR tv21687[ebp], eax
	mov	DWORD PTR _j$92$[ebp], edx
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1324 : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	ecx
	inc	esi
	mov	DWORD PTR _k$93$[ebp], ecx

; 1325 : 				table[j][k++] = i++;

	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21689[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR tv21689[ebp]
	mov	DWORD PTR [edx+eax], esi
	lea	eax, DWORD PTR [ecx+1]

; 1326 : 				table[j++][k] = i++;

	lea	ecx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$94$[ebp], eax
	mov	eax, DWORD PTR _j$92$[ebp]
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 1327 : 				table[j][k--] = i++;

	mov	eax, DWORD PTR _j$91$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 1328 : 				table[j++][k] = i++;

	mov	eax, DWORD PTR _j$91$[ebp]
	mov	ecx, DWORD PTR _k$93$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	DWORD PTR _j$87$[ebp], eax

; 1329 : 				table[j][k++] = i++;

	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23010[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1330 : 				table[j][k] = i++;

	mov	eax, DWORD PTR tv23010[ebp]
	mov	ecx, DWORD PTR _k$94$[ebp]
	mov	eax, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx*4]
	mov	DWORD PTR tv22450[ebp], edx
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1331 : 
; 1332 : 				*sum -= 9;
; 1333 : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	mov	edx, DWORD PTR _K$1$[ebp]
	push	edx
	push	DWORD PTR _J$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _I$[ebp]
	push	DWORD PTR _tab$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1334 : 				if (result == -1 && table[0][n - 1] != n*n) {

	mov	edx, DWORD PTR tv23483[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN123@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN123@cub_9

; 1335 : 					//o_77(table, &i, &j, &k);
; 1336 : 
; 1337 : 					i = i - 9;
; 1338 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv23010[ebp]
	sub	esi, 9
	mov	ebx, DWORD PTR tv22450[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ebx+eax], 0

; 1339 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	ebx, DWORD PTR _k$93$[ebp]

; 1340 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$91$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], 0

; 1341 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$94$[ebp]

; 1342 : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR _j$92$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1343 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ecx, DWORD PTR tv21689[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 1344 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ecx, DWORD PTR tv21975[ebp]

; 1345 : 					table[j++][k] = 0;
; 1346 : 					table[j][k] = 0;
; 1347 : 
; 1348 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _k$94$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv21687[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv21685[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 1349 : 					J++;

	mov	eax, DWORD PTR tv21973[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _J$1$[ebp], eax

; 1350 : 					j++;

	mov	eax, DWORD PTR tv21971[ebp]
	mov	DWORD PTR _j$87$[ebp], eax
	jmp	SHORT $LN123@cub_9
$LN533@cub_9:

; 1351 : 				}
; 1352 : 			}
; 1353 : 			if (table[0][n - 1] != n * n && flag == 17 && J != n / 3 - 1 && tab[J + 1][K] - tab[J][K] == 1) {

	mov	edx, DWORD PTR tv23483[ebp]
$LN123@cub_9:
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR tv22381[ebp]
	cmp	DWORD PTR [ecx+eax-4], edx
	je	$LN253@cub_9
	cmp	DWORD PTR _flag$[ebp], 17		; 00000011H
	jne	$LN253@cub_9
	mov	ecx, DWORD PTR _J$1$[ebp]
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	ecx, eax
	je	$LN253@cub_9
	mov	edx, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _K$1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	$LN253@cub_9

; 1354 : 				j++;

	mov	eax, DWORD PTR _j$87$[ebp]

; 1355 : 				J++;
; 1356 : 				//o_8(table, &i, &j, &k);
; 1357 : 
; 1358 : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR _k$94$[ebp]
	inc	eax
	mov	DWORD PTR _j$87$[ebp], eax

; 1359 : 				table[j++][k] = i++;
; 1360 : 				table[j][k++] = i++;
; 1361 : 				table[j][k++] = i++;
; 1362 : 				table[j--][k] = i++;
; 1363 : 				table[j][k--] = i++;
; 1364 : 				table[j--][k] = i++;
; 1365 : 				table[j][k++] = i++;
; 1366 : 				table[j][k] = i++;
; 1367 : 
; 1368 : 				*sum -= 9;
; 1369 : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	push	edx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	inc	eax
	mov	DWORD PTR _j$87$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	inc	eax
	mov	DWORD PTR _j$87$[ebp], eax
	mov	DWORD PTR _j$95$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	add	ecx, 2
	mov	eax, DWORD PTR _j$87$[ebp]
	inc	esi
	mov	DWORD PTR _k$96$[ebp], ecx
	mov	DWORD PTR _k$97$[ebp], ecx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	dec	eax
	mov	DWORD PTR _j$87$[ebp], eax
	mov	DWORD PTR _j$94$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR _j$87$[ebp]
	dec	eax
	mov	DWORD PTR _j$87$[ebp], eax
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23005[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4-4], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv22436[ebp], eax
	inc	esi
	mov	eax, DWORD PTR tv23005[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], esi
	mov	eax, DWORD PTR _J$1$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	inc	eax
	push	eax
	push	DWORD PTR _I$[ebp]
	lea	eax, DWORD PTR [esi+1]
	push	DWORD PTR _tab$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	DWORD PTR _j$87$[ebp]
	push	eax
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1370 : 				if (result == -1 && table[0][n - 1] != n*n) {

	cmp	eax, -1
	jne	$LN253@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23483[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN253@cub_9

; 1371 : 					//o_88(table, &i, &j, &k);
; 1372 : 
; 1373 : 					i = i - 9;
; 1374 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR tv23005[ebp]
	mov	ecx, DWORD PTR tv22436[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, DWORD PTR _k$96$[ebp]

; 1375 : 					table[j++][k] = 0;
; 1376 : 					table[j][k++] = 0;
; 1377 : 					table[j++][k] = 0;
; 1378 : 					table[j][k--] = 0;
; 1379 : 					table[j][k--] = 0;
; 1380 : 					table[j--][k] = 0;
; 1381 : 					table[j--][k] = 0;
; 1382 : 
; 1383 : 					table[j][k] = 0;
; 1384 : 
; 1385 : 					*sum += 9;
; 1386 : 					j--;
; 1387 : 					J--;
; 1388 : 				}
; 1389 : 			}
; 1390 : 		}

	jmp	$LN597@cub_9
$LN260@cub_9:

; 1391 : 
; 1392 : 		//последний квадрант
; 1393 : 		else if (*sum == 9) {
; 1394 : 		if (table[0][n - 1] != n * n && flag == 33 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	eax, DWORD PTR [edi]
	mov	ebx, ecx
	imul	ebx, ecx
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR tv23481[ebp], ebx
	cmp	DWORD PTR tv22363[ebp], ebx
	je	$LN287@cub_9
	mov	ecx, DWORD PTR _flag$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR _flag$2$[ebp], ecx
	cmp	ecx, 33					; 00000021H
	jne	$LN289@cub_9
	mov	ebx, DWORD PTR _J$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	test	ebx, ebx
	je	$LN289@cub_9
	mov	ecx, DWORD PTR [edx+ebx*4]
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR [edx+ebx*4-4]
	mov	edx, DWORD PTR _K$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	sub	eax, DWORD PTR [ecx+edx*4]
	cmp	eax, 1
	jne	SHORT $LN289@cub_9

; 1395 : 			j--;
; 1396 : 			J--;
; 1397 : 			//o_2(table, &i, &j, &k);
; 1398 : 
; 1399 : 			table[j][k--] = i++;

	mov	edx, DWORD PTR _j$[ebp]
	lea	ecx, DWORD PTR [esi-1]
	dec	ebx

; 1400 : 			table[j][k--] = i++;
; 1401 : 			table[j--][k] = i++;
; 1402 : 			table[j--][k] = i++;
; 1403 : 			table[j][k++] = i++;
; 1404 : 			table[j++][k] = i++;
; 1405 : 			table[j][k++] = i++;
; 1406 : 			table[j--][k] = i++;
; 1407 : 			table[j][k] = i++;
; 1408 : 
; 1409 : 			flag = 3;

	mov	DWORD PTR _flag$2$[ebp], 3
	mov	DWORD PTR _J$2$[ebp], ebx
	mov	ebx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+esi*4], ebx
	inc	ebx
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+esi*4-4], ebx
	inc	ebx
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+esi*4-8], ebx
	inc	ebx
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+esi*4-8], ebx
	inc	ebx
	mov	eax, DWORD PTR [edi+edx*4-12]
	mov	DWORD PTR [eax+esi*4-8], ebx
	mov	esi, ebx
	mov	eax, DWORD PTR [edi+edx*4-12]
	lea	ebx, DWORD PTR [edx-3]
	inc	esi
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	ecx, DWORD PTR _k$200$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-12]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR _J$2$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	jmp	SHORT $LN127@cub_9
$LN287@cub_9:

; 1391 : 
; 1392 : 		//последний квадрант
; 1393 : 		else if (*sum == 9) {
; 1394 : 		if (table[0][n - 1] != n * n && flag == 33 && J != 0 && tab[J - 1][K] - tab[J][K] == 1) {

	mov	eax, DWORD PTR _flag$[ebp]
	mov	DWORD PTR _flag$2$[ebp], eax
$LN289@cub_9:

; 1410 : 		}
; 1411 : 		if (table[0][n - 1] != n * n && flag == 23 && K != n / 3 - 1 && tab[J][K + 1] - tab[J][K] == 1) {

	mov	ecx, DWORD PTR _J$[ebp]
	mov	esi, DWORD PTR _i$[ebp]
	mov	ebx, DWORD PTR _j$[ebp]
$LN127@cub_9:
	mov	eax, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	edi, DWORD PTR tv23481[ebp]
	cmp	DWORD PTR [edx+eax-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	je	$LN253@cub_9
	cmp	DWORD PTR _flag$2$[ebp], 23		; 00000017H
	jne	$LN253@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _K$[ebp]
	cmp	edx, eax
	je	$LN253@cub_9
	mov	eax, DWORD PTR _tab$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	sub	ecx, DWORD PTR [eax+edx*4]
	cmp	ecx, 1
	jne	$LN253@cub_9

; 1412 : 			k++;
; 1413 : 			K++;
; 1414 : 			//o_8(table, &i, &j, &k);
; 1415 : 
; 1416 : 			table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	edx, DWORD PTR _k$200$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 1417 : 			table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 1418 : 			table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 1419 : 			table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi

; 1420 : 			table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4+12], esi
	inc	esi

; 1421 : 			table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+edx*4+12], esi
	inc	esi

; 1422 : 			table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi

; 1423 : 			table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR [eax+edx*4+8], esi

; 1424 : 			table[j][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+edx*4+12], ecx

; 1425 : 
; 1426 : 			flag = 3;
; 1427 : 		}
; 1428 : 			}
; 1429 : 	}

	jmp	$LN253@cub_9
$LN2@cub_9:

; 1430 : 
; 1431 : 	//стало влом... просто вставлю 2 случая... (((
; 1432 : 	else {
; 1433 : 		if (*sum != 9 && table[0][n - 1] == 0) {

	cmp	DWORD PTR [ebx], 9
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+eax-4]
	mov	DWORD PTR tv22781[ebp], eax
	je	$LN259@cub_9
	test	eax, eax
	jne	$LN253@cub_9

; 1434 : 			//центровыe
; 1435 : 			if (table[0][n - 1] != n * n && flag == 13 || flag == 27) {

	mov	edx, DWORD PTR _flag$[ebp]
	mov	eax, ecx
	imul	eax, ecx
	mov	DWORD PTR tv23479[ebp], eax
	test	eax, eax
	je	SHORT $LN133@cub_9
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN280@cub_9
$LN133@cub_9:
	cmp	edx, 27					; 0000001bH
	jne	$LN291@cub_9

; 1436 : 				if (table[0][n - 1] != n * n && flag == 13 && k != n - 1 && table[j][k + 1] == 0) {

	test	eax, eax
	je	$LN312@cub_9
	cmp	edx, 13					; 0000000dH
	jne	$LN312@cub_9
$LN280@cub_9:
	mov	edx, DWORD PTR _j$[ebp]
	lea	eax, DWORD PTR [ecx-1]
	cmp	esi, eax
	je	$LN134@cub_9
	mov	ecx, DWORD PTR [edi+edx*4]
	lea	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR tv22997[ebp], eax
	cmp	DWORD PTR [ecx+esi*4+4], 0
	jne	$LN134@cub_9

; 1437 : 					k++;
; 1438 : 					////c_1(table, &i, &j, &k);
; 1439 : 
; 1440 : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR [eax]
	inc	esi
	lea	ecx, DWORD PTR [esi*4]
	mov	edx, esi
	mov	esi, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv22365[ebp], ecx
	mov	DWORD PTR [ebx+ecx], esi
	inc	esi

; 1441 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [eax+4]

; 1442 : 					table[j--][k] = i++;

	mov	ebx, DWORD PTR tv22997[ebp]
	mov	DWORD PTR [ecx+eax], esi
	mov	eax, edx
	inc	eax
	inc	esi
	mov	DWORD PTR _k$[ebp], eax

; 1443 : 					table[j][k++] = i++;

	inc	DWORD PTR _k$[ebp]
	lea	ecx, DWORD PTR [eax*4]
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 1444 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [ebx]
	mov	ebx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1445 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR tv22997[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax

; 1446 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1447 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$[ebp]

; 1448 : 					table[j][k] = i++;

	mov	ebx, DWORD PTR tv22365[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	mov	ecx, edx
	mov	edx, DWORD PTR _j$[ebp]
	inc	esi
	mov	DWORD PTR _k$[ebp], ecx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 1449 : 
; 1450 : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	jmp	$LN136@cub_9
$LN312@cub_9:

; 1451 : 				else if (table[j + 1][k] == 0) {

	mov	edx, DWORD PTR _j$[ebp]
$LN134@cub_9:
	mov	eax, DWORD PTR [edi+edx*4+4]
	lea	ecx, DWORD PTR [esi*4]
	mov	esi, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv22365[ebp], ecx
	cmp	DWORD PTR [ecx+eax], 0
	jne	SHORT $LN290@cub_9

; 1452 : 					j++;
; 1453 : 					////c_1(table, &i, &j, &k);
; 1454 : 
; 1455 : 					table[j++][k] = i++;

	mov	DWORD PTR [ecx+eax], esi
	inc	esi

; 1456 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _k$[ebp]
	inc	eax
	mov	DWORD PTR _k$[ebp], eax

; 1457 : 					table[j--][k] = i++;
; 1458 : 					table[j][k++] = i++;

	inc	DWORD PTR _k$[ebp]

; 1459 : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$[ebp]
	lea	ecx, DWORD PTR [eax*4]
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1460 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	add	edx, 3
	mov	DWORD PTR _j$[ebp], edx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1461 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1462 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]

; 1463 : 					table[j][k] = i++;

	mov	ebx, DWORD PTR tv22365[ebp]
	mov	DWORD PTR tv22365[ebp], ebx
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR _k$200$[ebp]
	mov	DWORD PTR _k$[ebp], ecx
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	jmp	SHORT $LN136@cub_9
$LN290@cub_9:
	mov	ecx, DWORD PTR _k$[ebp]
$LN136@cub_9:

; 1464 : 
; 1465 : 				}
; 1466 : 				*sum -= 9;
; 1467 : 				f = flag;
; 1468 : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR tv22309[ebp], edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv21962[ebp], ecx
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	edx
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1469 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN323@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN323@cub_9

; 1470 : 					////c_11(table, &i, &j, &k);
; 1471 : 
; 1472 : 					i = i - 9;
; 1473 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22365[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR _k$[ebp]
	inc	eax
	mov	ecx, eax
	mov	DWORD PTR _k$[ebp], eax

; 1474 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, ecx
	inc	DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0

; 1475 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]

; 1476 : 					table[j--][k] = 0;

	mov	ebx, DWORD PTR tv22309[ebp]
	mov	edx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+edx*4], 0
	lea	eax, DWORD PTR [ebx-2]
	mov	DWORD PTR _j$[ebp], eax

; 1477 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+edx*4], 0

; 1478 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+ecx*4], 0

; 1479 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1480 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	ecx, DWORD PTR tv21962[ebp]
	mov	DWORD PTR _k$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 1481 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4-8]

; 1482 : 
; 1483 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9

; 1484 : 					if (f == 13) k--;

	cmp	DWORD PTR _flag$[ebp], 13		; 0000000dH
	jne	SHORT $LN138@cub_9
	dec	ecx
	mov	DWORD PTR _k$[ebp], ecx
	jmp	SHORT $LN323@cub_9
$LN138@cub_9:

; 1485 : 					else j--;

	mov	ecx, DWORD PTR tv22309[ebp]
	add	ecx, -3					; fffffffdH
	mov	DWORD PTR _j$[ebp], ecx
	jmp	SHORT $LN139@cub_9
$LN291@cub_9:

; 1434 : 			//центровыe
; 1435 : 			if (table[0][n - 1] != n * n && flag == 13 || flag == 27) {

	mov	esi, DWORD PTR _i$[ebp]
$LN323@cub_9:

; 1486 : 				}
; 1487 : 			}
; 1488 : 			if (table[0][n - 1] != n * n && flag == 17 && j != n - 1 && table[j + 1][k] == 0) {

	mov	ecx, DWORD PTR _j$[ebp]
$LN139@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv22271[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN141@cub_9
	cmp	DWORD PTR _flag$[ebp], 17		; 00000011H
	jne	$LN141@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	ecx, eax
	je	$LN141@cub_9
	mov	eax, DWORD PTR _k$[ebp]
	shl	eax, 2
	mov	DWORD PTR tv22398[ebp], eax
	mov	ebx, eax
	mov	eax, DWORD PTR [edi+ecx*4+4]
	cmp	DWORD PTR [ebx+eax], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN141@cub_9

; 1489 : 				j++;

	lea	eax, DWORD PTR [ecx+1]

; 1490 : 				////c_1(table, &i, &j, &k);
; 1491 : 
; 1492 : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR tv22398[ebp]
	lea	edx, DWORD PTR [eax*4]
	mov	DWORD PTR _j$99$[ebp], eax
	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR tv23470[ebp], edx

; 1493 : 				table[j][k++] = i++;
; 1494 : 				table[j--][k] = i++;
; 1495 : 				table[j][k++] = i++;
; 1496 : 				table[j++][k] = i++;
; 1497 : 				table[j++][k] = i++;
; 1498 : 				table[j][k--] = i++;
; 1499 : 				table[j][k--] = i++;
; 1500 : 				table[j][k] = i++;
; 1501 : 
; 1502 : 				*sum -= 9;
; 1503 : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edx+edi+4]
	mov	edx, DWORD PTR _k$[ebp]
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	ecx, DWORD PTR tv23470[ebp]
	lea	eax, DWORD PTR [edx+1]
	mov	DWORD PTR _k$106$[ebp], eax
	push	DWORD PTR _I$[ebp]
	mov	eax, DWORD PTR [ecx+edi+4]
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	push	edx
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	ecx, DWORD PTR _j$99$[ebp]
	add	ecx, 2
	push	ecx
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	DWORD PTR _j$[ebp], ecx
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv21674[ebp], ecx
	mov	DWORD PTR tv23468[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR tv23468[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4+4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22392[ebp], eax
	inc	esi
	mov	eax, DWORD PTR tv23468[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1504 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN321@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	ecx, DWORD PTR tv21674[ebp]
	mov	DWORD PTR _j$[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN141@cub_9

; 1505 : 					////c_11(table, &i, &j, &k);
; 1506 : 
; 1507 : 					i = i - 9;
; 1508 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv23468[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22392[ebp]
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [edx+eax], 0

; 1509 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx+edi]
	mov	ecx, DWORD PTR _k$106$[ebp]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 1510 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv23468[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 1511 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv23470[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 1512 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR _j$99$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 1513 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$99$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1514 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR tv21674[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1515 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv21674[ebp]
	mov	ecx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1516 : 					table[j][k] = 0;

	mov	eax, DWORD PTR _j$99$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1517 : 
; 1518 : 					*sum += 9;
; 1519 : 					j--;

	mov	ecx, DWORD PTR tv22271[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$[ebp], ecx
	jmp	SHORT $LN141@cub_9
$LN321@cub_9:

; 1504 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	ecx, DWORD PTR _j$[ebp]
$LN141@cub_9:

; 1520 : 				}
; 1521 : 			}
; 1522 : 			if (table[0][n - 1] != n * n && flag == 13 || flag == 27) {

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21954[ebp], ecx
	mov	eax, DWORD PTR [eax+edx-4]
	mov	DWORD PTR tv23497[ebp], eax
	mov	eax, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR tv23497[ebp], eax
	je	SHORT $LN144@cub_9
	cmp	DWORD PTR _flag$[ebp], 13		; 0000000dH
	je	SHORT $LN279@cub_9
$LN144@cub_9:
	cmp	DWORD PTR _flag$[ebp], 27		; 0000001bH
	mov	ebx, DWORD PTR _k$[ebp]
	mov	DWORD PTR _k$121$[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN150@cub_9

; 1523 : 				if (table[0][n - 1] != n * n && flag == 13 && k != n - 1 && table[j][k + 1] == 0) {

	cmp	DWORD PTR tv23497[ebp], eax
	je	SHORT $LN512@cub_9
	cmp	DWORD PTR _flag$[ebp], 13		; 0000000dH
	jne	SHORT $LN512@cub_9
$LN279@cub_9:
	mov	eax, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _k$[ebp]
	dec	eax
	cmp	edx, eax
	je	SHORT $LN145@cub_9
	mov	eax, DWORD PTR [edi+ecx*4]
	cmp	DWORD PTR [eax+edx*4+4], 0
	jne	SHORT $LN145@cub_9

; 1524 : 					k++;
; 1525 : 					////c_4(table, &i, &j, &k);
; 1526 : 
; 1527 : 					table[j][k++] = i++;

	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 1528 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	inc	ecx

; 1529 : 					table[j][k--] = i++;
; 1530 : 					table[j++][k] = i++;
; 1531 : 					table[j][k++] = i++;

	mov	ebx, DWORD PTR _k$[ebp]
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], esi
	mov	edx, ecx
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi

; 1532 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4+8], esi
	add	ebx, 3

; 1533 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+4]
	inc	esi
	mov	DWORD PTR [eax+ebx*4], esi

; 1534 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21954[ebp]

; 1535 : 					table[j][k] = i++;
; 1536 : 
; 1537 : 				}

	jmp	$LN598@cub_9
$LN512@cub_9:

; 1538 : 				else if (J != n / 3 - 1 && j != n - 1 && table[j + 1][k] == 0) {

	mov	edx, DWORD PTR _k$[ebp]
$LN145@cub_9:
	mov	DWORD PTR _k$121$[ebp], edx
	mov	eax, 1431655766				; 55555556H
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	dec	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR _J$[ebp]
	cmp	edx, eax
	je	$LN147@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _k$[ebp]
	dec	eax
	mov	DWORD PTR _k$121$[ebp], edx
	cmp	ecx, eax
	je	$LN565@cub_9
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR _k$121$[ebp], edx
	mov	DWORD PTR tv23462[ebp], eax
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	edx, DWORD PTR tv23462[ebp]
	cmp	DWORD PTR [edx+eax], 0
	jne	SHORT $LN565@cub_9

; 1539 : 					j++;
; 1540 : 					////c_4(table, &i, &j, &k);
; 1541 : 
; 1542 : 					table[j][k++] = i++;

	mov	ebx, DWORD PTR tv23462[ebp]
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 1543 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+4]
	add	ecx, 2
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+ebx+4], esi
	inc	esi

; 1544 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx+4], esi
	inc	esi

; 1545 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ebx, DWORD PTR _k$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	mov	eax, ecx
	inc	eax
	inc	esi
	mov	DWORD PTR _j$[ebp], eax

; 1546 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1547 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	add	ebx, 2

; 1548 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$[ebp]
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi

; 1549 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, edx
$LN598@cub_9:

; 1550 : 					table[j][k] = i++;
; 1551 : 
; 1552 : 				}
; 1553 : 
; 1554 : 				*sum -= 9;

	inc	esi
	mov	DWORD PTR _k$121$[ebp], ebx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
$LN565@cub_9:
	mov	edx, DWORD PTR _J$[ebp]
$LN147@cub_9:

; 1555 : 				f = flag;
; 1556 : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	eax, DWORD PTR _k$121$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22625[ebp], eax
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv21948[ebp], ecx
	push	eax
	push	ecx
	push	esi
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1557 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN320@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN320@cub_9

; 1558 : 					////c_44(table, &i, &j, &k);
; 1559 : 
; 1560 : 					i = i - 9;
; 1561 : 					table[j++][k] = 0;

	mov	edx, DWORD PTR _j$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$121$[ebp]

; 1562 : 					table[j++][k] = 0;

	mov	ebx, ecx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4+4]

; 1563 : 					table[j][k--] = 0;
; 1564 : 					table[j][k--] = 0;
; 1565 : 					table[j--][k] = 0;
; 1566 : 					table[j][k++] = 0;
; 1567 : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv21948[ebp]
	mov	DWORD PTR _j$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4], 0
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ebx*4], 0
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	ebx, DWORD PTR tv22625[ebp]
	mov	DWORD PTR [eax+ebx*4-4], 0
	lea	eax, DWORD PTR [ebx-2]
	mov	DWORD PTR _k$121$[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ebx*4-8], 0
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4-8], 0
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4-4], 0

; 1568 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4-4], 0

; 1569 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4-8], 0

; 1570 : 
; 1571 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	add	DWORD PTR [ebx], 9

; 1572 : 					if (f == 13) k--;

	cmp	DWORD PTR _flag$[ebp], 13		; 0000000dH
	jne	SHORT $LN149@cub_9
	mov	edx, DWORD PTR tv22625[ebp]
	add	edx, -3					; fffffffdH
	mov	DWORD PTR _k$121$[ebp], edx
	jmp	SHORT $LN585@cub_9
$LN149@cub_9:

; 1573 : 					else j--;

	dec	ecx
	mov	DWORD PTR _j$[ebp], ecx
	jmp	SHORT $LN585@cub_9
$LN320@cub_9:

; 1574 : 				}
; 1575 : 			}
; 1576 : 			if (table[0][n - 1] != n * n && flag == 23 && k != n - 1 && table[j][k + 1] == 0) {

	mov	ecx, DWORD PTR _j$[ebp]
$LN585@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
$LN150@cub_9:
	mov	eax, DWORD PTR _k$121$[ebp]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv22411[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN315@cub_9
	cmp	DWORD PTR _flag$[ebp], 23		; 00000017H
	jne	$LN315@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	DWORD PTR _k$121$[ebp], eax
	mov	eax, DWORD PTR _k$121$[ebp]
	je	$LN313@cub_9
	mov	edx, DWORD PTR [edi+ecx*4]
	cmp	DWORD PTR [edx+eax*4+4], 0
	mov	edx, DWORD PTR tv22381[ebp]
	jne	$LN313@cub_9

; 1577 : 				k++;

	mov	ebx, eax

; 1578 : 				////c_4(table, &i, &j, &k);
; 1579 : 
; 1580 : 				table[j][k++] = i++;
; 1581 : 				table[j++][k] = i++;

	lea	edx, DWORD PTR [ecx+1]
	mov	eax, DWORD PTR [edi+ecx*4]
	inc	ebx

; 1582 : 				table[j][k--] = i++;
; 1583 : 				table[j++][k] = i++;
; 1584 : 				table[j][k++] = i++;
; 1585 : 				table[j][k++] = i++;
; 1586 : 				table[j--][k] = i++;
; 1587 : 				table[j--][k] = i++;
; 1588 : 				table[j][k] = i++;
; 1589 : 
; 1590 : 				*sum -= 9;
; 1591 : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR _j$105$[ebp], edx
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR _k$112$[ebp], ebx
	push	0
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	inc	edx
	mov	DWORD PTR _j$104$[ebp], edx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4]
	lea	edx, DWORD PTR [ebx+2]
	mov	DWORD PTR _k$121$[ebp], edx
	mov	DWORD PTR tv21672[ebp], edx
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv23456[ebp], eax
	inc	esi
	mov	eax, DWORD PTR _j$104$[ebp]
	mov	ebx, DWORD PTR tv23456[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22979[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 1592 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN318@cub_9
	mov	eax, DWORD PTR tv21672[ebp]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR _k$121$[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN318@cub_9

; 1593 : 					////c_44(table, &i, &j, &k);
; 1594 : 
; 1595 : 					i = i - 9;
; 1596 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22979[ebp]
	sub	esi, 9

; 1597 : 					table[j++][k] = 0;

	mov	edx, DWORD PTR _j$105$[ebp]
	mov	ecx, DWORD PTR tv23456[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 1598 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [ecx+eax], 0

; 1599 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	ecx, DWORD PTR _k$112$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 1600 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1601 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1602 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR tv21672[ebp]

; 1603 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1604 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	edx, DWORD PTR _k$112$[ebp]
	mov	DWORD PTR [eax+edx*4], 0

; 1605 : 
; 1606 : 					*sum += 9;
; 1607 : 					k--;

	mov	eax, DWORD PTR tv22411[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$121$[ebp], eax
	jmp	SHORT $LN586@cub_9
$LN313@cub_9:

; 1608 : 				}
; 1609 : 			}
; 1610 : 			if (table[0][n - 1] != n * n && flag == 29 || flag == 31) {

	mov	ecx, DWORD PTR _j$[ebp]
	jmp	SHORT $LN152@cub_9
$LN315@cub_9:
	mov	ecx, DWORD PTR _j$[ebp]
	jmp	SHORT $LN587@cub_9
$LN318@cub_9:
	mov	ecx, DWORD PTR _j$[ebp]
$LN586@cub_9:
	mov	edx, DWORD PTR tv22381[ebp]
$LN587@cub_9:
	mov	eax, DWORD PTR _k$121$[ebp]
$LN152@cub_9:
	mov	DWORD PTR tv21938[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+edx-4]
	mov	DWORD PTR tv23495[ebp], eax
	mov	eax, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR tv23495[ebp], eax
	je	SHORT $LN155@cub_9
	cmp	DWORD PTR _flag$[ebp], 29		; 0000001dH
	je	$LN156@cub_9
$LN155@cub_9:
	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	mov	DWORD PTR _j$119$[ebp], ecx
	jne	$LN527@cub_9

; 1611 : 				if (table[0][n - 1] != n * n && flag == 31 && k != 0 && table[j][k - 1] == 0) {

	cmp	DWORD PTR tv23495[ebp], eax
	je	$LN156@cub_9
	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	jne	$LN156@cub_9
	mov	eax, DWORD PTR _k$121$[ebp]
	test	eax, eax
	je	SHORT $LN156@cub_9
	lea	edx, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv23454[ebp], edx
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR tv23452[ebp], edx
	cmp	DWORD PTR [edx+eax*4-4], 0
	jne	SHORT $LN156@cub_9

; 1612 : 					k--;
; 1613 : 					////c_2(table, &i, &j, &k);
; 1614 : 
; 1615 : 					table[j++][k] = i++;
; 1616 : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR tv23454[ebp]
	mov	ecx, eax
	mov	eax, DWORD PTR tv23452[ebp]
	lea	edx, DWORD PTR [ecx-1]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+ecx*4-4], esi
	sub	ecx, 2

; 1617 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [ebx+4]
	inc	esi
	mov	DWORD PTR _k$121$[ebp], ecx

; 1618 : 					table[j][k--] = i++;

	dec	DWORD PTR _k$121$[ebp]

; 1619 : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$121$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1620 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR tv23454[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$119$[ebp], eax

; 1621 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1622 : 					table[j][k++] = i++;

	mov	ebx, DWORD PTR _j$119$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], esi

; 1623 : 					table[j][k] = i++;
; 1624 : 
; 1625 : 				}

	jmp	$LN599@cub_9
$LN156@cub_9:

; 1626 : 				else if (J != n / 3 - 1 && j != n - 1 && table[j + 1][k] == 0) {

	mov	eax, 1431655766				; 55555556H
	mov	DWORD PTR _j$119$[ebp], ecx
	imul	DWORD PTR _n$[ebp]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	mov	edx, DWORD PTR _k$121$[ebp]
	cmp	DWORD PTR _J$[ebp], eax
	je	SHORT $LN158@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	mov	DWORD PTR _j$119$[ebp], ecx
	cmp	ecx, eax
	je	SHORT $LN158@cub_9
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	DWORD PTR _j$119$[ebp], ecx
	cmp	DWORD PTR [eax+edx*4], 0
	jne	SHORT $LN158@cub_9

; 1627 : 					j++;
; 1628 : 					////c_2(table, &i, &j, &k);
; 1629 : 
; 1630 : 					table[j++][k] = i++;

	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 1631 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+8]
	mov	DWORD PTR [eax+edx*4], esi
	dec	edx
	mov	DWORD PTR _k$121$[ebp], edx
	inc	esi

; 1632 : 					table[j--][k] = i++;
; 1633 : 					table[j][k--] = i++;

	dec	DWORD PTR _k$121$[ebp]

; 1634 : 					table[j++][k] = i++;

	mov	ebx, DWORD PTR _k$121$[ebp]
	lea	ecx, DWORD PTR [edx*4]
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1635 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	ebx, DWORD PTR [edx+3]

; 1636 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	edx, DWORD PTR _k$121$[ebp]
	mov	DWORD PTR _j$119$[ebp], ebx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 1637 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	edx, DWORD PTR tv21938[ebp]
	mov	DWORD PTR [ecx+eax], esi
$LN599@cub_9:

; 1638 : 					table[j][k] = i++;
; 1639 : 
; 1640 : 				}
; 1641 : 				*sum -= 9;

	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _k$121$[ebp], edx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
$LN158@cub_9:

; 1642 : 				f = flag;
; 1643 : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	eax, DWORD PTR _j$119$[ebp]
	push	DWORD PTR _J$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22379[ebp], eax
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv21934[ebp], edx
	push	edx
	push	eax
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1644 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	eax, -1
	jne	$LN161@cub_9
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN161@cub_9

; 1645 : 					////c_22(table, &i, &j, &k);
; 1646 : 
; 1647 : 					i = i - 9;
; 1648 : 
; 1649 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$119$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$121$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	dec	ecx

; 1650 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ecx
	mov	DWORD PTR _k$121$[ebp], ecx
	dec	DWORD PTR _k$121$[ebp]
	mov	DWORD PTR [eax+edx*4], 0

; 1651 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR _j$119$[ebp]
	mov	edx, DWORD PTR _k$121$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1652 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22379[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR tv22379[ebp]
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _j$119$[ebp], eax

; 1653 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR tv22379[ebp]
	mov	eax, DWORD PTR [edi+eax*4-8]
	mov	DWORD PTR [eax+edx*4], 0

; 1654 : 					table[j++][k] = 0;

	mov	edx, DWORD PTR tv22379[ebp]
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+ecx*4], 0

; 1655 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1656 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	ecx, DWORD PTR tv21934[ebp]
	mov	DWORD PTR _k$121$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 1657 : 
; 1658 : 
; 1659 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4-8]

; 1660 : 
; 1661 : 					*sum += 9;
; 1662 : 					if (f == 31) k++;

	mov	edx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9
	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	jne	SHORT $LN160@cub_9
	inc	ecx
	mov	DWORD PTR _k$121$[ebp], ecx
	mov	ecx, DWORD PTR tv23479[ebp]
	jmp	SHORT $LN161@cub_9
$LN160@cub_9:

; 1663 : 					else j--;

	mov	ecx, DWORD PTR tv22379[ebp]
	add	ecx, -3					; fffffffdH
	mov	DWORD PTR _j$119$[ebp], ecx
	mov	ecx, DWORD PTR tv23479[ebp]
	jmp	SHORT $LN161@cub_9
$LN527@cub_9:

; 1608 : 				}
; 1609 : 			}
; 1610 : 			if (table[0][n - 1] != n * n && flag == 29 || flag == 31) {

	mov	ecx, eax
$LN161@cub_9:

; 1664 : 				}
; 1665 : 			}
; 1666 : 			if (table[0][n - 1] != n * n && flag == 39 && j != n - 1 && table[j + 1][k] == 0) {

	mov	eax, DWORD PTR _j$119$[ebp]
	mov	DWORD PTR tv22413[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN541@cub_9
	cmp	DWORD PTR _flag$[ebp], 39		; 00000027H
	jne	$LN541@cub_9
	mov	ecx, DWORD PTR _n$[ebp]
	lea	eax, DWORD PTR [ecx-1]
	cmp	DWORD PTR _j$119$[ebp], eax
	je	$LN541@cub_9
	mov	eax, DWORD PTR _k$121$[ebp]
	shl	eax, 2
	mov	DWORD PTR tv22356[ebp], eax
	mov	eax, DWORD PTR _j$119$[ebp]
	mov	ebx, DWORD PTR tv22356[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	cmp	DWORD PTR [ebx+eax], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR _j$119$[ebp]
	jne	$LN537@cub_9

; 1667 : 				j++;
; 1668 : 				////c_2(table, &i, &j, &k);
; 1669 : 
; 1670 : 				table[j++][k] = i++;

	mov	edx, DWORD PTR tv22356[ebp]
	inc	eax
	mov	DWORD PTR _j$111$[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv23442[ebp], eax

; 1671 : 				table[j][k--] = i++;
; 1672 : 				table[j--][k] = i++;
; 1673 : 				table[j][k--] = i++;
; 1674 : 				table[j++][k] = i++;
; 1675 : 				table[j++][k] = i++;
; 1676 : 				table[j][k++] = i++;
; 1677 : 				table[j][k++] = i++;
; 1678 : 				table[j][k] = i++;
; 1679 : 
; 1680 : 				*sum -= 9;
; 1681 : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _J$[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	eax, DWORD PTR tv23442[ebp]
	push	0
	push	ebx
	push	ecx
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	edx, DWORD PTR _k$121$[ebp]
	push	edx
	lea	eax, DWORD PTR [edx-1]
	mov	DWORD PTR _k$119$[ebp], eax
	mov	eax, DWORD PTR tv23442[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR tv23442[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR tv23442[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR tv23442[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$111$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$119$[ebp], eax
	mov	DWORD PTR tv21670[ebp], eax
	shl	eax, 2
	mov	DWORD PTR tv23440[ebp], eax
	push	DWORD PTR _j$119$[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR tv23440[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22350[ebp], eax
	inc	esi
	mov	eax, DWORD PTR tv23440[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1682 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN541@cub_9
	mov	eax, DWORD PTR tv21670[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR _j$119$[ebp], eax
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN541@cub_9

; 1683 : 					////c_22(table, &i, &j, &k);
; 1684 : 
; 1685 : 					i = i - 9;
; 1686 : 
; 1687 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv23440[ebp]
	sub	esi, 9
	mov	ebx, DWORD PTR tv22350[ebp]
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [ebx+eax], 0

; 1688 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx+edi]
	mov	ecx, DWORD PTR _k$119$[ebp]

; 1689 : 					table[j--][k] = 0;
; 1690 : 					table[j--][k] = 0;
; 1691 : 					table[j][k++] = 0;
; 1692 : 					table[j++][k] = 0;
; 1693 : 					table[j][k++] = 0;
; 1694 : 					table[j--][k] = 0;
; 1695 : 
; 1696 : 
; 1697 : 					table[j][k] = 0;
; 1698 : 
; 1699 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv23440[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR tv23442[ebp]
	mov	eax, DWORD PTR [eax+edi+4]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR _j$111$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR _j$111$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv21670[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv21670[ebp]
	mov	ecx, DWORD PTR _k$121$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR _j$111$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1700 : 					j--;

	mov	eax, DWORD PTR tv22413[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$119$[ebp], eax
	jmp	SHORT $LN163@cub_9
$LN541@cub_9:

; 1701 : 				}
; 1702 : 			}
; 1703 : 			if (table[0][n - 1] != n * n && flag == 29 || flag == 31) {

	mov	eax, DWORD PTR _j$119$[ebp]
$LN537@cub_9:
	mov	ecx, DWORD PTR _k$121$[ebp]
$LN163@cub_9:
	mov	DWORD PTR tv21926[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+edx-4]
	mov	DWORD PTR tv23493[ebp], eax
	mov	eax, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR tv23493[ebp], eax
	je	SHORT $LN166@cub_9
	cmp	DWORD PTR _flag$[ebp], 29		; 0000001dH
	je	$LN544@cub_9
$LN166@cub_9:
	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	mov	DWORD PTR _k$136$[ebp], ecx
	jne	$LN172@cub_9

; 1704 : 				if (table[0][n - 1] != n * n && flag == 31 && k != 0 && table[j][k - 1] == 0) {

	mov	edx, DWORD PTR _k$121$[ebp]
	mov	ecx, DWORD PTR _j$119$[ebp]
	cmp	DWORD PTR tv23493[ebp], eax
	je	SHORT $LN167@cub_9
	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	jne	SHORT $LN167@cub_9
	test	edx, edx
	je	SHORT $LN167@cub_9
	mov	ebx, DWORD PTR [edi+ecx*4]
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22963[ebp], eax
	cmp	DWORD PTR [ebx+edx*4-4], 0
	jne	SHORT $LN167@cub_9

; 1705 : 					k--;
; 1706 : 					////c_8(table, &i, &j, &k);
; 1707 : 
; 1708 : 					table[j][k--] = i++;

	mov	DWORD PTR [ebx+edx*4-4], esi

; 1709 : 					table[j++][k] = i++;

	inc	ecx
	mov	eax, DWORD PTR [eax]
	inc	esi
	mov	DWORD PTR _j$119$[ebp], ecx
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi

; 1710 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi

; 1711 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], esi
	mov	eax, ecx
	inc	eax
	inc	esi
	mov	DWORD PTR _j$119$[ebp], eax

; 1712 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi

; 1713 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$119$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	add	edx, -3					; fffffffdH

; 1714 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$119$[ebp]
	inc	esi
	mov	DWORD PTR _k$136$[ebp], edx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 1715 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21926[ebp]
	mov	DWORD PTR [eax+edx*4], esi

; 1716 : 					table[j][k] = i++;

	mov	eax, DWORD PTR tv22963[ebp]

; 1717 : 
; 1718 : 				}

	jmp	$LN589@cub_9
$LN544@cub_9:

; 1701 : 				}
; 1702 : 			}
; 1703 : 			if (table[0][n - 1] != n * n && flag == 29 || flag == 31) {

	mov	edx, DWORD PTR _k$121$[ebp]
	mov	ecx, DWORD PTR _j$119$[ebp]
$LN167@cub_9:

; 1719 : 				else if (table[j + 1][k] == 0) {

	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR _k$136$[ebp], edx
	mov	DWORD PTR tv22963[ebp], eax
	lea	ebx, DWORD PTR [edx*4]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR tv23434[ebp], ebx
	cmp	DWORD PTR [ebx+eax], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	SHORT $LN169@cub_9

; 1720 : 					j++;
; 1721 : 					////c_8(table, &i, &j, &k);
; 1722 : 
; 1723 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+4]
	lea	edx, DWORD PTR [ecx+1]
	mov	ebx, DWORD PTR tv23434[ebp]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 1724 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+4]
	add	ecx, 2
	mov	DWORD PTR _j$119$[ebp], ecx
	mov	DWORD PTR [eax+ebx-4], esi
	inc	esi

; 1725 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx-4], esi
	inc	esi

; 1726 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ebx, DWORD PTR _k$121$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	mov	eax, ecx
	inc	eax
	inc	esi
	mov	DWORD PTR _j$119$[ebp], eax

; 1727 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1728 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$119$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4-4], esi
	lea	eax, DWORD PTR [ebx-2]
	mov	DWORD PTR _k$136$[ebp], eax
	inc	esi

; 1729 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$119$[ebp]
	mov	ebx, DWORD PTR _k$136$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1730 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	mov	ecx, edx

; 1731 : 					table[j][k] = i++;

	mov	edx, ebx
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22963[ebp], eax
$LN589@cub_9:

; 1732 : 
; 1733 : 				}
; 1734 : 				*sum -= 9;

	mov	eax, DWORD PTR [eax]
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _j$119$[ebp], ecx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
$LN169@cub_9:

; 1735 : 				f = flag;
; 1736 : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR tv22639[ebp], edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv21920[ebp], ecx
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	edx
	push	ecx
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1737 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN458@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	mov	ecx, DWORD PTR _k$136$[ebp]
	je	$LN172@cub_9

; 1738 : 					////c_88(table, &i, &j, &k);
; 1739 : 
; 1740 : 					i = i - 9;
; 1741 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22963[ebp]
	sub	esi, 9

; 1742 : 					table[j++][k] = 0;

	mov	edx, DWORD PTR _k$136$[ebp]

; 1743 : 					table[j][k++] = 0;
; 1744 : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR tv22639[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR _j$119$[ebp]
	inc	eax
	mov	DWORD PTR _j$119$[ebp], eax
	mov	ecx, eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, ecx
	inc	eax
	mov	DWORD PTR _j$119$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	edx, DWORD PTR _j$119$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4+4], 0
	mov	eax, ebx
	add	eax, 2
	mov	DWORD PTR _k$136$[ebp], eax

; 1745 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ebx

; 1746 : 					table[j][k--] = 0;
; 1747 : 					table[j--][k] = 0;
; 1748 : 					table[j][k++] = 0;
; 1749 : 					table[j][k] = 0;
; 1750 : 
; 1751 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+edx*4+8], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+8], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21920[ebp]
	mov	DWORD PTR _j$119$[ebp], ecx
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+8], 0
	add	DWORD PTR [ebx], 9

; 1752 : 					if (f == 31) k++;

	cmp	DWORD PTR _flag$[ebp], 31		; 0000001fH
	mov	edx, DWORD PTR tv22381[ebp]
	jne	SHORT $LN171@cub_9
	mov	ecx, DWORD PTR tv22639[ebp]
	add	ecx, 3
	mov	DWORD PTR _k$136$[ebp], ecx
	jmp	SHORT $LN172@cub_9
$LN171@cub_9:

; 1753 : 					else j--;

	dec	ecx
	mov	DWORD PTR _j$119$[ebp], ecx
$LN458@cub_9:

; 1754 : 				}
; 1755 : 			}
; 1756 : 			if (table[0][n - 1] != n * n && flag == 21 && k != 0 && table[j][k - 1] == 0) {

	mov	ecx, DWORD PTR _k$136$[ebp]
$LN172@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21910[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN174@cub_9
	cmp	DWORD PTR _flag$[ebp], 21		; 00000015H
	jne	$LN174@cub_9
	test	ecx, ecx
	je	$LN174@cub_9
	mov	eax, DWORD PTR _j$119$[ebp]
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+ecx*4-4], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN174@cub_9

; 1757 : 				k--;

	dec	ecx
	mov	DWORD PTR _k$123$[ebp], ecx

; 1758 : 				////c_8(table, &i, &j, &k);
; 1759 : 
; 1760 : 				table[j][k--] = i++;
; 1761 : 				table[j++][k] = i++;
; 1762 : 				table[j][k++] = i++;
; 1763 : 				table[j++][k] = i++;
; 1764 : 				table[j][k--] = i++;
; 1765 : 				table[j][k--] = i++;
; 1766 : 				table[j--][k] = i++;
; 1767 : 				table[j--][k] = i++;
; 1768 : 				table[j][k] = i++;
; 1769 : 
; 1770 : 				*sum -= 9;
; 1771 : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	lea	edx, DWORD PTR [ecx*4]
	dec	ecx
	mov	DWORD PTR tv23428[ebp], edx
	mov	edx, DWORD PTR [edi+eax*4]
	mov	ebx, DWORD PTR tv23428[ebp]
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR _k$124$[ebp], ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [edx+ebx], esi
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	edx, DWORD PTR _j$119$[ebp]
	mov	ebx, DWORD PTR _k$123$[ebp]
	push	0
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	lea	eax, DWORD PTR [edx+1]
	mov	DWORD PTR _j$118$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	eax, DWORD PTR [edx+2]
	mov	DWORD PTR _j$117$[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	ebx, DWORD PTR [ecx*4]
	mov	eax, DWORD PTR [edi+edx*4+8]
	dec	ecx
	inc	esi
	mov	DWORD PTR tv23430[ebp], ebx
	mov	DWORD PTR _k$136$[ebp], ecx
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	inc	esi
	mov	DWORD PTR tv22330[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4+8]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4+4]
	push	ecx
	push	edx
	mov	DWORD PTR [eax+ecx*4], esi
	lea	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR tv22956[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1772 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN522@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN522@cub_9

; 1773 : 					////c_88(table, &i, &j, &k);
; 1774 : 
; 1775 : 					i = i - 9;
; 1776 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22956[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22330[ebp]

; 1777 : 					table[j++][k] = 0;
; 1778 : 					table[j][k++] = 0;
; 1779 : 					table[j][k++] = 0;
; 1780 : 					table[j--][k] = 0;
; 1781 : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR _k$123$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR _j$118$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR _j$117$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR _j$117$[ebp]
	mov	ecx, DWORD PTR tv23430[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR _j$117$[ebp]
	mov	ecx, DWORD PTR _k$123$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	ecx, DWORD PTR _j$118$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], 0

; 1782 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ebx, DWORD PTR _k$124$[ebp]

; 1783 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$119$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], 0

; 1784 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv23428[ebp]

; 1785 : 
; 1786 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 1787 : 					k++;

	mov	ecx, DWORD PTR tv21910[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$136$[ebp], ecx
	jmp	SHORT $LN174@cub_9
$LN522@cub_9:

; 1788 : 				}
; 1789 : 			}
; 1790 : 			if (table[0][n - 1] != n * n && flag == 19 || flag == 41) {

	mov	ecx, DWORD PTR _k$136$[ebp]
$LN174@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+edx-4]
	mov	DWORD PTR tv23491[ebp], eax
	mov	eax, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR tv23491[ebp], eax
	je	SHORT $LN177@cub_9
	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	je	SHORT $LN278@cub_9
$LN177@cub_9:
	cmp	DWORD PTR _flag$[ebp], 41		; 00000029H
	mov	ebx, DWORD PTR _j$119$[ebp]
	mov	DWORD PTR _j$130$[ebp], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN520@cub_9

; 1791 : 				if (table[0][n - 1] != n * n && flag == 19 && k != n - 1 && table[j][k + 1] == 0) {

	cmp	DWORD PTR tv23491[ebp], eax
	je	$LN549@cub_9
	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	jne	SHORT $LN549@cub_9
$LN278@cub_9:
	mov	eax, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _j$119$[ebp]
	dec	eax
	cmp	ecx, eax
	je	SHORT $LN178@cub_9
	mov	eax, DWORD PTR [edi+edx*4]
	cmp	DWORD PTR [eax+ecx*4+4], 0
	jne	SHORT $LN178@cub_9

; 1792 : 					k++;
; 1793 : 					////c_3(table, &i, &j, &k);
; 1794 : 
; 1795 : 					table[j][k++] = i++;

	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi

; 1796 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]

; 1797 : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR _k$136$[ebp]

; 1798 : 					table[j--][k] = i++;
; 1799 : 					table[j][k++] = i++;
; 1800 : 					table[j][k++] = i++;

	add	DWORD PTR _k$136$[ebp], 3
	mov	DWORD PTR [eax+ecx*4+8], esi
	lea	ecx, DWORD PTR [edx-1]
	lea	edx, DWORD PTR [ecx*4]
	inc	esi
	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+ebx*4+8], esi
	inc	esi

; 1801 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	ecx, DWORD PTR _k$136$[ebp]

; 1802 : 					table[j++][k] = i++;
; 1803 : 					table[j][k] = i++;
; 1804 : 
; 1805 : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$119$[ebp]
	mov	DWORD PTR _j$130$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	$LN180@cub_9
$LN549@cub_9:

; 1806 : 				else if (j != 0 && table[j - 1][k] == 0) {

	mov	edx, DWORD PTR _j$119$[ebp]
$LN178@cub_9:
	mov	DWORD PTR _j$130$[ebp], edx
	test	edx, edx
	je	SHORT $LN514@cub_9
	mov	eax, DWORD PTR [edi+edx*4-4]
	shl	ecx, 2
	mov	DWORD PTR tv22324[ebp], ecx
	mov	DWORD PTR _j$130$[ebp], edx
	cmp	DWORD PTR [ecx+eax], 0
	jne	SHORT $LN514@cub_9

; 1807 : 					j--;
; 1808 : 					////c_3(table, &i, &j, &k);
; 1809 : 
; 1810 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+edx*4-4]
	lea	ecx, DWORD PTR [edx-1]
	mov	edx, DWORD PTR tv22324[ebp]

; 1811 : 					table[j--][k] = i++;
; 1812 : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR tv22324[ebp]

; 1813 : 					table[j--][k] = i++;
; 1814 : 					table[j][k++] = i++;
; 1815 : 					table[j][k++] = i++;

	add	DWORD PTR _k$136$[ebp], 2
	mov	DWORD PTR _j$130$[ebp], ecx
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx+4], esi
	lea	edx, DWORD PTR [ecx*4-4]
	mov	eax, DWORD PTR [edx+edi]
	inc	esi
	mov	DWORD PTR [eax+ebx+4], esi
	inc	esi
	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-8]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-8]
	mov	DWORD PTR [eax+ebx+4], esi
	inc	esi

; 1816 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4-8]
	mov	ecx, DWORD PTR _k$136$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1817 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edx+edi]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1818 : 					table[j][k] = i++;

	mov	eax, DWORD PTR _j$130$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	SHORT $LN180@cub_9
$LN514@cub_9:

; 1819 : 
; 1820 : 				}
; 1821 : 				*sum -= 9;

	mov	ecx, DWORD PTR _k$136$[ebp]
$LN180@cub_9:

; 1822 : 				f = flag;
; 1823 : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	edx, DWORD PTR _j$130$[ebp]
	push	DWORD PTR _J$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv22651[ebp], ecx
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv21904[ebp], edx
	push	ecx
	push	edx
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1824 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN520@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	mov	ecx, DWORD PTR _k$136$[ebp]
	je	$LN183@cub_9

; 1825 : 					////c_33(table, &i, &j, &k);
; 1826 : 
; 1827 : 					i = i - 9;
; 1828 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR _j$130$[ebp]
	sub	esi, 9

; 1829 : 					table[j--][k] = 0;
; 1830 : 					table[j][k--] = 0;
; 1831 : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR tv22651[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	dec	edx
	mov	DWORD PTR _j$130$[ebp], edx
	mov	DWORD PTR [eax+ecx*4], 0
	mov	ecx, edx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$136$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, ecx
	dec	eax
	mov	DWORD PTR _j$130$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	edx, DWORD PTR _j$130$[ebp]
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4-4], 0
	mov	eax, ebx
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _k$136$[ebp], eax

; 1832 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ebx

; 1833 : 					table[j][k++] = 0;
; 1834 : 					table[j++][k] = 0;
; 1835 : 					table[j][k--] = 0;
; 1836 : 
; 1837 : 					table[j][k] = 0;
; 1838 : 
; 1839 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+edx*4-8], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-8], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21904[ebp]
	mov	DWORD PTR _j$130$[ebp], ecx
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-8], 0
	add	DWORD PTR [ebx], 9

; 1840 : 					if (f == 19) k--;

	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	mov	edx, DWORD PTR tv22381[ebp]
	jne	SHORT $LN182@cub_9
	mov	ecx, DWORD PTR tv22651[ebp]
	add	ecx, -3					; fffffffdH
	mov	DWORD PTR _k$136$[ebp], ecx
	jmp	SHORT $LN183@cub_9
$LN182@cub_9:

; 1841 : 					else j++;

	inc	ecx
	mov	DWORD PTR _j$130$[ebp], ecx
$LN520@cub_9:

; 1842 : 				}
; 1843 : 			}
; 1844 : 			if (table[0][n - 1] != n * n && flag == 49 && k != n - 1 && table[j][k + 1] == 0) {

	mov	ecx, DWORD PTR _k$136$[ebp]
$LN183@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv22419[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN185@cub_9
	cmp	DWORD PTR _flag$[ebp], 49		; 00000031H
	jne	$LN185@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	ecx, eax
	je	$LN185@cub_9
	mov	eax, DWORD PTR _j$130$[ebp]
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+ecx*4+4], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN185@cub_9

; 1845 : 				k++;
; 1846 : 				////c_3(table, &i, &j, &k);
; 1847 : 
; 1848 : 				table[j][k++] = i++;
; 1849 : 				table[j--][k] = i++;

	mov	edx, DWORD PTR _j$130$[ebp]
	lea	ebx, DWORD PTR [ecx+1]
	mov	ecx, DWORD PTR [edi+eax*4]

; 1850 : 				table[j][k--] = i++;
; 1851 : 				table[j--][k] = i++;
; 1852 : 				table[j][k++] = i++;
; 1853 : 				table[j][k++] = i++;
; 1854 : 				table[j++][k] = i++;
; 1855 : 				table[j++][k] = i++;
; 1856 : 				table[j][k] = i++;
; 1857 : 
; 1858 : 				*sum -= 9;
; 1859 : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR _k$128$[ebp], ebx
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR [ecx+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	lea	ecx, DWORD PTR [edx-1]
	mov	DWORD PTR _j$128$[ebp], ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	push	0
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	dec	ecx
	mov	DWORD PTR _j$127$[ebp], ecx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ecx, DWORD PTR [ebx+2]
	mov	DWORD PTR _k$136$[ebp], ecx
	mov	DWORD PTR tv21665[ebp], ecx
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23420[ebp], eax
	inc	esi
	mov	eax, DWORD PTR _j$127$[ebp]
	mov	ebx, DWORD PTR tv23420[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR tv22941[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	ecx
	push	edx
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1860 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN455@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	ecx, DWORD PTR tv21665[ebp]
	mov	DWORD PTR _k$136$[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN185@cub_9

; 1861 : 					////c_33(table, &i, &j, &k);
; 1862 : 
; 1863 : 					i = i - 9;
; 1864 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22941[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv23420[ebp]

; 1865 : 					table[j--][k] = 0;
; 1866 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$127$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR _j$128$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 1867 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR _k$128$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 1868 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]

; 1869 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _k$128$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	ecx, DWORD PTR _j$128$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1870 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	edx, DWORD PTR tv21665[ebp]

; 1871 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$130$[ebp]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 1872 : 
; 1873 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$128$[ebp]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 1874 : 
; 1875 : 					*sum += 9;
; 1876 : 					k--;

	mov	ecx, DWORD PTR tv22419[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _k$136$[ebp], ecx
	jmp	SHORT $LN185@cub_9
$LN455@cub_9:

; 1860 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	ecx, DWORD PTR _k$136$[ebp]
$LN185@cub_9:

; 1877 : 				}
; 1878 : 			}
; 1879 : 			if (table[0][n - 1] != n * n && flag == 19 || flag == 41) {

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21894[ebp], ecx
	mov	eax, DWORD PTR [eax+edx-4]
	mov	DWORD PTR tv23489[ebp], eax
	mov	eax, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR tv23489[ebp], eax
	je	SHORT $LN188@cub_9
	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	je	SHORT $LN277@cub_9
$LN188@cub_9:
	cmp	DWORD PTR _flag$[ebp], 41		; 00000029H
	mov	ecx, DWORD PTR _j$130$[ebp]
	mov	DWORD PTR _j$144$[ebp], ecx
	jne	$LN194@cub_9

; 1880 : 				if (table[0][n - 1] != n * n && flag == 19 && k != n - 1 && table[j][k + 1] == 0) {

	mov	ecx, DWORD PTR _k$136$[ebp]
	cmp	DWORD PTR tv23489[ebp], eax
	je	$LN519@cub_9
	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	jne	$LN519@cub_9
$LN277@cub_9:
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	ecx, eax
	mov	eax, DWORD PTR _j$130$[ebp]
	je	$LN189@cub_9
	lea	edx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv23418[ebp], edx
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR tv23416[ebp], edx
	cmp	DWORD PTR [edx+ecx*4+4], 0
	jne	SHORT $LN189@cub_9

; 1881 : 					k++;
; 1882 : 					////c_5(table, &i, &j, &k);
; 1883 : 
; 1884 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR tv23416[ebp]
	lea	edx, DWORD PTR [ecx+1]

; 1885 : 					table[j][k++] = i++;

	mov	ebx, DWORD PTR tv23418[ebp]
	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ebx-4]
	mov	DWORD PTR [eax+ecx*4+4], esi
	add	ecx, 2

; 1886 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [ebx-4]
	inc	esi

; 1887 : 					table[j][k++] = i++;

	mov	ebx, DWORD PTR _j$130$[ebp]
	mov	DWORD PTR _k$136$[ebp], ecx
	inc	DWORD PTR _k$136$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1888 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ebx, DWORD PTR _k$136$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1889 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR tv23418[ebp]
	mov	eax, DWORD PTR [eax-4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$130$[ebp]
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _j$144$[ebp], eax

; 1890 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1891 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$144$[ebp]

; 1892 : 					table[j][k] = i++;
; 1893 : 
; 1894 : 				}

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	mov	ecx, edx
	mov	edx, DWORD PTR _j$144$[ebp]
	inc	esi
	mov	DWORD PTR _k$136$[ebp], ecx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	$LN191@cub_9
$LN519@cub_9:

; 1895 : 				else if (j != 0 && table[j - 1][k] == 0) {

	mov	eax, DWORD PTR _j$130$[ebp]
$LN189@cub_9:
	mov	edx, eax
	mov	DWORD PTR _j$144$[ebp], edx
	test	eax, eax
	je	SHORT $LN516@cub_9
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR _j$144$[ebp], edx
	cmp	DWORD PTR [eax+ecx*4], 0
	jne	SHORT $LN516@cub_9

; 1896 : 					j--;
; 1897 : 					////c_5(table, &i, &j, &k);
; 1898 : 
; 1899 : 					table[j--][k] = i++;

	mov	ebx, DWORD PTR _j$130$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1900 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	ecx

; 1901 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	inc	esi

; 1902 : 					table[j][k++] = i++;

	mov	edx, ecx
	mov	DWORD PTR _k$136$[ebp], ecx
	inc	edx
	mov	DWORD PTR _k$136$[ebp], edx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1903 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 1904 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-8]
	mov	DWORD PTR [eax+edx*4], esi
	lea	edx, DWORD PTR [ebx-3]

; 1905 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	inc	esi
	mov	ebx, DWORD PTR _k$136$[ebp]
	mov	DWORD PTR _j$144$[ebp], edx
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 1906 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR tv21894[ebp]

; 1907 : 					table[j][k] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR _k$136$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	jmp	SHORT $LN191@cub_9
$LN516@cub_9:

; 1908 : 
; 1909 : 				}
; 1910 : 				*sum -= 9;

	mov	ecx, DWORD PTR _k$136$[ebp]
$LN191@cub_9:

; 1911 : 				f = flag;
; 1912 : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR tv22663[ebp], edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv21890[ebp], ecx
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	ecx
	push	edx
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1913 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN507@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN507@cub_9

; 1914 : 					////c_55(table, &i, &j, &k);
; 1915 : 
; 1916 : 					i = i - 9;
; 1917 : 
; 1918 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$144$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$136$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0
	inc	ecx

; 1919 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$144$[ebp]
	mov	edx, ecx
	mov	DWORD PTR _k$136$[ebp], ecx
	inc	DWORD PTR _k$136$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1920 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$144$[ebp]
	mov	edx, DWORD PTR _k$136$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 1921 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22663[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR tv22663[ebp]
	add	eax, 2
	mov	DWORD PTR _j$144$[ebp], eax

; 1922 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR tv22663[ebp]
	mov	eax, DWORD PTR [edi+eax*4+8]
	mov	DWORD PTR [eax+edx*4], 0

; 1923 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR tv22663[ebp]
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ecx*4], 0

; 1924 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1925 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	ecx, DWORD PTR tv21890[ebp]
	mov	DWORD PTR _k$136$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 1926 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4+8]

; 1927 : 
; 1928 : 					*sum += 9;
; 1929 : 					if (f == 19) k--;

	mov	edx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9
	cmp	DWORD PTR _flag$[ebp], 19		; 00000013H
	jne	$LN193@cub_9
	dec	ecx
	mov	DWORD PTR _k$136$[ebp], ecx
$LN507@cub_9:

; 1931 : 				}
; 1932 : 			}
; 1933 : 			if (table[0][n - 1] != n * n && flag == 11 && j != 0 && table[j - 1][k] == 0) {

	mov	ecx, DWORD PTR _j$144$[ebp]
$LN194@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21880[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN196@cub_9
	cmp	DWORD PTR _flag$[ebp], 11		; 0000000bH
	jne	$LN196@cub_9
	test	ecx, ecx
	je	$LN196@cub_9
	mov	eax, DWORD PTR _k$136$[ebp]
	shl	eax, 2
	mov	DWORD PTR tv22296[ebp], eax
	mov	ebx, eax
	mov	eax, DWORD PTR [edi+ecx*4-4]
	cmp	DWORD PTR [ebx+eax], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN196@cub_9

; 1934 : 				j--;
; 1935 : 				////c_5(table, &i, &j, &k);
; 1936 : 
; 1937 : 				table[j--][k] = i++;

	mov	edx, DWORD PTR tv22296[ebp]
	dec	ecx
	mov	DWORD PTR _j$132$[ebp], ecx

; 1938 : 				table[j][k++] = i++;
; 1939 : 				table[j++][k] = i++;
; 1940 : 				table[j][k++] = i++;
; 1941 : 				table[j--][k] = i++;
; 1942 : 				table[j--][k] = i++;
; 1943 : 				table[j][k--] = i++;
; 1944 : 				table[j][k--] = i++;
; 1945 : 				table[j][k] = i++;
; 1946 : 
; 1947 : 				*sum -= 9;
; 1948 : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	dec	ecx
	mov	DWORD PTR tv23402[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR _j$133$[ebp], ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	edx, DWORD PTR _k$136$[ebp]
	push	edx
	lea	eax, DWORD PTR [edx+1]
	mov	DWORD PTR _k$135$[ebp], eax
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR _j$132$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR _j$132$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+8], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23404[ebp], eax
	dec	ecx
	mov	eax, DWORD PTR [eax+edi]
	inc	esi
	push	ecx
	mov	DWORD PTR _j$144$[ebp], ecx
	mov	DWORD PTR [eax+edx*4+8], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22932[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22290[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 1949 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN506@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN506@cub_9

; 1950 : 					////c_55(table, &i, &j, &k);
; 1951 : 
; 1952 : 					i = i - 9;
; 1953 : 
; 1954 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv22932[ebp]
	sub	esi, 9
	mov	ebx, DWORD PTR tv22290[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ebx+eax], 0

; 1955 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	ebx, DWORD PTR _k$135$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0

; 1956 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx

; 1957 : 					table[j++][k] = 0;
; 1958 : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR _j$132$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], 0
	mov	eax, DWORD PTR tv23404[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4+4], 0
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4+4], 0

; 1959 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4]

; 1960 : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR _j$133$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 1961 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ecx, DWORD PTR _k$136$[ebp]

; 1962 : 					table[j][k] = 0;
; 1963 : 
; 1964 : 					j++;
; 1965 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv23402[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	ecx, DWORD PTR tv21880[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$144$[ebp], ecx
	jmp	SHORT $LN196@cub_9
$LN193@cub_9:

; 1930 : 					else j++;

	mov	ecx, DWORD PTR tv22663[ebp]
	add	ecx, 3
	mov	DWORD PTR _j$144$[ebp], ecx
	jmp	$LN194@cub_9
$LN506@cub_9:

; 1966 : 				}
; 1967 : 			}
; 1968 : 			if (table[0][n - 1] != n * n && flag == 43 || flag == 37) {

	mov	ecx, DWORD PTR _j$144$[ebp]
$LN196@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+edx-4]
	mov	DWORD PTR tv23487[ebp], eax
	cmp	eax, DWORD PTR tv23479[ebp]
	je	SHORT $LN199@cub_9
	cmp	DWORD PTR _flag$[ebp], 43		; 0000002bH
	je	$LN517@cub_9
$LN199@cub_9:
	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	mov	eax, DWORD PTR _k$136$[ebp]
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _k$147$[ebp], eax
	jne	$LN510@cub_9

; 1969 : 				if (table[0][n - 1] != n * n && flag == 37 && k != 0 && table[j][k - 1] == 0) {

	mov	edx, DWORD PTR tv23487[ebp]
	cmp	edx, DWORD PTR tv23479[ebp]
	je	$LN200@cub_9
	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	jne	SHORT $LN200@cub_9
	test	eax, eax
	je	SHORT $LN200@cub_9
	mov	ebx, DWORD PTR [edi+ecx*4]
	lea	edx, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22929[ebp], edx
	cmp	DWORD PTR [ebx+eax*4-4], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	SHORT $LN200@cub_9

; 1970 : 					k--;

	lea	ecx, DWORD PTR [eax-1]

; 1971 : 					////c_6(table, &i, &j, &k);
; 1972 : 
; 1973 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _k$147$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi

; 1974 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edx-4]

; 1975 : 					table[j++][k] = i++;

	lea	edx, DWORD PTR [ecx*4-4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR tv22929[ebp]
	mov	eax, DWORD PTR [eax-4]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1976 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR tv22929[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1977 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR tv22929[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ecx*4-8], esi
	inc	esi

; 1978 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR tv22929[ebp]
	mov	eax, DWORD PTR [eax-4]
	mov	DWORD PTR [eax+ecx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$144$[ebp]
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _j$144$[ebp], eax

; 1979 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4-8], esi
	inc	esi

; 1980 : 					table[j][k++] = i++;

	mov	ecx, DWORD PTR _j$144$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [edx+eax], esi

; 1981 : 					table[j][k] = i++;

	mov	edx, DWORD PTR _k$147$[ebp]

; 1982 : 
; 1983 : 				}

	jmp	$LN590@cub_9
$LN517@cub_9:

; 1966 : 				}
; 1967 : 			}
; 1968 : 			if (table[0][n - 1] != n * n && flag == 43 || flag == 37) {

	mov	eax, DWORD PTR _k$136$[ebp]
$LN200@cub_9:

; 1984 : 				else if (j != 0 && table[j - 1][k] == 0) {

	mov	edx, eax
	mov	DWORD PTR _k$147$[ebp], edx
	test	ecx, ecx
	je	$LN202@cub_9
	lea	edx, DWORD PTR [eax*4]
	mov	DWORD PTR tv23400[ebp], edx
	mov	edx, eax
	mov	ebx, DWORD PTR tv23400[ebp]
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR _k$147$[ebp], edx
	cmp	DWORD PTR [ebx+eax], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	SHORT $LN202@cub_9

; 1985 : 					j--;
; 1986 : 					////c_6(table, &i, &j, &k);
; 1987 : 
; 1988 : 					table[j--][k] = i++;

	mov	edx, DWORD PTR tv23400[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1989 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ecx*4-8]
	mov	ecx, DWORD PTR _k$136$[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1990 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR _j$144$[ebp]
	lea	edx, DWORD PTR [ecx*4-4]
	mov	eax, DWORD PTR [edi+eax*4-8]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1991 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR _j$144$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [edx+eax], esi
	inc	esi

; 1992 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$144$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx*4-8], esi
	inc	esi

; 1993 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR _j$144$[ebp]
	mov	eax, DWORD PTR [edi+eax*4-8]
	mov	DWORD PTR [eax+ecx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$144$[ebp]
	add	eax, -3					; fffffffdH
	mov	DWORD PTR _j$144$[ebp], eax

; 1994 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4-8], esi
	inc	esi

; 1995 : 					table[j][k++] = i++;

	mov	ecx, DWORD PTR _j$144$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [edx+eax], esi
	mov	edx, DWORD PTR _k$136$[ebp]
	mov	DWORD PTR _k$147$[ebp], edx
$LN590@cub_9:

; 1996 : 					table[j][k] = i++;
; 1997 : 
; 1998 : 				}
; 1999 : 				*sum -= 9;

	mov	eax, DWORD PTR [edi+ecx*4]
	inc	esi
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
$LN202@cub_9:

; 2000 : 				f = flag;
; 2001 : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR tv22327[ebp], ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv21874[ebp], edx
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	edx
	push	ecx
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 2002 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN510@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN510@cub_9

; 2003 : 					////c_66(table, &i, &j, &k);
; 2004 : 
; 2005 : 					i = i - 9;
; 2006 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR _j$144$[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR _k$147$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0
	dec	ecx

; 2007 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR _j$144$[ebp]
	mov	edx, ecx
	mov	DWORD PTR _k$147$[ebp], ecx
	dec	DWORD PTR _k$147$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2008 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$144$[ebp]
	mov	edx, DWORD PTR _k$147$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2009 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22327[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR tv22327[ebp]
	add	eax, 2
	mov	DWORD PTR _j$144$[ebp], eax

; 2010 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR tv22327[ebp]
	mov	eax, DWORD PTR [edi+eax*4+8]
	mov	DWORD PTR [eax+edx*4], 0

; 2011 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR tv22327[ebp]
	mov	eax, DWORD PTR [edi+edx*4+8]
	mov	DWORD PTR [eax+ecx*4], 0

; 2012 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	DWORD PTR [eax+ecx*4], 0

; 2013 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4+4]
	mov	ecx, DWORD PTR tv21874[ebp]
	mov	DWORD PTR _k$147$[ebp], ecx
	mov	DWORD PTR [eax+ecx*4], 0

; 2014 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4+8]

; 2015 : 
; 2016 : 					*sum += 9;
; 2017 : 					if (f == 37) k++;

	mov	edx, DWORD PTR tv22381[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	add	DWORD PTR [ebx], 9
	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	jne	$LN204@cub_9
	inc	ecx
	mov	DWORD PTR _k$147$[ebp], ecx
$LN510@cub_9:

; 2019 : 				}
; 2020 : 			}
; 2021 : 			if (table[0][n - 1] != n * n && flag == 33 && j != 0 && table[j - 1][k] == 0) {

	mov	ecx, DWORD PTR _j$144$[ebp]
$LN205@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21864[ebp], ecx
	cmp	DWORD PTR [eax+edx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN207@cub_9
	cmp	DWORD PTR _flag$[ebp], 33		; 00000021H
	jne	$LN207@cub_9
	test	ecx, ecx
	je	$LN207@cub_9
	mov	eax, DWORD PTR _k$147$[ebp]
	shl	eax, 2
	mov	DWORD PTR tv22266[ebp], eax
	mov	ebx, eax
	mov	eax, DWORD PTR [edi+ecx*4-4]
	cmp	DWORD PTR [ebx+eax], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN207@cub_9

; 2022 : 				j--;
; 2023 : 				////c_6(table, &i, &j, &k);
; 2024 : 
; 2025 : 				table[j--][k] = i++;

	mov	edx, DWORD PTR tv22266[ebp]
	dec	ecx
	mov	DWORD PTR _j$135$[ebp], ecx

; 2026 : 				table[j][k--] = i++;
; 2027 : 				table[j++][k] = i++;
; 2028 : 				table[j][k--] = i++;
; 2029 : 				table[j--][k] = i++;
; 2030 : 				table[j--][k] = i++;
; 2031 : 				table[j][k++] = i++;
; 2032 : 				table[j][k++] = i++;
; 2033 : 				table[j][k] = i++;
; 2034 : 
; 2035 : 				*sum -= 9;
; 2036 : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	dec	ecx
	mov	DWORD PTR tv23390[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR _j$136$[ebp], ecx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+eax], esi
	inc	esi
	mov	edx, DWORD PTR _k$147$[ebp]
	push	edx
	lea	eax, DWORD PTR [edx-1]
	mov	DWORD PTR _k$145$[ebp], eax
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR _j$135$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR _j$135$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23392[ebp], eax
	dec	ecx
	mov	eax, DWORD PTR [eax+edi]
	inc	esi
	push	ecx
	mov	DWORD PTR _j$144$[ebp], ecx
	mov	DWORD PTR [eax+edx*4-8], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22924[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22260[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9

; 2037 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR tv22381[ebp]
	add	esp, 44					; 0000002cH
	cmp	eax, -1
	jne	$LN508@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN508@cub_9

; 2038 : 					////c_66(table, &i, &j, &k);
; 2039 : 
; 2040 : 					i = i - 9;
; 2041 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv22924[ebp]
	sub	esi, 9
	mov	ebx, DWORD PTR tv22260[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ebx+eax], 0

; 2042 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	ebx, DWORD PTR _k$145$[ebp]
	mov	DWORD PTR [eax+ebx*4], 0

; 2043 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx

; 2044 : 					table[j++][k] = 0;
; 2045 : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR _j$135$[ebp]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR tv23392[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4-4], 0

; 2046 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4]

; 2047 : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR _j$136$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 2048 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ecx, DWORD PTR _k$147$[ebp]

; 2049 : 					table[j][k] = 0;
; 2050 : 
; 2051 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR tv23390[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ecx*4], 0

; 2052 : 					j++;

	mov	ecx, DWORD PTR tv21864[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$144$[ebp], ecx
	jmp	SHORT $LN207@cub_9
$LN204@cub_9:

; 2018 : 					else j++;

	mov	ecx, DWORD PTR tv22327[ebp]
	add	ecx, 3
	mov	DWORD PTR _j$144$[ebp], ecx
	jmp	$LN205@cub_9
$LN508@cub_9:

; 2053 : 				}
; 2054 : 			}
; 2055 : 			if (table[0][n - 1] != n * n && flag == 43 || flag == 37) {

	mov	ecx, DWORD PTR _j$144$[ebp]
$LN207@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21859[ebp], ecx
	mov	edx, DWORD PTR [eax+edx-4]
	mov	eax, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv23485[ebp], edx
	cmp	edx, eax
	je	SHORT $LN210@cub_9
	cmp	DWORD PTR _flag$[ebp], 43		; 0000002bH
	je	$LN559@cub_9
$LN210@cub_9:
	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	mov	edx, DWORD PTR _k$147$[ebp]
	jne	$LN216@cub_9

; 2056 : 				if (table[0][n - 1] != n * n && flag == 37 && k != 0 && table[j][k - 1] == 0) {

	cmp	DWORD PTR tv23485[ebp], eax
	je	SHORT $LN211@cub_9
	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	jne	SHORT $LN211@cub_9
	test	edx, edx
	je	SHORT $LN211@cub_9
	mov	eax, DWORD PTR [edi+ecx*4]
	cmp	DWORD PTR [eax+edx*4-4], 0
	jne	SHORT $LN211@cub_9

; 2057 : 					k--;
; 2058 : 					////c_7(table, &i, &j, &k);
; 2059 : 
; 2060 : 					table[j][k--] = i++;

	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi

; 2061 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	dec	ecx

; 2062 : 					table[j][k++] = i++;
; 2063 : 					table[j--][k] = i++;
; 2064 : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR _k$147$[ebp]
	mov	DWORD PTR _j$144$[ebp], ecx
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], esi
	mov	edx, ecx
	dec	edx
	inc	esi
	mov	DWORD PTR _j$144$[ebp], edx
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi

; 2065 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, ebx
	mov	DWORD PTR [eax+edx*4-8], esi
	add	edx, -3					; fffffffdH

; 2066 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR _j$144$[ebp]
	inc	esi
	mov	DWORD PTR _k$194$[ebp], edx
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 2067 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv21859[ebp]
	mov	DWORD PTR [eax+edx*4], esi

; 2068 : 					table[j][k] = i++;
; 2069 : 
; 2070 : 				}

	jmp	$LN592@cub_9
$LN559@cub_9:

; 2053 : 				}
; 2054 : 			}
; 2055 : 			if (table[0][n - 1] != n * n && flag == 43 || flag == 37) {

	mov	edx, DWORD PTR _k$147$[ebp]
$LN211@cub_9:

; 2071 : 				else if (j != 0 && table[j - 1][k] == 0) {

	mov	DWORD PTR _k$194$[ebp], edx
	test	ecx, ecx
	je	$LN213@cub_9
	mov	eax, DWORD PTR _k$147$[ebp]
	lea	edx, DWORD PTR [eax*4]
	mov	DWORD PTR tv23388[ebp], edx
	mov	edx, eax
	mov	ebx, DWORD PTR tv23388[ebp]
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR _k$194$[ebp], edx
	cmp	DWORD PTR [ebx+eax], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	SHORT $LN213@cub_9

; 2072 : 					j--;
; 2073 : 					////c_7(table, &i, &j, &k);
; 2074 : 
; 2075 : 					table[j][k--] = i++;

	mov	ebx, DWORD PTR tv23388[ebp]
	lea	edx, DWORD PTR [ecx-1]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi

; 2076 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4-4]
	sub	ecx, 2
	mov	DWORD PTR _j$144$[ebp], ecx
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi

; 2077 : 					table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [ebx+eax-4], esi
	inc	esi

; 2078 : 					table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ebx, DWORD PTR _k$147$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	mov	ebx, ecx
	inc	esi

; 2079 : 					table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	edi, DWORD PTR _k$147$[ebp]
	mov	DWORD PTR [eax+edi*4], esi
	inc	esi

; 2080 : 					table[j][k--] = i++;

	mov	edi, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	edi, DWORD PTR tv23388[ebp]
	mov	DWORD PTR [edi+eax-4], esi
	inc	esi

; 2081 : 					table[j++][k] = i++;

	mov	edi, DWORD PTR _table$[ebp]
	mov	eax, DWORD PTR _k$147$[ebp]
	add	eax, -2					; fffffffeH
	mov	DWORD PTR _k$194$[ebp], eax
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	ebx, DWORD PTR _k$194$[ebp]
	mov	DWORD PTR [eax+ebx*4], esi
	inc	esi

; 2082 : 					table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4], esi
	mov	ecx, edx

; 2083 : 					table[j][k] = i++;

	mov	edx, ebx
$LN592@cub_9:

; 2084 : 
; 2085 : 				}
; 2086 : 				*sum -= 9;

	mov	eax, DWORD PTR [edi+ecx*4]
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _j$144$[ebp], ecx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
$LN213@cub_9:

; 2087 : 				f = flag;
; 2088 : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR tv22333[ebp], edx
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR tv21852[ebp], ecx
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	push	edx
	push	ecx
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2089 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN450@cub_9
	mov	edx, DWORD PTR tv22381[ebp]
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	mov	edx, DWORD PTR _k$194$[ebp]
	je	$LN216@cub_9

; 2090 : 					////c_77(table, &i, &j, &k);
; 2091 : 
; 2092 : 					i = i - 9;
; 2093 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR _j$144$[ebp]
	sub	esi, 9

; 2094 : 					table[j--][k] = 0;
; 2095 : 					table[j][k++] = 0;
; 2096 : 					table[j][k++] = 0;
; 2097 : 					table[j++][k] = 0;

	mov	ebx, DWORD PTR tv22333[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$144$[ebp]
	dec	eax
	mov	DWORD PTR _j$144$[ebp], eax
	mov	ecx, eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, ecx
	dec	eax
	mov	DWORD PTR _j$144$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$144$[ebp]
	mov	edx, DWORD PTR tv22333[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+4], 0
	add	edx, 2
	mov	eax, DWORD PTR _j$144$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ebx*4+8], 0

; 2098 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4+8], 0

; 2099 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, ebx
	mov	DWORD PTR [eax+ecx*4+4], 0
	mov	ecx, DWORD PTR tv21852[ebp]
	mov	DWORD PTR _j$144$[ebp], ecx

; 2100 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4+4], 0

; 2101 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+ebx*4+8], 0

; 2102 : 
; 2103 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	add	DWORD PTR [ebx], 9

; 2104 : 					if (f == 37) k++;

	cmp	DWORD PTR _flag$[ebp], 37		; 00000025H
	jne	SHORT $LN215@cub_9
	mov	edx, DWORD PTR tv22333[ebp]
	add	edx, 3
	jmp	SHORT $LN216@cub_9
$LN215@cub_9:

; 2105 : 					else j++;

	inc	ecx
	mov	DWORD PTR _j$144$[ebp], ecx
	jmp	SHORT $LN216@cub_9
$LN450@cub_9:

; 2089 : 				if (result == -1 && table[0][n - 1] != n * n) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN216@cub_9:

; 2106 : 				}
; 2107 : 			}
; 2108 : 			if (table[0][n - 1] != n * n && flag == 47 && k != 0 && table[j][k - 1] == 0) {

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21839[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$144$[ebp]
	je	$LN218@cub_9
	cmp	DWORD PTR _flag$[ebp], 47		; 0000002fH
	jne	$LN218@cub_9
	test	edx, edx
	je	$LN218@cub_9
	lea	ebx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22912[ebp], ebx
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4-4], 0
	jne	$LN218@cub_9

; 2109 : 				k--;
; 2110 : 				////c_7(table, &i, &j, &k);
; 2111 : 
; 2112 : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+eax*4]
	lea	ecx, DWORD PTR [edx*4-4]
	lea	ebx, DWORD PTR [edx-1]
	mov	DWORD PTR tv23382[ebp], ecx
	sub	edx, 2
	mov	DWORD PTR _k$149$[ebp], ebx

; 2113 : 				table[j--][k] = i++;
; 2114 : 				table[j][k++] = i++;
; 2115 : 				table[j--][k] = i++;
; 2116 : 				table[j][k--] = i++;
; 2117 : 				table[j][k--] = i++;
; 2118 : 				table[j++][k] = i++;
; 2119 : 				table[j++][k] = i++;
; 2120 : 				table[j][k] = i++;
; 2121 : 
; 2122 : 				*sum -= 9;
; 2123 : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+ecx], esi
	inc	esi
	mov	eax, DWORD PTR tv22912[ebp]
	mov	ecx, DWORD PTR _j$144$[ebp]
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR _k$150$[ebp], edx
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [ecx-1]
	mov	DWORD PTR _j$143$[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-4]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	ebx, DWORD PTR [ecx-2]
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	ecx, DWORD PTR _k$149$[ebp]
	mov	DWORD PTR _j$142$[ebp], ebx
	mov	DWORD PTR [eax+ecx*4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	ecx, DWORD PTR _j$144$[ebp]
	dec	edx
	mov	DWORD PTR tv23384[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	ebx, DWORD PTR tv23384[ebp]
	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	inc	esi
	mov	DWORD PTR tv22240[ebp], eax
	mov	eax, DWORD PTR [edi+ecx*4-8]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4-4]
	push	edx
	push	ecx
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22909[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2124 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN448@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN448@cub_9

; 2125 : 					////c_77(table, &i, &j, &k);
; 2126 : 
; 2127 : 					i = i - 9;
; 2128 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22909[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22240[ebp]

; 2129 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR _j$143$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 2130 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$142$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], 0

; 2131 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$142$[ebp]
	mov	ecx, DWORD PTR tv23384[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], 0

; 2132 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$142$[ebp]
	mov	ecx, DWORD PTR _k$149$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 2133 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 2134 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$150$[ebp]

; 2135 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$144$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2136 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv23382[ebp]

; 2137 : 
; 2138 : 					*sum += 9;
; 2139 : 					k++;

	mov	edx, DWORD PTR tv21839[ebp]
	mov	DWORD PTR [ecx+eax], 0
	add	DWORD PTR [ebx], 9
	jmp	SHORT $LN600@cub_9
$LN448@cub_9:

; 2140 : 				}
; 2141 : 			}
; 2142 : 
; 2143 : 			//зигзаги
; 2144 : 			if (table[0][n - 1] != n * n && flag == 17 && j != n - 1 && table[j + 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN600@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	eax, DWORD PTR _j$144$[ebp]
$LN218@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR _j$182$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _k$152$[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN496@cub_9
	cmp	DWORD PTR _flag$[ebp], 17		; 00000011H
	mov	eax, DWORD PTR _j$144$[ebp]
	mov	DWORD PTR _j$182$[ebp], eax
	jne	$LN220@cub_9
	mov	DWORD PTR _j$182$[ebp], eax
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	DWORD PTR _j$144$[ebp], eax
	je	$LN496@cub_9
	mov	eax, DWORD PTR _j$144$[ebp]
	mov	DWORD PTR _j$182$[ebp], eax
	mov	eax, DWORD PTR [edi+eax*4+4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN496@cub_9

; 2145 : 				j++;
; 2146 : 				//zzHOR_1(table, &i, &j, &k);
; 2147 : 
; 2148 : 				table[j][k++] = i++;

	mov	ecx, DWORD PTR _j$144$[ebp]

; 2149 : 				table[j][k++] = i++;
; 2150 : 				table[j++][k] = i++;
; 2151 : 				table[j][k--] = i++;
; 2152 : 				table[j][k--] = i++;
; 2153 : 				table[j++][k] = i++;
; 2154 : 				table[j][k++] = i++;
; 2155 : 				table[j][k++] = i++;
; 2156 : 				table[j][k] = i++;
; 2157 : 
; 2158 : 				*sum -= 9;
; 2159 : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4+4]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [edx*4+4]
	mov	DWORD PTR tv22691[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	ebx, DWORD PTR tv22691[ebp]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	DWORD PTR [ebx+eax+4], esi
	lea	ebx, DWORD PTR [ecx+2]
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	ecx, DWORD PTR tv22691[ebp]
	mov	DWORD PTR _j$145$[ebp], ebx
	mov	DWORD PTR [eax+ecx+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [ecx+eax], esi
	mov	ecx, edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR [eax+ecx*4], esi
	lea	ecx, DWORD PTR [ebx+1]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ebx, DWORD PTR [edi+ecx*4]
	mov	edi, edx
	mov	DWORD PTR tv22904[ebp], ebx
	inc	esi
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edi*4], esi
	lea	edi, DWORD PTR [edx*4+4]
	mov	eax, DWORD PTR [ebx]
	inc	esi
	add	edx, 2
	mov	DWORD PTR tv22689[ebp], edi
	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR [edi+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ebx]
	mov	ebx, DWORD PTR tv22691[ebp]
	mov	edi, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+ebx+4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2160 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN446@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN446@cub_9

; 2161 : 					////zzHOR_11(table, &i, &j, &k);
; 2162 : 
; 2163 : 					i = i - 9;
; 2164 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv22904[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22691[ebp]

; 2165 : 					table[j][k--] = 0;
; 2166 : 					table[j--][k] = 0;
; 2167 : 					table[j][k++] = 0;
; 2168 : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR tv22689[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx+4], 0
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _k$152$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR _j$145$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	ecx, DWORD PTR _j$145$[ebp]
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [ebx+eax], 0

; 2169 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 2170 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$144$[ebp]

; 2171 : 					table[j][k--] = 0;
; 2172 : 					table[j][k] = 0;
; 2173 : 
; 2174 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]

; 2175 : 					j--;

	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edx+4], 0
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	DWORD PTR [eax+edx+4], 0
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	DWORD PTR [edx+eax], 0
	mov	eax, DWORD PTR [edi+ecx*4+4]
	mov	edx, DWORD PTR _k$152$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	add	DWORD PTR [ebx], 9
	jmp	SHORT $LN601@cub_9
$LN446@cub_9:

; 2176 : 				}
; 2177 : 			}
; 2178 : 			if (table[0][n - 1] != n * n && flag == 11 && j != 0 && table[j - 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN601@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN496@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN220@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv22695[ebp], eax
	mov	DWORD PTR tv21825[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _k$154$[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN222@cub_9
	cmp	DWORD PTR _flag$[ebp], 11		; 0000000bH
	jne	$LN222@cub_9
	test	eax, eax
	je	$LN222@cub_9
	mov	eax, DWORD PTR [edi+eax*4-4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN497@cub_9

; 2179 : 				j--;
; 2180 : 				//zzHOR_2(table, &i, &j, &k);
; 2181 : 
; 2182 : 				table[j][k++] = i++;

	mov	ebx, DWORD PTR tv22695[ebp]

; 2183 : 				table[j][k++] = i++;

	lea	ecx, DWORD PTR [edx*4+4]

; 2184 : 				table[j--][k] = i++;
; 2185 : 				table[j][k--] = i++;
; 2186 : 				table[j][k--] = i++;
; 2187 : 				table[j--][k] = i++;
; 2188 : 				table[j][k++] = i++;
; 2189 : 				table[j][k++] = i++;
; 2190 : 				table[j][k] = i++;
; 2191 : 
; 2192 : 				*sum -= 9;
; 2193 : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR tv22703[ebp], ecx
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4-4]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4-4]
	add	ebx, -2					; fffffffeH
	mov	DWORD PTR _j$146$[ebp], ebx
	mov	DWORD PTR [eax+ecx+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx+4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [ecx+eax], esi
	mov	ecx, edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR [eax+ecx*4], esi
	lea	ecx, DWORD PTR [ebx-1]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ebx, DWORD PTR [edi+ecx*4]
	mov	edi, edx
	mov	DWORD PTR tv22901[ebp], ebx
	inc	esi
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edi*4], esi
	lea	edi, DWORD PTR [edx*4+4]
	mov	eax, DWORD PTR [ebx]
	inc	esi
	add	edx, 2
	mov	DWORD PTR tv22339[ebp], edi
	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR [edi+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ebx]
	mov	ebx, DWORD PTR tv22703[ebp]
	mov	edi, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+ebx+4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2194 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN443@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN443@cub_9

; 2195 : 					//zzHOR_22(table, &i, &j, &k);
; 2196 : 
; 2197 : 					i = i - 9;
; 2198 : 
; 2199 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR tv22901[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22703[ebp]

; 2200 : 					table[j][k--] = 0;
; 2201 : 					table[j++][k] = 0;
; 2202 : 					table[j][k++] = 0;
; 2203 : 					table[j][k++] = 0;

	mov	ebx, DWORD PTR tv22339[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx+4], 0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _k$154$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$146$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$146$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], 0

; 2204 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$146$[ebp]

; 2205 : 					table[j][k--] = 0;
; 2206 : 					table[j][k--] = 0;
; 2207 : 					table[j][k] = 0;
; 2208 : 
; 2209 : 					j++;
; 2210 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx+4], 0
	mov	eax, DWORD PTR tv22695[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx+4], 0
	mov	eax, DWORD PTR tv22695[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv22695[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR tv21825[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$182$[ebp], eax
	jmp	SHORT $LN610@cub_9
$LN443@cub_9:

; 2211 : 				}
; 2212 : 			}
; 2213 : 			if (table[0][n - 1] != n * n && flag == 33 && j != 0 && table[j - 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN610@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN497@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN222@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv22707[ebp], eax
	mov	DWORD PTR tv21817[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _k$156$[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN224@cub_9
	cmp	DWORD PTR _flag$[ebp], 33		; 00000021H
	jne	$LN224@cub_9
	test	eax, eax
	je	$LN224@cub_9
	mov	eax, DWORD PTR [edi+eax*4-4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN500@cub_9

; 2214 : 				j--;
; 2215 : 				//zzHOR_3(table, &i, &j, &k);
; 2216 : 
; 2217 : 				table[j][k--] = i++;

	mov	ebx, DWORD PTR tv22707[ebp]

; 2218 : 				table[j][k--] = i++;

	lea	ecx, DWORD PTR [edx*4-4]

; 2219 : 				table[j--][k] = i++;
; 2220 : 				table[j][k++] = i++;
; 2221 : 				table[j][k++] = i++;
; 2222 : 				table[j--][k] = i++;
; 2223 : 				table[j][k--] = i++;
; 2224 : 				table[j][k--] = i++;
; 2225 : 				table[j][k] = i++;
; 2226 : 
; 2227 : 				*sum -= 9;
; 2228 : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR tv22715[ebp], ecx
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4-4]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4-4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4-4]
	add	ebx, -2					; fffffffeH
	mov	DWORD PTR _j$147$[ebp], ebx
	mov	DWORD PTR [ecx+eax-4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx-4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [ecx+eax], esi
	mov	ecx, edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR [eax+ecx*4], esi
	lea	ecx, DWORD PTR [ebx-1]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ebx, DWORD PTR [edi+ecx*4]
	mov	edi, edx
	mov	DWORD PTR tv22898[ebp], ebx
	inc	esi
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edi*4], esi
	lea	edi, DWORD PTR [edx*4-4]
	mov	eax, DWORD PTR [ebx]
	inc	esi
	add	edx, -2					; fffffffeH
	mov	DWORD PTR tv22345[ebp], edi
	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR [edi+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ebx]
	mov	ebx, DWORD PTR tv22715[ebp]
	mov	edi, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+ebx-4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2229 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN441@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN441@cub_9

; 2230 : 					//zzHOR_33(table, &i, &j, &k);
; 2231 : 
; 2232 : 					i = i - 9;
; 2233 : 
; 2234 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR tv22898[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22715[ebp]

; 2235 : 					table[j][k++] = 0;
; 2236 : 					table[j++][k] = 0;
; 2237 : 					table[j][k--] = 0;
; 2238 : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR tv22345[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx-4], 0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _k$156$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$147$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$147$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], 0

; 2239 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$147$[ebp]

; 2240 : 					table[j][k++] = 0;
; 2241 : 					table[j][k++] = 0;
; 2242 : 					table[j][k] = 0;
; 2243 : 
; 2244 : 					j++;
; 2245 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx-4], 0
	mov	eax, DWORD PTR tv22707[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+ecx-4], 0
	mov	eax, DWORD PTR tv22707[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv22707[ebp]
	mov	eax, DWORD PTR [edi+eax*4-4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR tv21817[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$182$[ebp], eax
	jmp	SHORT $LN611@cub_9
$LN441@cub_9:

; 2246 : 				}
; 2247 : 			}
; 2248 : 			if (table[0][n - 1] != n * n && flag == 39 && j != n - 1 && table[j + 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN611@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN500@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN224@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv22719[ebp], eax
	mov	DWORD PTR tv21811[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _k$158$[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN226@cub_9
	cmp	DWORD PTR _flag$[ebp], 39		; 00000027H
	jne	$LN226@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	DWORD PTR _j$182$[ebp], eax
	je	$LN226@cub_9
	mov	eax, DWORD PTR _j$182$[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN226@cub_9

; 2249 : 				j++;
; 2250 : 				//zzHOR_4(table, &i, &j, &k);
; 2251 : 
; 2252 : 				table[j][k--] = i++;

	mov	ebx, DWORD PTR tv22719[ebp]

; 2253 : 				table[j][k--] = i++;

	lea	ecx, DWORD PTR [edx*4-4]

; 2254 : 				table[j++][k] = i++;
; 2255 : 				table[j][k++] = i++;
; 2256 : 				table[j][k++] = i++;
; 2257 : 				table[j++][k] = i++;
; 2258 : 				table[j][k--] = i++;
; 2259 : 				table[j][k--] = i++;
; 2260 : 				table[j][k] = i++;
; 2261 : 
; 2262 : 				*sum -= 9;
; 2263 : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR tv22729[ebp], ecx
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [edi+ebx*4+4]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4+4]
	add	ebx, 2
	mov	DWORD PTR _j$148$[ebp], ebx
	mov	DWORD PTR [ecx+eax-4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+ecx-4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [ecx+eax], esi
	mov	ecx, edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR [eax+ecx*4], esi
	lea	ecx, DWORD PTR [ebx+1]
	mov	eax, DWORD PTR [edi+ecx*4]
	lea	ebx, DWORD PTR [edi+ecx*4]
	mov	edi, edx
	mov	DWORD PTR tv22895[ebp], ebx
	inc	esi
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edi*4], esi
	lea	edi, DWORD PTR [edx*4-4]
	mov	eax, DWORD PTR [ebx]
	inc	esi
	add	edx, -2					; fffffffeH
	mov	DWORD PTR tv22727[ebp], edi
	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR [edi+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ebx]
	mov	ebx, DWORD PTR tv22729[ebp]
	mov	edi, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+ebx-4], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2264 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN440@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN440@cub_9

; 2265 : 					//zzHOR_44(table, &i, &j, &k);
; 2266 : 
; 2267 : 					i = i - 9;
; 2268 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR tv22895[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22729[ebp]

; 2269 : 					table[j][k++] = 0;
; 2270 : 					table[j--][k] = 0;
; 2271 : 					table[j][k--] = 0;
; 2272 : 					table[j][k--] = 0;

	mov	ebx, DWORD PTR tv22727[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx-4], 0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _k$158$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$148$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR _j$148$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], 0

; 2273 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR _j$148$[ebp]

; 2274 : 					table[j][k++] = 0;
; 2275 : 					table[j][k++] = 0;
; 2276 : 					table[j][k] = 0;
; 2277 : 
; 2278 : 					*sum += 9;

	mov	ebx, DWORD PTR _sum$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx-4], 0
	mov	eax, DWORD PTR tv22719[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+ecx-4], 0
	mov	eax, DWORD PTR tv22719[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR tv22719[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	mov	DWORD PTR [eax+edx*4], 0

; 2279 : 					j--;

	mov	eax, DWORD PTR tv21811[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$182$[ebp], eax
	jmp	SHORT $LN593@cub_9
$LN440@cub_9:

; 2280 : 				}
; 2281 : 			}
; 2282 : 			if (table[0][n - 1] != n * n && flag == 23 && k != n - 1 && table[j][k + 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN593@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN226@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR _j$150$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22733[ebp], edx
	mov	DWORD PTR tv21805[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN469@cub_9
	cmp	DWORD PTR _flag$[ebp], 23		; 00000017H
	jne	$LN469@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	edx, eax
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN228@cub_9
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4+4], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN228@cub_9

; 2283 : 				k++;
; 2284 : 				//zzVER_1(table, &i, &j, &k);
; 2285 : 
; 2286 : 				table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+eax*4]

; 2287 : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR _j$182$[ebp]

; 2288 : 				table[j][k++] = i++;
; 2289 : 				table[j--][k] = i++;
; 2290 : 				table[j--][k] = i++;
; 2291 : 				table[j][k++] = i++;
; 2292 : 				table[j++][k] = i++;
; 2293 : 				table[j++][k] = i++;
; 2294 : 				table[j][k] = i++;
; 2295 : 
; 2296 : 				*sum -= 9;
; 2297 : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	lea	ecx, DWORD PTR [ecx*4+4]
	mov	eax, DWORD PTR [ecx+edi]
	push	DWORD PTR _J$[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR _j$150$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+8], esi
	add	edx, 3
	inc	esi
	mov	DWORD PTR _k$194$[ebp], edx
	push	edx
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22208[ebp], eax
	mov	eax, DWORD PTR _j$150$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$182$[ebp]
	add	DWORD PTR _j$182$[ebp], 2
	inc	eax
	push	DWORD PTR _j$182$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22741[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv23380[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2298 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN438@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN438@cub_9

; 2299 : 					//zzVER_11(table, &i, &j, &k);
; 2300 : 
; 2301 : 					i = i - 9;
; 2302 : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv23380[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22208[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax], 0

; 2303 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 2304 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR _j$150$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 2305 : 					table[j++][k] = 0;

	mov	edx, DWORD PTR tv22733[ebp]
	mov	eax, DWORD PTR _j$150$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 2306 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22741[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4+8], 0

; 2307 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 2308 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2309 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR _j$150$[ebp]
	mov	DWORD PTR _j$182$[ebp], eax

; 2310 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2311 : 
; 2312 : 					*sum += 9;

	add	DWORD PTR [ebx], 9

; 2313 : 					k--;

	mov	edx, DWORD PTR tv21805[ebp]
	jmp	SHORT $LN602@cub_9
$LN438@cub_9:

; 2314 : 				}
; 2315 : 			}
; 2316 : 			if (table[0][n - 1] != n * n && flag == 49 && k != n - 1 && table[j][k + 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN602@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN469@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN228@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR _j$152$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22743[ebp], edx
	mov	DWORD PTR tv21797[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN472@cub_9
	cmp	DWORD PTR _flag$[ebp], 49		; 00000031H
	jne	$LN472@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	edx, eax
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN230@cub_9
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4+4], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN230@cub_9

; 2317 : 				k++;
; 2318 : 				//zzVER_2(table, &i, &j, &k);
; 2319 : 
; 2320 : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+eax*4]

; 2321 : 				table[j--][k] = i++;

	mov	ecx, DWORD PTR _j$182$[ebp]

; 2322 : 				table[j][k++] = i++;
; 2323 : 				table[j++][k] = i++;
; 2324 : 				table[j++][k] = i++;
; 2325 : 				table[j][k++] = i++;
; 2326 : 				table[j--][k] = i++;
; 2327 : 				table[j--][k] = i++;
; 2328 : 				table[j][k] = i++;
; 2329 : 
; 2330 : 				*sum -= 9;
; 2331 : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	lea	ecx, DWORD PTR [ecx*4-4]
	mov	eax, DWORD PTR [ecx+edi]
	push	DWORD PTR _J$[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi
	mov	eax, DWORD PTR _j$152$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+8], esi
	add	edx, 3
	inc	esi
	mov	DWORD PTR _k$194$[ebp], edx
	push	edx
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22202[ebp], eax
	mov	eax, DWORD PTR _j$152$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$182$[ebp]
	add	DWORD PTR _j$182$[ebp], -2		; fffffffeH
	dec	eax
	push	DWORD PTR _j$182$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22753[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv23378[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2332 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN436@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN436@cub_9

; 2333 : 					//zzVER_22(table, &i, &j, &k);
; 2334 : 
; 2335 : 					i = i - 9;
; 2336 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv23378[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22202[ebp]
	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [edx+eax], 0

; 2337 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 2338 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR _j$152$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 2339 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR tv22743[ebp]
	mov	eax, DWORD PTR _j$152$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 2340 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22753[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4+8], 0

; 2341 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4+8], 0

; 2342 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2343 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR _j$152$[ebp]
	mov	DWORD PTR _j$182$[ebp], eax

; 2344 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2345 : 
; 2346 : 					*sum += 9;

	add	DWORD PTR [ebx], 9

; 2347 : 					k--;

	mov	edx, DWORD PTR tv21797[ebp]
	jmp	SHORT $LN603@cub_9
$LN436@cub_9:

; 2348 : 				}
; 2349 : 			}
; 2350 : 			if (table[0][n - 1] != n * n && flag == 47 && k != 0 && table[j][k - 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN603@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN472@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN230@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR _j$154$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22757[ebp], edx
	mov	DWORD PTR tv21790[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN232@cub_9
	cmp	DWORD PTR _flag$[ebp], 47		; 0000002fH
	jne	$LN232@cub_9
	test	edx, edx
	je	$LN232@cub_9
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4-4], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN232@cub_9

; 2351 : 				k--;
; 2352 : 				//zzVER_3(table, &i, &j, &k);
; 2353 : 
; 2354 : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+eax*4]

; 2355 : 				table[j--][k] = i++;

	mov	ecx, DWORD PTR _j$182$[ebp]

; 2356 : 				table[j][k--] = i++;
; 2357 : 				table[j++][k] = i++;
; 2358 : 				table[j++][k] = i++;
; 2359 : 				table[j][k--] = i++;
; 2360 : 				table[j--][k] = i++;
; 2361 : 				table[j--][k] = i++;
; 2362 : 				table[j][k] = i++;
; 2363 : 
; 2364 : 				*sum -= 9;
; 2365 : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	lea	ecx, DWORD PTR [ecx*4-4]
	mov	eax, DWORD PTR [ecx+edi]
	push	DWORD PTR _J$[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$154$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	add	edx, -3					; fffffffdH
	inc	esi
	mov	DWORD PTR _k$194$[ebp], edx
	push	edx
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22196[ebp], eax
	mov	eax, DWORD PTR _j$154$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$182$[ebp]
	add	DWORD PTR _j$182$[ebp], -2		; fffffffeH
	dec	eax
	push	DWORD PTR _j$182$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22357[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv23376[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi-4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2366 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN434@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN434@cub_9

; 2367 : 					//zzVER_33(table, &i, &j, &k);
; 2368 : 
; 2369 : 					i = i - 9;
; 2370 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv23376[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22196[ebp]
	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [edx+eax], 0

; 2371 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 2372 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$154$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 2373 : 					table[j--][k] = 0;

	mov	edx, DWORD PTR tv22757[ebp]
	mov	eax, DWORD PTR _j$154$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 2374 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22357[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4-8], 0

; 2375 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 2376 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2377 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR _j$154$[ebp]
	mov	DWORD PTR _j$182$[ebp], eax

; 2378 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2379 : 
; 2380 : 					*sum += 9;

	add	DWORD PTR [ebx], 9

; 2381 : 					k++;

	mov	edx, DWORD PTR tv21790[ebp]
	jmp	SHORT $LN604@cub_9
$LN434@cub_9:

; 2382 : 				}
; 2383 : 			}
; 2384 : 			if (table[0][n - 1] != n * n && flag == 21 && k != 0 && table[j][k - 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN604@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	eax, DWORD PTR _j$182$[ebp]
$LN232@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR _j$156$[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv22769[ebp], edx
	mov	DWORD PTR tv21783[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN234@cub_9
	cmp	DWORD PTR _flag$[ebp], 21		; 00000015H
	jne	$LN234@cub_9
	test	edx, edx
	je	$LN234@cub_9
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4-4], 0
	mov	ebx, DWORD PTR _sum$[ebp]
	jne	$LN234@cub_9

; 2385 : 				k--;
; 2386 : 				//zzVER_4(table, &i, &j, &k);
; 2387 : 
; 2388 : 				table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+eax*4]

; 2389 : 				table[j++][k] = i++;

	mov	ecx, DWORD PTR _j$182$[ebp]

; 2390 : 				table[j][k--] = i++;
; 2391 : 				table[j--][k] = i++;
; 2392 : 				table[j--][k] = i++;
; 2393 : 				table[j][k--] = i++;
; 2394 : 				table[j++][k] = i++;
; 2395 : 				table[j++][k] = i++;
; 2396 : 				table[j][k] = i++;
; 2397 : 
; 2398 : 				*sum -= 9;
; 2399 : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	lea	ecx, DWORD PTR [ecx*4+4]
	mov	eax, DWORD PTR [ecx+edi]
	push	DWORD PTR _J$[ebp]
	push	DWORD PTR _I$[ebp]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	push	0
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR [eax+edx*4-8], esi
	inc	esi
	mov	eax, DWORD PTR _j$156$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], esi
	add	edx, -3					; fffffffdH
	inc	esi
	mov	DWORD PTR _k$194$[ebp], edx
	push	edx
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22190[ebp], eax
	mov	eax, DWORD PTR _j$156$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$182$[ebp]
	add	DWORD PTR _j$182$[ebp], 2
	inc	eax
	push	DWORD PTR _j$182$[ebp]
	lea	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv21653[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [ecx+edi]
	mov	DWORD PTR tv23374[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [ecx+edi+4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2400 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN432@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN432@cub_9

; 2401 : 					//zzVER_44(table, &i, &j, &k);
; 2402 : 
; 2403 : 					i = i - 9;
; 2404 : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv23374[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22190[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax], 0

; 2405 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 2406 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR _j$156$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [edx+eax], 0

; 2407 : 					table[j++][k] = 0;

	mov	edx, DWORD PTR tv22769[ebp]
	mov	eax, DWORD PTR _j$156$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 2408 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv21653[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4-8], 0

; 2409 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4-8], 0

; 2410 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2411 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR _j$156$[ebp]
	mov	DWORD PTR _j$182$[ebp], eax

; 2412 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2413 : 
; 2414 : 					*sum += 9;

	add	DWORD PTR [ebx], 9

; 2415 : 					k++;

	mov	edx, DWORD PTR tv21783[ebp]
	jmp	SHORT $LN605@cub_9
$LN432@cub_9:

; 2416 : 				}
; 2417 : 			}
; 2418 : 
; 2419 : 			//обходные 
; 2420 : 			if (table[0][n - 1] != n * n && flag == 49 && k != n - 1 && table[j][k + 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN605@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	eax, DWORD PTR _j$182$[ebp]
$LN234@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21771[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21769[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN481@cub_9
	cmp	DWORD PTR _flag$[ebp], 49		; 00000031H
	jne	$LN481@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	edx, eax
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN236@cub_9
	lea	ebx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22874[ebp], ebx
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4+4], 0
	jne	$LN236@cub_9

; 2421 : 				k++;

	inc	edx

; 2422 : 				//o_1(table, &i, &j, &k);
; 2423 : 
; 2424 : 				table[j][k++] = i++;

	mov	eax, ebx
	lea	ecx, DWORD PTR [edx*4]

; 2425 : 				table[j][k++] = i++;
; 2426 : 				table[j--][k] = i++;
; 2427 : 				table[j--][k] = i++;
; 2428 : 				table[j][k--] = i++;
; 2429 : 				table[j++][k] = i++;
; 2430 : 				table[j][k--] = i++;

	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR tv23368[ebp], ecx

; 2431 : 				table[j--][k] = i++;
; 2432 : 				table[j][k] = i++;
; 2433 : 
; 2434 : 				*sum -= 9;
; 2435 : 				int result = cub_9(table, 11, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+ecx], esi
	lea	eax, DWORD PTR [edx+1]
	mov	ecx, DWORD PTR tv22874[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$166$[ebp], eax
	inc	esi
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _k$166$[ebp]
	mov	ebx, DWORD PTR _k$166$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$182$[ebp]
	dec	ecx
	mov	DWORD PTR _j$159$[ebp], ecx
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23372[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx-1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$182$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	lea	ebx, DWORD PTR [edx*4]
	mov	DWORD PTR tv22178[ebp], ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$159$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$159$[ebp]
	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22868[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	11					; 0000000bH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2436 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN430@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN430@cub_9

; 2437 : 					//o_11(table, &i, &j, &k);
; 2438 : 
; 2439 : 					i = i - 9;
; 2440 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22868[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22178[ebp]

; 2441 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$159$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 2442 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$166$[ebp]

; 2443 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2444 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 2445 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv21771[ebp]
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR tv23372[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2446 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2447 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2448 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv23368[ebp]

; 2449 : 
; 2450 : 					*sum += 9;
; 2451 : 					k--;

	mov	edx, DWORD PTR tv21769[ebp]
	mov	DWORD PTR [ecx+eax], 0
	add	DWORD PTR [ebx], 9
	jmp	SHORT $LN606@cub_9
$LN430@cub_9:

; 2452 : 				}
; 2453 : 			}
; 2454 : 			if (table[0][n - 1] != n * n && flag == 47 && k != 0 && table[j][k - 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN606@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN481@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN236@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21760[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21758[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN238@cub_9
	cmp	DWORD PTR _flag$[ebp], 47		; 0000002fH
	jne	$LN238@cub_9
	test	edx, edx
	je	$LN238@cub_9
	lea	ebx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22860[ebp], ebx
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4-4], 0
	jne	$LN238@cub_9

; 2455 : 				k--;

	dec	edx

; 2456 : 				//o_2(table, &i, &j, &k);
; 2457 : 
; 2458 : 				table[j][k--] = i++;

	mov	eax, ebx
	lea	ecx, DWORD PTR [edx*4]

; 2459 : 				table[j][k--] = i++;
; 2460 : 				table[j--][k] = i++;
; 2461 : 				table[j--][k] = i++;
; 2462 : 				table[j][k++] = i++;
; 2463 : 				table[j++][k] = i++;
; 2464 : 				table[j][k++] = i++;

	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR tv23362[ebp], ecx

; 2465 : 				table[j--][k] = i++;
; 2466 : 				table[j][k] = i++;
; 2467 : 
; 2468 : 				*sum -= 9;
; 2469 : 				int result = cub_9(table, 33, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+ecx], esi
	lea	eax, DWORD PTR [edx-1]
	mov	ecx, DWORD PTR tv22860[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$171$[ebp], eax
	inc	esi
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _k$171$[ebp]
	mov	ebx, DWORD PTR _k$171$[ebp]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$182$[ebp]
	dec	ecx
	mov	DWORD PTR _j$163$[ebp], ecx
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23366[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	lea	eax, DWORD PTR [ecx-1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$182$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	lea	ebx, DWORD PTR [edx*4]
	mov	DWORD PTR tv22164[ebp], ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$163$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$163$[ebp]
	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22854[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	33					; 00000021H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2470 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN428@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN428@cub_9

; 2471 : 					//o_22(table, &i, &j, &k);
; 2472 : 
; 2473 : 					i = i - 9;
; 2474 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv22854[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22164[ebp]

; 2475 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$163$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 2476 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$171$[ebp]

; 2477 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2478 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 2479 : 					table[j++][k] = 0;

	mov	ecx, DWORD PTR tv21760[ebp]
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR tv23366[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2480 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2481 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2482 : 
; 2483 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv23362[ebp]

; 2484 : 
; 2485 : 					*sum += 9;
; 2486 : 					k++;

	mov	edx, DWORD PTR tv21758[ebp]
	mov	DWORD PTR [ecx+eax], 0
	add	DWORD PTR [ebx], 9
	jmp	SHORT $LN607@cub_9
$LN428@cub_9:

; 2487 : 				}
; 2488 : 			}
; 2489 : 			if (table[0][n - 1] != n * n && flag == 33 && j != 0 && table[j - 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN607@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	eax, DWORD PTR _j$182$[ebp]
$LN238@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21745[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21748[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN240@cub_9
	cmp	DWORD PTR _flag$[ebp], 33		; 00000021H
	jne	$LN240@cub_9
	test	eax, eax
	je	$LN240@cub_9
	mov	eax, DWORD PTR [edi+eax*4-4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN491@cub_9

; 2490 : 				j--;

	mov	ecx, DWORD PTR _j$182$[ebp]
	dec	ecx
	mov	DWORD PTR _j$182$[ebp], ecx

; 2491 : 				//o_3(table, &i, &j, &k);
; 2492 : 
; 2493 : 				table[j--][k] = i++;
; 2494 : 				table[j--][k] = i++;
; 2495 : 				table[j][k--] = i++;
; 2496 : 				table[j][k--] = i++;
; 2497 : 				table[j++][k] = i++;
; 2498 : 				table[j][k++] = i++;
; 2499 : 				table[j++][k] = i++;
; 2500 : 				table[j][k--] = i++;
; 2501 : 				table[j][k] = i++;
; 2502 : 
; 2503 : 				*sum -= 9;
; 2504 : 				int result = cub_9(table, 47, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	dec	ecx
	mov	DWORD PTR tv23356[ebp], eax
	lea	ebx, DWORD PTR [ecx-1]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR _j$168$[ebp], ecx
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR _j$169$[ebp], ebx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23358[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+edx*4], esi
	dec	edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR _k$175$[ebp], edx
	lea	ecx, DWORD PTR [edx*4]
	mov	DWORD PTR [ecx+eax], esi
	lea	eax, DWORD PTR [edx-1]
	mov	edx, eax
	mov	DWORD PTR tv23360[ebp], ecx
	lea	ecx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$194$[ebp], edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	ebx, DWORD PTR _k$175$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$168$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$168$[ebp]
	mov	ecx, DWORD PTR _k$175$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	DWORD PTR _j$182$[ebp], ecx
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22842[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	inc	esi
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv22150[ebp], eax
	mov	eax, DWORD PTR [edi+ecx*4]
	push	edx
	push	ecx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	47					; 0000002fH
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2505 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN425@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN425@cub_9

; 2506 : 					//o_33(table, &i, &j, &k);
; 2507 : 
; 2508 : 					i = i - 9;
; 2509 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv22842[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22150[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 2510 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _k$175$[ebp]

; 2511 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$168$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2512 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$194$[ebp]

; 2513 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$169$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 2514 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR tv23360[ebp]
	mov	edx, DWORD PTR tv21748[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 2515 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$169$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2516 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv23358[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], 0

; 2517 : 					table[j][k] = 0;

	mov	eax, DWORD PTR tv23356[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], 0

; 2518 : 
; 2519 : 					*sum += 9;
; 2520 : 					j++;

	mov	eax, DWORD PTR tv21745[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$182$[ebp], eax
	jmp	SHORT $LN612@cub_9
$LN425@cub_9:

; 2521 : 				}
; 2522 : 			}
; 2523 : 			if (table[0][n - 1] != n * n && flag == 39 && j != n - 1 && table[j + 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN612@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN491@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN240@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21735[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21737[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN242@cub_9
	cmp	DWORD PTR _flag$[ebp], 39		; 00000027H
	jne	$LN242@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	DWORD PTR _j$182$[ebp], eax
	je	$LN242@cub_9
	mov	eax, DWORD PTR _j$182$[ebp]
	mov	eax, DWORD PTR [edi+eax*4+4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN242@cub_9

; 2524 : 				j++;

	mov	ecx, DWORD PTR _j$182$[ebp]
	inc	ecx
	mov	DWORD PTR _j$182$[ebp], ecx

; 2525 : 				//o_4(table, &i, &j, &k);
; 2526 : 
; 2527 : 				table[j++][k] = i++;
; 2528 : 				table[j++][k] = i++;
; 2529 : 				table[j][k--] = i++;
; 2530 : 				table[j][k--] = i++;
; 2531 : 				table[j--][k] = i++;
; 2532 : 				table[j][k++] = i++;
; 2533 : 				table[j--][k] = i++;
; 2534 : 				table[j][k--] = i++;
; 2535 : 				table[j][k] = i++;
; 2536 : 
; 2537 : 				*sum -= 9;
; 2538 : 				int result = cub_9(table, 21, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	inc	ecx
	mov	DWORD PTR tv23350[ebp], eax
	lea	ebx, DWORD PTR [ecx+1]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR _j$173$[ebp], ecx
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR _j$174$[ebp], ebx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23352[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+edx*4], esi
	dec	edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR _k$179$[ebp], edx
	lea	ecx, DWORD PTR [edx*4]
	mov	DWORD PTR [ecx+eax], esi
	lea	eax, DWORD PTR [edx-1]
	mov	edx, eax
	mov	DWORD PTR tv23354[ebp], ecx
	lea	ecx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$194$[ebp], edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	ebx, DWORD PTR _k$179$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$173$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$173$[ebp]
	mov	ecx, DWORD PTR _k$179$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	DWORD PTR _j$182$[ebp], ecx
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22832[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	inc	esi
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv22134[ebp], eax
	mov	eax, DWORD PTR [edi+ecx*4]
	push	edx
	push	ecx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	21					; 00000015H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2539 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN424@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN424@cub_9

; 2540 : 					//o_44(table, &i, &j, &k);
; 2541 : 
; 2542 : 					i = i - 9;
; 2543 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR tv22832[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22134[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 2544 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _k$179$[ebp]

; 2545 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$173$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2546 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$194$[ebp]

; 2547 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$174$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 2548 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR tv23354[ebp]
	mov	edx, DWORD PTR tv21737[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 2549 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR _j$174$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2550 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv23352[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], 0

; 2551 : 					table[j][k] = 0;

	mov	eax, DWORD PTR tv23350[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], 0

; 2552 : 
; 2553 : 					*sum += 9;
; 2554 : 					j--;

	mov	eax, DWORD PTR tv21735[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$182$[ebp], eax
	jmp	SHORT $LN594@cub_9
$LN424@cub_9:

; 2555 : 				}
; 2556 : 			}
; 2557 : 			if (table[0][n - 1] != n * n && flag == 23 && k != n - 1 && table[j][k + 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN594@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN242@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21727[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21724[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN487@cub_9
	cmp	DWORD PTR _flag$[ebp], 23		; 00000017H
	jne	$LN487@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	dec	eax
	cmp	edx, eax
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN244@cub_9
	lea	ebx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22826[ebp], ebx
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4+4], 0
	jne	$LN244@cub_9

; 2558 : 				k++;

	inc	edx

; 2559 : 				//o_5(table, &i, &j, &k);
; 2560 : 
; 2561 : 				table[j][k++] = i++;

	mov	eax, ebx
	lea	ecx, DWORD PTR [edx*4]

; 2562 : 				table[j][k++] = i++;
; 2563 : 				table[j++][k] = i++;
; 2564 : 				table[j++][k] = i++;
; 2565 : 				table[j][k--] = i++;
; 2566 : 				table[j--][k] = i++;
; 2567 : 				table[j][k--] = i++;

	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR tv23344[ebp], ecx

; 2568 : 				table[j++][k] = i++;
; 2569 : 				table[j][k] = i++;
; 2570 : 
; 2571 : 				*sum -= 9;
; 2572 : 				int result = cub_9(table, 17, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+ecx], esi
	lea	eax, DWORD PTR [edx+1]
	mov	ecx, DWORD PTR tv22826[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$184$[ebp], eax
	inc	esi
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _k$184$[ebp]
	mov	ebx, DWORD PTR _k$184$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$182$[ebp]
	inc	ecx
	mov	DWORD PTR _j$177$[ebp], ecx
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23348[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4+4], esi
	lea	eax, DWORD PTR [ecx+1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$182$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4+4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	lea	ebx, DWORD PTR [edx*4]
	mov	DWORD PTR tv22118[ebp], ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$177$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$177$[ebp]
	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22820[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	17					; 00000011H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2573 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN422@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN422@cub_9

; 2574 : 					//o_55(table, &i, &j, &k);
; 2575 : 
; 2576 : 					i = i - 9;
; 2577 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22820[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22118[ebp]

; 2578 : 					table[j][k++] = 0;

	mov	edx, DWORD PTR _j$177$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 2579 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$184$[ebp]

; 2580 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2581 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 2582 : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv21727[ebp]
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edx*4+4], 0
	mov	eax, DWORD PTR tv23348[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2583 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4+4], 0

; 2584 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2585 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv23344[ebp]

; 2586 : 
; 2587 : 					*sum += 9;
; 2588 : 					k--;

	mov	edx, DWORD PTR tv21724[ebp]
	mov	DWORD PTR [ecx+eax], 0
	add	DWORD PTR [ebx], 9
	jmp	SHORT $LN608@cub_9
$LN422@cub_9:

; 2589 : 				}
; 2590 : 			}
; 2591 : 			if (table[0][n - 1] != n * n && flag == 21 && k != 0 && table[j][k - 1] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN608@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN487@cub_9:
	mov	eax, DWORD PTR _j$182$[ebp]
$LN244@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21716[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21714[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	eax, DWORD PTR _j$182$[ebp]
	je	$LN246@cub_9
	cmp	DWORD PTR _flag$[ebp], 21		; 00000015H
	jne	$LN246@cub_9
	test	edx, edx
	je	$LN246@cub_9
	lea	ebx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR tv22812[ebp], ebx
	mov	ebx, DWORD PTR [edi+eax*4]
	cmp	DWORD PTR [ebx+edx*4-4], 0
	jne	$LN246@cub_9

; 2592 : 				k--;

	dec	edx

; 2593 : 				//o_6(table, &i, &j, &k);
; 2594 : 
; 2595 : 				table[j][k--] = i++;

	mov	eax, ebx
	lea	ecx, DWORD PTR [edx*4]

; 2596 : 				table[j][k--] = i++;
; 2597 : 				table[j++][k] = i++;
; 2598 : 				table[j++][k] = i++;
; 2599 : 				table[j][k++] = i++;
; 2600 : 				table[j--][k] = i++;
; 2601 : 				table[j][k++] = i++;

	mov	DWORD PTR _k$194$[ebp], edx
	mov	DWORD PTR tv23338[ebp], ecx

; 2602 : 				table[j++][k] = i++;
; 2603 : 				table[j][k] = i++;
; 2604 : 
; 2605 : 				*sum -= 9;
; 2606 : 				int result = cub_9(table, 39, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR [eax+ecx], esi
	lea	eax, DWORD PTR [edx-1]
	mov	ecx, DWORD PTR tv22812[ebp]
	lea	ebx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$189$[ebp], eax
	inc	esi
	push	DWORD PTR _J$[ebp]
	mov	eax, DWORD PTR [ecx]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _k$189$[ebp]
	mov	ebx, DWORD PTR _k$189$[ebp]
	mov	DWORD PTR [eax+ecx*4-4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$182$[ebp]
	inc	ecx
	mov	DWORD PTR _j$181$[ebp], ecx
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23342[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+ebx*4-4], esi
	lea	eax, DWORD PTR [ecx+1]
	lea	ecx, DWORD PTR [edi+eax*4]
	mov	DWORD PTR _j$182$[ebp], eax
	mov	eax, DWORD PTR [ecx]
	inc	esi
	mov	DWORD PTR [eax+ebx*4-4], esi
	inc	esi
	mov	eax, DWORD PTR [ecx]
	mov	ecx, ebx
	lea	ebx, DWORD PTR [edx*4]
	mov	DWORD PTR tv22104[ebp], ebx
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$181$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR _j$181$[ebp]
	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ebx+eax], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22806[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx+eax], esi
	inc	esi
	mov	ebx, DWORD PTR _sum$[ebp]
	push	ebx
	push	DWORD PTR _n$[ebp]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	edx
	push	ecx
	push	esi
	push	39					; 00000027H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2607 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN420@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN420@cub_9

; 2608 : 					//o_66(table, &i, &j, &k);
; 2609 : 
; 2610 : 					i = i - 9;
; 2611 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR tv22806[ebp]
	sub	esi, 9
	mov	ecx, DWORD PTR tv22104[ebp]

; 2612 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$181$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+eax], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [ecx+eax], 0

; 2613 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	edx, DWORD PTR _k$189$[ebp]

; 2614 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2615 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]

; 2616 : 					table[j--][k] = 0;

	mov	ecx, DWORD PTR tv21716[ebp]
	mov	DWORD PTR _j$182$[ebp], ecx
	mov	DWORD PTR [eax+edx*4-4], 0
	mov	eax, DWORD PTR tv23342[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2617 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4-4], 0

; 2618 : 					table[j][k++] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2619 : 					table[j][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR tv23338[ebp]

; 2620 : 
; 2621 : 					*sum += 9;
; 2622 : 					k++;

	mov	edx, DWORD PTR tv21714[ebp]
	mov	DWORD PTR [ecx+eax], 0
	add	DWORD PTR [ebx], 9
	jmp	SHORT $LN609@cub_9
$LN420@cub_9:

; 2623 : 				}
; 2624 : 			}
; 2625 : 			if (table[0][n - 1] != n * n && flag == 11 && j != 0 && table[j - 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN609@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	eax, DWORD PTR _j$182$[ebp]
$LN246@cub_9:
	mov	ebx, DWORD PTR tv23479[ebp]
	mov	DWORD PTR tv21704[ebp], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR tv21706[ebp], edx
	cmp	DWORD PTR [eax+ecx-4], ebx
	je	$LN248@cub_9
	cmp	DWORD PTR _flag$[ebp], 11		; 0000000bH
	jne	$LN248@cub_9
	mov	eax, DWORD PTR _j$182$[ebp]
	test	eax, eax
	je	$LN248@cub_9
	mov	eax, DWORD PTR [edi+eax*4-4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN248@cub_9

; 2626 : 				j--;

	mov	ecx, DWORD PTR _j$182$[ebp]
	dec	ecx
	mov	DWORD PTR _j$182$[ebp], ecx

; 2627 : 				//o_7(table, &i, &j, &k);
; 2628 : 
; 2629 : 				table[j--][k] = i++;
; 2630 : 				table[j--][k] = i++;
; 2631 : 				table[j][k++] = i++;
; 2632 : 				table[j][k++] = i++;
; 2633 : 				table[j++][k] = i++;
; 2634 : 				table[j][k--] = i++;
; 2635 : 				table[j++][k] = i++;
; 2636 : 				table[j][k++] = i++;
; 2637 : 				table[j][k] = i++;
; 2638 : 
; 2639 : 				*sum -= 9;
; 2640 : 				int result = cub_9(table, 49, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	lea	eax, DWORD PTR [ecx*4]
	dec	ecx
	mov	DWORD PTR tv23332[ebp], eax
	lea	ebx, DWORD PTR [ecx-1]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR _j$186$[ebp], ecx
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR _j$187$[ebp], ebx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	lea	eax, DWORD PTR [ecx*4]
	mov	DWORD PTR tv23334[ebp], eax
	mov	eax, DWORD PTR [eax+edi]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+edx*4], esi
	inc	edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	DWORD PTR _k$193$[ebp], edx
	lea	ecx, DWORD PTR [edx*4]
	mov	DWORD PTR [ecx+eax], esi
	lea	eax, DWORD PTR [edx+1]
	mov	edx, eax
	mov	DWORD PTR tv23336[ebp], ecx
	lea	ecx, DWORD PTR [eax*4]
	mov	DWORD PTR _k$194$[ebp], edx
	mov	eax, DWORD PTR [edi+ebx*4]
	inc	esi
	mov	ebx, DWORD PTR _k$193$[ebp]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$186$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [ecx+eax], esi
	inc	esi
	mov	eax, DWORD PTR _j$186$[ebp]
	mov	ecx, DWORD PTR _k$193$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _j$182$[ebp]
	mov	DWORD PTR _j$182$[ebp], ecx
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22794[ebp], eax
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+ebx*4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	ebx, DWORD PTR _sum$[ebp]
	inc	esi
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR tv22090[ebp], eax
	mov	eax, DWORD PTR [edi+ecx*4]
	push	edx
	push	ecx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	esi
	push	49					; 00000031H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2641 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN418@cub_9
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR tv22381[ebp]
	mov	ecx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+edx-4], ecx
	je	$LN418@cub_9

; 2642 : 					//o_77(table, &i, &j, &k);
; 2643 : 
; 2644 : 					i = i - 9;
; 2645 : 					table[j][k--] = 0;

	mov	ecx, DWORD PTR tv22794[ebp]
	sub	esi, 9
	mov	edx, DWORD PTR tv22090[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax], 0

; 2646 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _k$193$[ebp]

; 2647 : 					table[j][k++] = 0;

	mov	ecx, DWORD PTR _j$186$[ebp]
	mov	DWORD PTR [eax+edx*4], 0
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2648 : 					table[j--][k] = 0;

	mov	eax, DWORD PTR [edi+ecx*4]
	mov	ecx, DWORD PTR _k$194$[ebp]

; 2649 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR _j$187$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0

; 2650 : 					table[j][k--] = 0;

	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR tv23336[ebp]
	mov	edx, DWORD PTR tv21706[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 2651 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR _j$187$[ebp]
	mov	eax, DWORD PTR [edi+eax*4]
	mov	DWORD PTR [eax+edx*4], 0

; 2652 : 					table[j++][k] = 0;

	mov	eax, DWORD PTR tv23334[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], 0

; 2653 : 					table[j][k] = 0;

	mov	eax, DWORD PTR tv23332[ebp]
	mov	eax, DWORD PTR [eax+edi]
	mov	DWORD PTR [eax+edx*4], 0

; 2654 : 
; 2655 : 					*sum += 9;
; 2656 : 					j++;

	mov	eax, DWORD PTR tv21704[ebp]
	add	DWORD PTR [ebx], 9
	mov	DWORD PTR _j$182$[ebp], eax
	jmp	SHORT $LN595@cub_9
$LN418@cub_9:

; 2657 : 				}
; 2658 : 			}
; 2659 : 			if (table[0][n - 1] != n * n && flag == 17 && j != n - 1 && table[j + 1][k] == 0) {

	mov	edx, DWORD PTR _k$194$[ebp]
$LN595@cub_9:
	mov	ecx, DWORD PTR tv22381[ebp]
$LN248@cub_9:
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+ecx-4], ebx
	mov	ebx, DWORD PTR _sum$[ebp]
	je	$LN253@cub_9
	cmp	DWORD PTR _flag$[ebp], 17		; 00000011H
	jne	$LN253@cub_9
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _j$182$[ebp]
	dec	eax
	cmp	ecx, eax
	je	$LN253@cub_9
	mov	eax, DWORD PTR [edi+ecx*4+4]
	cmp	DWORD PTR [eax+edx*4], 0
	jne	$LN253@cub_9

; 2660 : 				j++;
; 2661 : 				//o_8(table, &i, &j, &k);
; 2662 : 
; 2663 : 				table[j++][k] = i++;

	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 2664 : 				table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ecx*4+8]
	add	ecx, 3

; 2665 : 				table[j][k++] = i++;
; 2666 : 				table[j][k++] = i++;
; 2667 : 				table[j--][k] = i++;
; 2668 : 				table[j][k--] = i++;
; 2669 : 				table[j--][k] = i++;
; 2670 : 				table[j][k++] = i++;
; 2671 : 				table[j][k] = i++;
; 2672 : 
; 2673 : 				*sum -= 9;
; 2674 : 				int result = cub_9(table, 23, i, j, k, n, sum, tab, I, J, K);

	push	DWORD PTR _K$[ebp]
	mov	DWORD PTR _j$190$[ebp], ecx
	push	DWORD PTR _J$[ebp]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	push	DWORD PTR _I$[ebp]
	push	0
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	push	ebx
	push	DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+edx*4+4], esi
	add	edx, 2
	mov	eax, DWORD PTR [edi+ecx*4]
	inc	esi
	dec	ecx
	mov	DWORD PTR _k$196$[ebp], edx
	mov	DWORD PTR _j$189$[ebp], ecx
	push	edx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR _k$197$[ebp], edx
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	dec	ecx
	push	ecx
	mov	DWORD PTR [eax+edx*4-4], esi
	lea	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR tv22784[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [eax+edx*4-4], esi
	lea	eax, DWORD PTR [edx*4]
	mov	DWORD PTR tv22076[ebp], eax
	inc	esi
	mov	eax, DWORD PTR [edi+ecx*4]
	mov	DWORD PTR [eax+edx*4], esi
	lea	eax, DWORD PTR [esi+1]
	add	DWORD PTR [ebx], -9			; fffffff7H
	push	eax
	push	23					; 00000017H
	push	edi
	call	?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z		; cub_9
	add	esp, 44					; 0000002cH

; 2675 : 				if (result == -1 && table[0][n - 1] != n * n) {

	cmp	eax, -1
	jne	$LN253@cub_9
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR tv22381[ebp]
	mov	edx, DWORD PTR tv23479[ebp]
	cmp	DWORD PTR [eax+ecx-4], edx
	je	$LN253@cub_9

; 2676 : 					//o_88(table, &i, &j, &k);
; 2677 : 
; 2678 : 					i = i - 9;
; 2679 : 					table[j][k--] = 0;

	mov	edx, DWORD PTR tv22784[ebp]
	mov	ecx, DWORD PTR tv22076[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], 0
	mov	ecx, DWORD PTR _k$196$[ebp]
$LN597@cub_9:

; 2729 : 
; 2730 : 				flag = 3;
; 2731 : 			}
; 2732 : 		}
; 2733 : 	}
; 2734 : 
; 2735 : //	printf("flagEND = %d\n", flag);
; 2736 : 
; 2737 : 	if (table[0][n - 1] == n * n)

	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _j$189$[ebp]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	ecx, DWORD PTR _k$197$[ebp]
	mov	edx, DWORD PTR _j$190$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-4], 0
	mov	eax, DWORD PTR [edi+edx*4]
	mov	DWORD PTR [eax+ecx*4-8], 0
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+ecx*4-8], 0
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+ecx*4-8], 0
	add	DWORD PTR [ebx], 9
	jmp	$LN253@cub_9
$LN259@cub_9:

; 2680 : 					table[j++][k] = 0;
; 2681 : 					table[j][k++] = 0;
; 2682 : 					table[j++][k] = 0;
; 2683 : 					table[j][k--] = 0;
; 2684 : 					table[j][k--] = 0;
; 2685 : 					table[j--][k] = 0;
; 2686 : 					table[j--][k] = 0;
; 2687 : 
; 2688 : 					table[j][k] = 0;
; 2689 : 
; 2690 : 					*sum += 9;
; 2691 : 					j--;
; 2692 : 				}
; 2693 : 			}
; 2694 : 
; 2695 : 
; 2696 : 		}
; 2697 : 
; 2698 : 		//последний квадрант
; 2699 : 		else if (*sum == 9) {
; 2700 : 			if (table[0][n - 1] != n * n && flag == 33 && j != 0 && table[j - 1][k] == 0) {

	mov	eax, DWORD PTR [edi]
	mov	ebx, ecx
	imul	ebx, ecx
	mov	edx, eax
	mov	DWORD PTR tv23477[ebp], ebx
	cmp	DWORD PTR tv22781[ebp], ebx
	je	$LN292@cub_9
	mov	edx, DWORD PTR _flag$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR _flag$4$[ebp], edx
	cmp	edx, 33					; 00000021H
	jne	SHORT $LN293@cub_9
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	test	edx, edx
	je	SHORT $LN293@cub_9
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR [edi+edx*4-4]
	cmp	DWORD PTR [eax+esi*4], 0
	jne	SHORT $LN293@cub_9

; 2701 : 				j--;
; 2702 : 				//o_2(table, &i, &j, &k);
; 2703 : 
; 2704 : 				table[j][k--] = i++;

	mov	ebx, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [esi-1]
	mov	DWORD PTR [eax+esi*4], ebx
	inc	ebx

; 2705 : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+edx*4-4]

; 2706 : 				table[j--][k] = i++;
; 2707 : 				table[j--][k] = i++;
; 2708 : 				table[j][k++] = i++;
; 2709 : 				table[j++][k] = i++;
; 2710 : 				table[j][k++] = i++;
; 2711 : 				table[j--][k] = i++;
; 2712 : 				table[j][k] = i++;
; 2713 : 
; 2714 : 				flag = 3;

	mov	DWORD PTR _flag$4$[ebp], 3
	mov	DWORD PTR [eax+esi*4-4], ebx
	inc	ebx
	mov	eax, DWORD PTR [edi+edx*4-4]
	mov	DWORD PTR [eax+esi*4-8], ebx
	inc	ebx
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+esi*4-8], ebx
	inc	ebx
	mov	eax, DWORD PTR [edi+edx*4-12]
	mov	DWORD PTR [eax+esi*4-8], ebx
	mov	esi, ebx
	mov	eax, DWORD PTR [edi+edx*4-12]
	lea	ebx, DWORD PTR [edx-3]
	inc	esi
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-8]
	mov	ecx, DWORD PTR _k$200$[ebp]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	eax, DWORD PTR [edi+edx*4-12]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	esi
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [edi]
	jmp	SHORT $LN252@cub_9
$LN293@cub_9:

; 2680 : 					table[j++][k] = 0;
; 2681 : 					table[j][k++] = 0;
; 2682 : 					table[j++][k] = 0;
; 2683 : 					table[j][k--] = 0;
; 2684 : 					table[j][k--] = 0;
; 2685 : 					table[j--][k] = 0;
; 2686 : 					table[j--][k] = 0;
; 2687 : 
; 2688 : 					table[j][k] = 0;
; 2689 : 
; 2690 : 					*sum += 9;
; 2691 : 					j--;
; 2692 : 				}
; 2693 : 			}
; 2694 : 
; 2695 : 
; 2696 : 		}
; 2697 : 
; 2698 : 		//последний квадрант
; 2699 : 		else if (*sum == 9) {
; 2700 : 			if (table[0][n - 1] != n * n && flag == 33 && j != 0 && table[j - 1][k] == 0) {

	mov	edx, DWORD PTR $T2[ebp]
	jmp	SHORT $LN596@cub_9
$LN292@cub_9:
	mov	eax, DWORD PTR _flag$[ebp]
	mov	DWORD PTR _flag$4$[ebp], eax
$LN596@cub_9:

; 2715 : 			}
; 2716 : 			if (table[0][n - 1] != n * n && flag == 23 && K != n / 3 - 1 && table[j][k + 1] == 0) {

	mov	ebx, DWORD PTR _j$[ebp]
	mov	esi, DWORD PTR _i$[ebp]
$LN252@cub_9:
	mov	eax, DWORD PTR tv22381[ebp]
	mov	edi, DWORD PTR tv23477[ebp]
	cmp	DWORD PTR [eax+edx-4], edi
	mov	edi, DWORD PTR _table$[ebp]
	je	SHORT $LN253@cub_9
	cmp	DWORD PTR _flag$4$[ebp], 23		; 00000017H
	jne	SHORT $LN253@cub_9
	mov	eax, 1431655766				; 55555556H
	imul	ecx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	dec	eax
	add	eax, edx
	cmp	DWORD PTR _K$[ebp], eax
	je	SHORT $LN253@cub_9
	mov	ecx, DWORD PTR [edi+ebx*4]
	mov	eax, DWORD PTR _k$200$[ebp]
	cmp	DWORD PTR [ecx+eax*4+4], 0
	jne	SHORT $LN253@cub_9

; 2717 : 				k++;
; 2718 : 				//o_8(table, &i, &j, &k);
; 2719 : 
; 2720 : 				table[j++][k] = i++;

	mov	DWORD PTR [ecx+eax*4+4], esi
	lea	edx, DWORD PTR [eax+1]

; 2721 : 				table[j++][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	inc	esi
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 2722 : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4], esi
	inc	esi

; 2723 : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 2724 : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+8]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi

; 2725 : 				table[j][k--] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+edx*4+8], esi
	inc	esi

; 2726 : 				table[j--][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4+4]
	mov	DWORD PTR [eax+edx*4+4], esi
	inc	esi

; 2727 : 				table[j][k++] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR [eax+edx*4+4], esi

; 2728 : 				table[j][k] = i++;

	mov	eax, DWORD PTR [edi+ebx*4]
	mov	DWORD PTR [eax+edx*4+8], ecx
$LN253@cub_9:

; 2729 : 
; 2730 : 				flag = 3;
; 2731 : 			}
; 2732 : 		}
; 2733 : 	}
; 2734 : 
; 2735 : //	printf("flagEND = %d\n", flag);
; 2736 : 
; 2737 : 	if (table[0][n - 1] == n * n)

	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR tv22381[ebp]
	imul	edx, edx
	pop	edi
	pop	esi
	mov	eax, DWORD PTR [eax+ebx-4]
	pop	ebx
	sub	eax, edx
	neg	eax
	sbb	eax, eax

; 2738 : 		return 0;
; 2739 : 	else /*if (table[0][n - 1] != 0 && table[0][n - 1] != n * n)*/
; 2740 : 		return -1;
; 2741 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?cub_9@@YAHPAPAHHHHHHPAH0HHH@Z ENDP			; cub_9
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _scanf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_scanf	PROC						; COMDAT

; 1282 :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __6DFAE8B8_stdio@h
	call	@__CheckForDebuggerJustMyCode@4
	lea	eax, DWORD PTR __Format$[ebp+4]
	push	eax
	push	0
	push	DWORD PTR __Format$[ebp]
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfscanf_l
	add	esp, 16					; 00000010H

; 1283 :         int _Result;
; 1284 :         va_list _ArgList;
; 1285 :         __crt_va_start(_ArgList, _Format);
; 1286 :         _Result = _vfscanf_l(stdin, _Format, NULL, _ArgList);
; 1287 :         __crt_va_end(_ArgList);
; 1288 :         return _Result;
; 1289 :     }

	pop	ebp
	ret	0
_scanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT

; 1064 :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __6DFAE8B8_stdio@h
	call	@__CheckForDebuggerJustMyCode@4
	call	___local_stdio_scanf_options
	push	DWORD PTR __ArgList$[ebp]
	push	DWORD PTR __Locale$[ebp]
	push	DWORD PTR __Format$[ebp]
	push	DWORD PTR __Stream$[ebp]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfscanf
	add	esp, 24					; 00000018H

; 1065 :         return __stdio_common_vfscanf(
; 1066 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 1067 :             _Stream, _Format, _Locale, _ArgList);
; 1068 :     }

	pop	ebp
	ret	0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 956  :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __6DFAE8B8_stdio@h
	call	@__CheckForDebuggerJustMyCode@4
	lea	eax, DWORD PTR __Format$[ebp+4]
	push	eax
	push	0
	push	DWORD PTR __Format$[ebp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H

; 957  :         int _Result;
; 958  :         va_list _ArgList;
; 959  :         __crt_va_start(_ArgList, _Format);
; 960  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);
; 961  :         __crt_va_end(_ArgList);
; 962  :         return _Result;
; 963  :     }

	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 644  :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __6DFAE8B8_stdio@h
	call	@__CheckForDebuggerJustMyCode@4
	call	___local_stdio_printf_options
	push	DWORD PTR __ArgList$[ebp]
	push	DWORD PTR __Locale$[ebp]
	push	DWORD PTR __Format$[ebp]
	push	DWORD PTR __Stream$[ebp]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);
; 646  :     }

	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
	mov	ecx, OFFSET __A2143F22_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
	mov	ecx, OFFSET __A2143F22_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
